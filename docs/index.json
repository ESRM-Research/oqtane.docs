{
  "admin/admin-navigation/admin-dashboard.html": {
    "href": "admin/admin-navigation/admin-dashboard.html",
    "title": "Admin Dashboard | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Admin Dashboard To view the Admin Dashboard, do the following. Log into an account with either a Host Users or Administrators role Use the top navigation to select the gear icon in the top right of the page. This should bring up the Control Panel . From the Control Panel, click the Admin Dashboard button at the top to bring up the Admin Dashboard window, as shown below. Alternatively, instead of steps 2 and 3, you can open the URL https://example.com/admin , where you should replace https://example.com with the URL of your website. The Admin Dashboard displays icons for different administration tools. The icons for the Site Adminstration role are a subset of the icons displayed for the Host Administration role. Site Administrator Admin Dashboard for the Site Administrator The default tools available for a Site Administrator include the following. Site Settings - Sets the website name, logo, favicon, theme, SMTP host, progressive web app settings, and more. Page Management - Lists all the website pages and offers add, edit, and delete capabilities. User Management - Lists all the website users and offers add, edit, delete, and role setting capabilities, a global search function, and editable user profiles. Profile Management - Specifies custom fields for the user profiles. Role Management - Specifies custom roles and role permissions for creating and editing pages and modules. File Management - Offers folder add and edit capabilities. Offers file upload, delete and edit capabilities. Recycle Bin - Offers features similar to the recycle bin on a desktop operating system. Used for deleted pages and modules. Url Mappings - Displays a list of mapped URLs or broken URLs. Visitor Management - Displays records of login metadata for all website visitors. Language Management - Manages language translations used on pages of the site. Host Administrator Admin Dashboard for the Host Administrator In addition to the tools shown for the Site Administrator, the default Admin Panel for a Host Administrator displays the following tools. Event Log - Displays a log of major website events, filterable by information level (trace, debug, error, etc.) and event type (create, read, update, etc.) Site Management - Displays a list of current sites and offers the ability to add new sites or edit sites for this Oqtane instance. Module Management - Displays a list of all installed modules with edit capabilities. Offers the ability to install or create new modules. Theme Management - Displays a list of all installed themes with edit capabilities. Offers the ability to install or create new themes. Scheduled Jobs - Displays a list of all scheduled jobs and offers edit, view, and stop capabilities. Sql Management - Provides the ability to execute SQL queries against the database of the installed websites. System Info - Provides read-only metadata about the system hosting Oqtane. Offers the ability to set values for logging, notification, error detail levels, and more. System Update - Provides the ability to install the latest system updates for this Oqtane instance. If you want to add new options to the admin dashboard, then that can be done by creating a new page either in the control panel or in the admin dashboard's page management and specifying that you want \"Admin\" as the parent of the new page."
  },
  "admin/admin-navigation/control-panel.html": {
    "href": "admin/admin-navigation/control-panel.html",
    "title": "Control Panel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Control Panel When managing your Oqtane site as an administrator, you will most likely be doing most of your daily work in the Control Panel. As an administrator, you will be able to use nearly every part of the Control Panel. To open the control panel, click the gear icon located in the top right-hand corner of the screen. Those with content management permissions, which are defined by a user account's roles, in Oqtane are often referred to as �content editors.� Content editors can typically view only some of the Control Panel�the parts that are required in order to perform other related tasks, such as adding a module to a page. It is worth noting that the Control Panel you'll be using is the one that ships �out of the box� with Oqtane. However, it is one of numerous extension points in Oqtane. Like modules, themes, and other extensions, the Control Panel can be replaced with a custom or third-party alternative."
  },
  "admin/admin-navigation/control-panel/control-page.html": {
    "href": "admin/admin-navigation/control-panel/control-page.html",
    "title": "Control Panel Page Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Control Panel Page Management The page management feature allows you to manipulate the page you are currently on, by providing options for adding, editing, deleting, and publishing pages. This feature also has many of the same capabilities as the admin dashboard's Page Management feature , with the only difference being that the control panel's page manager only has the ability to change the page you are currently on. Add The add feature adds a new page to your website and brings up the page management window, which allows you to specify the settings, appearance, and permissions for the page you are adding. The fields which exist in the page management window are the: Settings Name: Which specifies the name that will be displayed in the navigation bar. Parent: Which will specify the page that this page will be underneath, meaning that the added page will be put to the right of the page specified in the navigation bar at the top. Insert: Specify where the name for the page will appear in the navigation bar, by saying where the page should appear among all of the children of the parent that has been selected. Navigation: Say whether you want the page to be displayed to users that fit within the permissions, or if you want the page to be hidden to everyone but administrators which can be useful while editing a page. URL Path: The url is what is put in the web page's address, for example if the url path is set to page1 then the address might be www.website/page1.com. If no URL path is specified then the URL will by default be set to be the same as the name field above. Redirect: Input a URL that is the same as the URL path of another page in the site that user will be sent to, remember that if no URL path is specified for another page then the name will be used. If this feature is implemented then you will not be able stay on the page to use the control panel's page manager, so you will need to use the admin dashboard's page management feature to edit or delete page's with this feature. Appearance Title: The name that is displayed on the web page's tab. Theme: The theme that the web page will take on from a selection of styles and colors that can be downloaded by the host user in the theme manager . Layout: The amount of content panes that will be available. Which are basically how many columns will be available to have content and modules inserted inside of. Default Container: Choose the layout of modules for the page, like hw the titles typically displayed above the modules will be. Icon: Input a favicon address or other icon address to include an icon beside the name of your page. Personalizable: This feature gives a page that is unique to every individual and allows them to add modules and edit the content of the page, so only the individual can see what they put onto the page. Permissions View: This is what allows different users to see certain pages and any users that are within certain roles, that can be specified in the admin dashboard's role management feature will be able to see or not see the page depending on what you have checked the box for the role they fit into. Edit: This allows users that fit into the specified roles to be able to edit pages using the content editor . Specific Users: The permissions tab also has the ability for you to enter a specific username and allow for you to set custom permissions for any specific users that you want. Edit The edit feature shares all of the same features as the add feature, allowing you to change the settings, appearances, and permissions of any page, with the insert feature being replaced by the move feature. The edit feature also shows you when a page was created and when the page was last edited at the bottom of the page management window. Delete The delete feature will delete the page that you are currently on. Publish The publish feature makes any page public that you have previously specified to be hidden, if you have marked a page as not navigable when the page was created. It is useful to have this feature to be able to work on a page that is hidden from regular users until it is finished and ready to be officially added to the site."
  },
  "admin/admin-navigation/control-panel/modules.html": {
    "href": "admin/admin-navigation/control-panel/modules.html",
    "title": "Modules | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Modules Modules are a key feature of Oqtane as they allow for you to insert a massive variety of things into your web page. There are a wide variety of different that can be added to your page for a high level of customization. An administrator also has the ability to both download new modules onto the website or upload modules you have created to the marketplace, options which are found in the admin dashboard's module management feature . On the side control panel's module management section, you have the option to: Add A New Module: which will put a new module of your choosing onto the page which has the option of being a: Admin Module: These are only available to people within the administrator role and there are many more default modules available to put onto your webpages. Common Module: These are available both to administrators and to registered users to be able to use on pages that are specified as personilizable, meaning users can modify them as they see fit and they are unique and only viewable to registered users. Developer Module: This feature is for placing a module creator onto a page which will provide you with useful pre-built structure and methods for writing code for your own modules. Add An Existing Module: Provides the ability to select modules that are already on other pages from your website. Page: A list of other your other web pages where you can select a page on your site that has the module you would like. Modules: A list of modules that are on the selected web page for you to select. Directly below these options, when a module is selected, the module's description will appear in a purple box so you have a better understanding of what the module is for. The other module options below this are: Title: Which is what will be displayed directly above the module as its title, if nothing is selected then the module's name will be put as the title. Pane: Select which content pane you want the module to go inside of. Panes are made visible with the content editor . Container: Select if you would like to have a title displayed above the module or not have one."
  },
  "admin/admin-navigation/index.html": {
    "href": "admin/admin-navigation/index.html",
    "title": "Admin Navigation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Admin Navigation Top Navigation In the default theme for Oqtane, the upper right part of the header of any given page displays the login name for the currently logged in user and a link for logging out of the site. This is displayed in the annotated screenshot below. If the logged-in user also has the Host Users or a Administrator role, then two icons are also displayed on the right side of the header. Clicking on the left pencil icon allows the user to edit the page that is currently being displayed. Clicking on the gear icon brings up the Control Panel as a slideout on the right, as discussed below. Control Panel Navigation The Control Panel offers three main areas for administration, as shown in the annotated screenshot below. The first option is a button at the top of the Control Panel that opens the Admin Dashboard . The Admin Dashboard allows multiple options for site or host administration. The second option is for managing the metadata, permissions, and theme of the page . The third option for administration is for adding modules to a page ."
  },
  "admin/host-administration/event-log.html": {
    "href": "admin/host-administration/event-log.html",
    "title": "Event Log | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Event Log The Event log allows you to know what's happening on your website at all times.On the surface, the Event log may seem very simple and it is. You have a listing of the most recent events immediately visible on page load. This list is going to be any number of pages with 10 events by default on each page of results and the option to see more rows at a time. A paging feature at the bottom of the list allows you to move from page to page. If you want to filter the events to see more or fewer events, you have three controls at the top of the listing to help you. You can filter by the type of event that you want to see with the event Level and Function: Level: The level specifies the severity of the event and includes options for: Trace Debug Information Warning Error Critical Function: The function is what type of feature is being used and is color-coated for easier viewing. It includes options for: Create Read Update Delete Security Other Rows: Choose how many rows you would like to have displayed on page. The feature and date are also shown in the event list but aren't sortable fields, with the feature showing what part of the Oqtane framework is being used. For example, you might be interested only in seeing instances of site users attempting to log in. To see this, simply change the Function drop-down list to Security, and only security events like the login event will be shown to you. In other cases, you might want to see a larger list of events. There are many reasons for this. One reason might be searching for something specific using built-in features of your web browser, such as using Ctrl+F to “find” something in the page. As an example, you could switch the event log to show 100 events by changing the rows. For each event that is displayed you can select the detail button to show more inforamtion on where the event happened and a more in-depth description on what the event is."
  },
  "admin/host-administration/index.html": {
    "href": "admin/host-administration/index.html",
    "title": "Host Administration | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Host Administration The host user has the highest possible level of permissions in a Oqtane instance and can manage any individual site, set defaults for the creation of new sites, and manage additional configurations that support all sites. An Oqtane site administrator is primarily concerned with the look, feel, functionality, and content of a site. A host is more concerned with the configuration, performance, monitoring, and support of the entire Oqtane instance. As the Oqtane host (or any user with superuser permissions), you need to have a working grasp of all the features and configuration options available to you. A host logs into a Oqtane site just like any other user, just using the host account that is created when the Oqtane application is first launched. In addition to the site options discussed in the site administration control panel and admin dashboard , the host account has more options than an administrator account in the admin dashboard, which includes: Event Log: Which contain information on various events that have occurred on the site like errors or anything that has been created, updated, or deleted with more info on event log . Site Management: Which allows for the addition and modififation for all of the different sites you have with more info on site management . Module Management: Which allows you to install new modules and edit existing modules with more info on module management . Theme Management: Which allows you to install new themes to change the look of you webpages with more info on theme management . Scheduled Jobs: Which allows for the creation of jobs that will do something every time a specified amount of time passes with more info on scheduled jobs . SQL Management: Which lets you run SQL queries in your databases with more info on sql management . System Info: Which gives information on your verion of the Oqtane framework and allows you to see inforamtion and methods in Oqtane's api with more info on system info . System Update: Which allows you to keep the Oqtane framework up to date and allow you to use NuGet packages with more info on systen update ."
  },
  "admin/host-administration/module-management.html": {
    "href": "admin/host-administration/module-management.html",
    "title": "Module Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Module Management The module manager provides a list of all of the modules that are currently installed in your version of the Oqtane framework. Modules are a key feature of Oqtane and allow for a variety of features to be placed on your pages. At the top of the module manager page there is a install button to install a module from the list provided or by using the upload tab, you can use a NuGet package of a module, so that it will be included as one of the possible modules to use on the site. Inside the list of modules there is also the options to edit modules which will show an overview of the module with a description and an option to delete any module that is not a default Oqtane module."
  },
  "admin/host-administration/scheduled-jobs.html": {
    "href": "admin/host-administration/scheduled-jobs.html",
    "title": "Scheduled Jobs | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Scheduled Jobs The Schedule page enables you to manage what is essentially recurring, scheduled batch processing for Oqtane.There are many instances where a host may want to set something up to automatically do some task like sending a notification to users and this can be accomplished with the use of this feature. The options that are available on this page are: Add Job: Adds a new job by filling out the fields of: Name: Choose the jobs name. Type: Specify the type by either using NotificationJob or by creating your own job method in the infrastructure.jobs class in the Oqtane server. You will need to specify the location of the job in the framework, Ex. (Oqtane.Infrastructure.NotificationJob, Oqtane.Server) with the job being a notification job from the infrastructure class, which is a class inside of the Oqtane.Server. Enabled: A yes or no to say if you want the job to be active at this time or not. Runs Every: Choose an amount of time that specifies how often the job will execute. Starting: Enter a date for when you want the job to start. Ending: Enter a date for when you want the job to end. Retention Log: A number to specify the amount of logs that will be retained. View Logs: Shows all of the logs generated by all of your jobs within their retentio log number. Refresh: This refreshes the page to get new logs that have been made while you have been on this page. Below this these options is a list of all of the jobs that are currently set up to be executed, that have a few options: Edit: Has all of the same fields as adding a job plus a field for the next execution: Next execution: Input a date that will be the next time the job will run after the stop button has been pushed. Delete: Deletes the job so that it will never execute again. Log: View the logs that this jobs has generated. Stop: Stops the job from executing anymore, until a next execution has been specified in the edit window."
  },
  "admin/host-administration/site-management.html": {
    "href": "admin/host-administration/site-management.html",
    "title": "Site Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Site Management Oqtane provides the ability to have multiple sites at you disposal within the singular Oqtane application. The Site Management page provides an inventory of all the sites in a Oqtane instance and quick access to the Site Settings functionality for each. Deleting your sites is permanent! So it should not be done unless you are certain you want to delete this site. The options to add and edit the set has a few options: Site Name: This field is what the site will be called. Aliases: This is what the address of the site is that is being created adn can create websites under the default top level website, by using a / forward slash with the a name you want under the top level website. Default Theme: Choose the theme, which is the colors and styles that will be the default for pages created on this website. Default Layout: Choose how many content panes you want to have on a page by default. Default Container: Choose if you want a title header for your modules on the site by default. Site Template: Select if you want a template for your site or no template for your site. Tenant: Select the tenant for the site, which is the database that will be used for the site. If you want to create a new tenant or database then you will have to select the \"create a new tenant\" option which will drop down with another menu that allows for a new tenant to be created, this menu includes: Name: This is the name for the new tenant on the site, that you will be creating and what will be displayed when selecting tenants in the future. Database Type: Choose if you would like the database to have a local database, which will create a Microsoft SQL database on your local database on yur system, and an SQL server which creates a that is linked to an SQL server. Server: This is the location of where the server where the database will be located and a default value is provided for a local database. Database: This is the name that is initialized for the database inside of the server and a default value is provided for a local database. Integraded Security: Choose if you want the host superuser for the site to have the same credentials (username and password) as the database's root account. Host Username: This is the username of the super user host account that will be created for the site, it will also be the database's root username if integrated security is set as true. Hosts Password: This is the super user host account's password, it will also be the database's root account password if integrated security is set as true."
  },
  "admin/host-administration/sql-management.html": {
    "href": "admin/host-administration/sql-management.html",
    "title": "SQL Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "SQL Management The SQL console permits database access directly from inside Oqtane. So the host, even if it's not near an instance of SQL Server Management Studio, still has access to a powerful database tool. This allows for SQL statements to be run directly from the Oqtane application onto the tenants which are also called databases. The results of any SQL query that is run will be returned directly below the execute button."
  },
  "admin/host-administration/system-info.html": {
    "href": "admin/host-administration/system-info.html",
    "title": "System Info | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "System Info All of the general information that you need to know about the Oqtane framework is available in the sytem information feature, which includes things like the Oqtane framework version, the blazor runtime, the server path, the CLR version, the OS version, and the server's current time. The System information feature also provides access to Oqtane's API with many of Oqtane's methods and the ability to try them out using the Swagger user interface. There is also the option to restart the Oqtane framwork on this page if you have made a change to the ystsme that would require a restart such as installing or deleting themes or modules."
  },
  "admin/host-administration/system-update.html": {
    "href": "admin/host-administration/system-update.html",
    "title": "System Update | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "System Update The system update feature allows you to update the Oqtane framework to keep your website up to date and ensure that administrators will have access to all capabilities and featiures that Oqtane provides. The system update feature also provides the ability to upload a NuGet package to be included with your local version of the Oqtane framework and is uploaded by selecting the NuGet file from its location on your system and then presssing the upload button to place the NuGet package within a version of the framework, then pressing the install button to update you verion of the framework to include the uploaded NuGet package. Uploading a NuGet package is for the use of uploading features that exist in a newer version of Oqtane, but you have not installed the newest version of Oqtane."
  },
  "admin/host-administration/theme-management.html": {
    "href": "admin/host-administration/theme-management.html",
    "title": "Theme Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Theme Management The theme page is not used that often. Generally, it's used during the development of a new site and sometimes is used during the rollout of a new site brand. It allows you to view the available themes and containers that have been installed in your site and then applied as the default for new and existing pages and modules. Themes on Oqtane provide a multitude of different colors and styles for pages to be presented in. These themes can provide unique looking pages and websites as a whole. There are two defualt themes for Oqtane, the Blazor theme and the Oqtane theme. You can also download new themes to use by clicking the install theme button at the top of the page and choosing some themes to download, so you change the look of your site. There is also an upload tab which allows you to put NuGet files for themes that are not available in the download menu onto your Oqtane framework."
  },
  "admin/index.html": {
    "href": "admin/index.html",
    "title": "Documentation for Oqtane Administration | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Documentation for Oqtane Administration Oqtane has a robust set of options for administration of the pages, modules, sites and the overall host instance. Documentation for Oqtane Administration is broken down into the following sections. Installation - How to install Oqtane Admin Navigation - A good place to start if you are trying to figure out how to navigate through the different admin options Pages - How to edit and manage a single page Modules - An overview of modules and how they are created, managed, and used in pages Site Administration - A site member with the Administrator role can manage a given site within the Oqtane instance. Privileges include the ability to manage site settings , pages , users , profiles , roles , files , visitors , languages , the recycle bin , and url mappings . Host Administration - A site member with the Host Users role can manage the entire Oqtane instance as a whole as well as the sites within the Oqtane instance. In addition to the privileges given to a Site Administrator, the Host Administrator has the ability to manage event logs , sites , modules , themes , scheduled jobs , system updates , and execute SQL queries against the Oqtane database with SQL management ."
  },
  "admin/installation/index.html": {
    "href": "admin/installation/index.html",
    "title": "Installation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Installation Install an Official Release on IIS The Official Oqtane Relases are found on Github Read the detailed instructions for installing Oqtane on IIS Upgrade an Existing Oqtane Read the instructions for upgrading Oqtane Reset an Exiting Oqtane If you have already installed a previous version of Oqtane and you wish to do a clean database install, simply reset the DefaultConnection value in the Oqtane.Server\\appsettings.json file to \"\". This will trigger a re-install when you run the application which will execute the database installation scripts. Install Oqtane for Development Oqtane Version 3 (.NET 6) Install .NET 6 SDK Install the latest edition of Visual Studio 2022 with the ASP.NET and web development workload enabled. Oqtane works with ALL editions of Visual Studio from Community to Enterprise. If you wish to use LocalDB for development (not a requirement as Oqtane supports SQLite , mySQL and PostgreSQL ) you must also install the Data storage and processing . Clone the Oqtane dev branch source code to your local system. Open the Oqtane.sln solution file and Build the solution. Make sure you specify Oqtane.Server as the Startup Project and then Run the application. Oqtane Version 2 (.NET 5) Note that Microsoft support for .NET 5 ended on May 8, 2022 Install the latest .NET 5 SDK (v5.0.100) Install the latest edition (v16.8 or higher) of Visual Studio 2019 (Community, Professional, or Enterprise Editions) with the ASP.NET and web development workload enabled . Oqtane works with ALL editions of Visual Studio from Community to Enterprise. If you do not have a SQL Server installation available already and you wish to use LocalDB for development, you must also install the .NET desktop development workload . Download a release or Clone the Oqtane source code to your local system. Open the Oqtane.sln solution file and Build the solution. Make sure you specify Oqtane.Server as the Startup Project and then Run the application. Oqtane Version 1 (.NET core 3) Note that Microsoft support for .NET 3.1 will end on December 13, 2022 Install .NET Core 3.1 SDK (v3.1.300) Install Visual Studio 2019 (Community, Professional, or Enterprise Editions) with the ASP.NET and web development workload enabled. Oqtane works with ALL editions of Visual Studio from Community to Enterprise. If you do not have a SQL Server installation available already and you wish to use LocalDB for development, you must also install the .NET desktop development workload. Download a release or Clone the Oqtane source code from a v1.x Tag to your local system. Open the Oqtane.sln solution file and Build the solution. Make sure you specify Oqtane.Server as the Startup Project and then Run the application."
  },
  "admin/modules/add-ext-modules.html": {
    "href": "admin/modules/add-ext-modules.html",
    "title": "Adding Non-Default Modules | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Adding Non-Default Modules There is a catalog service at www.oqtane.net for modules that have not been included in the default installation of Oqtane. Oqtane takes the approach of embedding information about the catalog service items into the Oqtane application itself, similar to how many popular applications (e.g., WordPress) give you the ability to find third party plugins or modules from within the admin interface. The lists of non-default modules are displayed within the Oqtane instance from within certain admin modules. You can find these non-default modules from the following admin modules. Theme Management - The Install Theme button displays a list of non-default themes that can be downloaded and installed Module Management - The Install Module button displays a list of non-default modules that can be downloaded and installed Language Management - The Add Language button brings up a dialog with Manage, Download, and Upload options. Clicking the Download option displays a list of possible languages to install. The ability to download more recent versions of Oqtane is available as well. System Update - The Download button will download any newer versions of the Oqtane framework Note that once any of these options for a new theme, module, language, or system update is installed, then the Oqtane instance will need to be restarted in order to have the new item or update enabled. After new modules are installed, they will usually show up under the Common Modules category in the control panel."
  },
  "admin/modules/adding-modules.html": {
    "href": "admin/modules/adding-modules.html",
    "title": "Adding Modules to a Page | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Adding Modules to a Page To add a module to a page, open the control panel . The bottom section of the control panel provides three module management drop-downs along with some other text fields. The choices for these drop downs and text fields will determine the module and its settings that are added to the current page when the \"Add Module to Page\" button is clicked. As shown in the annotated screenshot below, for the three drop downs starting from the top, we will call them the \"Mode\", \"Group\" and \"Module\" choices. The first drop-down \"Mode\" choice will determine the overall settings of the module that is added to the page. Options for first \"Mode\" drop-down are as follows. Add New Module - Add a module with no preset values except what is set in the control panel Add Existing Module - Add a module from another page using its already preset values Add New Module Option When the \"Add New Module\" is selected from the first \"Mode\" drop-down, then the options for the second \"Group\" drop down will be Admin Modules , Common Modules , and Developer Modules . Once a second \"Group\" drop-down choice is made, then only the modules that belong to that group are displayed in the third \"Module\" drop-down. Whatever module is then selected in the third \"Module\" drop-down will be the module that is added when the content manager clicks the \"Add Module to Page\" button at the bottom of the control panel. The text boxes after the drop-downs allow you to set the following fields for the module. Title - Set the text that will be displayed directly above the module. If this is left blank then the module's name will be used as the title. Pane - Select which content pane you want the module to go inside of. Panes should be visible when the page is in edit mode . Container - Select if you would like to have a title displayed above the module or not have one. Visibility - Options are \"Page Editors Only\" or \"Same As Page\" Add Existing Module Option When the \"Add Existing Module\" is selected from the first \"Mode\" drop-down, then the options for the second \"Group\" drop down will display all of the current pages in the site. Choosing any page in this second \"Group\" drop down will cause only the modules that are used in the selected page to be displayed in the third \"Module\" drop-down. Whatever module is then selected in the third \"Module\" drop-down will be the module that is added when the content manager clicks the \"Add Module to Page\" button at the bottom of the control panel. The key difference here is that the values that were used for that module on the existing page will also be used for the module being inserted on the current page. In other words, inserting the module in this page is like using a reference to the same module on the other page. This option can increase efficiency and good practices for many situations. Say, for example, you have an HTML module that holds a banner image and you want that banner image to also exist on five specific pages in your site. Instead of adding a new module to all five of those pages and then inserting the same image, you can simply go into the Module Management section of the Control Panel and click \"Add an Existing Module\" and select the existing module on an existing page. A content manager can then make edits in one module and instantly have those edits reflected across every page on which the module is shared. The text boxes after the drop-downs allow you to set the following fields for the module. Title - Set the text that will be displayed directly above the module. This text will override the title of the existing module. If this is left blank then the referenced module's title will be used. Pane - Select which content pane you want the module to go inside of. Panes should be visible when the page is in edit mode . Container - Select if you would like to have a title displayed above the module or not have one. Visibility - Options are \"Page Editors Only\" or \"Same As Page\""
  },
  "admin/modules/creating-modules.html": {
    "href": "admin/modules/creating-modules.html",
    "title": "Creating a New Module | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Creating a New Module"
  },
  "admin/modules/default-modules.html": {
    "href": "admin/modules/default-modules.html",
    "title": "Default Modules | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Default Modules When you install Oqtane, the platform ships with a base set of modules already installed. These modules are categorized into one of three groups. Common Modules - These are available both to administrators and to registered users to be able to use on pages that are specified as personalizable, meaning users can modify them as they see fit and they are unique and only viewable to registered users. The HtmlText module is the only default module under this category. Developer Modules - The Module Creator module is the only default module under this category. The Module Creator will provide a useful pre-built structure and methods for writing code for a custom module. Admin Modules - These are only available to members who have the Host Users or Administrators role. The default admin modules are listed below. Admin Modules The admin modules include the following. Dashboard - The Admin dashboard Error - Displays an error message Files - File management Jobs - Scheduled jobs Languages - Language management Login - Show login button or login status if someone is already logged in Logs - Event Logs ModuleDefinitions - Modules - Module management Pages - Page management Profiles - Profile management to set which fields are used in a profile RecycleBin - Recycle bin Register - Message about status of registration for the site Reset - For resetting password Roles - Role management Site - Site Settings Sites - Site management Sql - Create SQL queries against the database SystemInfo - System info Themes - Theme management Upgrade - System update UrlMappings - URL mappings UserProfile - User profile for the current user Users - User management Visitors - Visitor management"
  },
  "admin/modules/htmledit-module.html": {
    "href": "admin/modules/htmledit-module.html",
    "title": "The HTML Editor Module | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "The HTML Editor Module"
  },
  "admin/modules/index.html": {
    "href": "admin/modules/index.html",
    "title": "Modules | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Modules What is a Module? A module is a reusable, plug-and-play piece of functionality. It's a way to extend the functionality of the framework with different capabilities. There can be multiple modules on a page, including multiple instances of the same module on a page. It's very common to have multiple HTML modules on a single page. When you install Oqtane, the platform ships with a set of default modules . You can also extend an Oqtane installation with additional modules from the catalog service . You can also create your own custom modules for your site or for use by other Oqtane sites. Modules on Pages Modules can be placed onto pages from the control panel in locations called “panes”. These panes are defined by the theme's designer. These themes dictate the overall look and feel of your site and are often created by a front-end designer. Panes can span the full width of the page or be positioned in a column fashion. It may be helpful to think of panes as windows in the design of the site where you can drop in modules. You can move modules around the panes when in edit mode . An example of a page in edit mode with the panes displayed is shown below."
  },
  "admin/pages/creating-page.html": {
    "href": "admin/pages/creating-page.html",
    "title": "Creating a Single Page | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Creating a Single Page Site members with a Host Users or Administrators role have permissions to create a new page in the following two ways. From the Control Panel , click the Add button under the Page Management section From the Admin Dashboard , click the Page Management icon. From the Page Management screen, click the Add Page button. When you create a page, you can set the page metadata, permissions, and theme. These options are described more fully in the Page Settings description. After you create a page, then the page will need to have modules embedded within it in order to be functional. How to add modules is explained in more detail in the Adding Modules to a Page section."
  },
  "admin/pages/editing-page.html": {
    "href": "admin/pages/editing-page.html",
    "title": "Editing a Single Page | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Editing a Single Page You can edit the page you are viewing if you have the Host Users or Administrators role. On the upper right corner of the page, you should find a pencil icon. By clicking on the pencil icon, you can edit the content of the current page. This provides a very user-friendly and intuitive approach to managing content. Whenever you want to edit content in Oqtane, just go to the location where the content resides and edit it right there in place. There are several different aspects to editing the current page. First of all, there are some common features that are available to all modules on a page. The common features are described below under the headings of Managing Modules and Moving Modules. Each module on the page may also have other features for editing as well. For example, the HTML Editor Module is commonly used on pages and includes an Edit button, as highlighted in red in the screenshot below. Notice that the screenshot also displays a reminder for the locations of the available panes when placing modules on a page. The available panes are determined by the template that is used by this page. Managing Modules If you are in edit mode and modules have been placed on a page, then you can view a module drop-down menu for each of the modules. Select the small downward pointing arrow in the top left of the module to display a drop-down menu that allows you to perform a variety of operations, as shown in the screenshot below. The first 5 options in the module drop-down menu are described below. Manage Settings - Brings up the module's settings and permissions which allow you to change the following. Title - The title displayed above the module. Container - Specify if you want the title to be displayed for the module. Display on All Pages - Choose whether you want this module to be on every page on the site. Page - Change the page that the module is displayed on. Permissions - Specify either what roles or individual users should be able to view or edit the page. Unpublish Module - Hides the module from everyone but the site administrators for instances where you want to edit modules. Delete Module - Deletes the module from the page. Import Content - Enter a file's address to import it into the module, such as a image address to include it. Export Content - Enter a file address to select where to export data from a module. Moving Modules The next set of options in the module drop-down menu may be different depending on the location of the module in the template. These possible options are described below. Move to Top - Moves the modules to the top of the page so that it is the first module displayed. Move Up - Moves the module up once so that it is displayed above the module above it. Move Down - Move the module down once so that it is displayed below the module beneath it. Move to Bottom - Moves the module to the bottom of the page, below all other modules. If the page has the layout for multiple panes, which allows for three center rows and a top and bottom row that can have content inserted into them, then there will be additional options available which are described below. Move to Top Pane - Moves the module to the content pane at the top of the page. Move to Left Pane - Moves the module to the left-most column. Move to Right Pane - Moves the module to the right-most column. Move to Content Pane - Moves the module to the central column. Move to Bottom Pane - Moves the module to the pane at the bottom of the page."
  },
  "admin/pages/index.html": {
    "href": "admin/pages/index.html",
    "title": "Pages | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Pages A website is made up of one or more pages. For a page to be functional it should have one or more modules embedded within it. Options for embedding modules in a page is described in the Adding Modules to a Page section. Page Theming with Panes Each page can use a different installed theme if desired. A theme is set up with a certain layout consisting of panes. For example, part of the left side of the pane layout for the default Oqtane theme is shown below. This is only a partial screenshot of the entire set of panes in order to make it readable on this page. When a module is added to a page, it will be added in any one of the panes within the theme of the page. The default Oqtane installation has options for an Oqtane theme or a Blazor theme. Editing and Managing Pages Members with the Host Users or Administrators role have permissions to create, manage, and edit pages. Create a Single Page - Create a new page from the Control Panel or the Page Management screen Edit a Single Page - Editing a page can mean adding, removing, or modifying the content or the metadata for the modules on the page Manage Multiple Pages - From the administrative interface you can view all page names and view or delete the page or set the page metadata and permissions"
  },
  "admin/pages/page-settings.html": {
    "href": "admin/pages/page-settings.html",
    "title": "Single Page Settings | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Single Page Settings You can configure the page settings for a given page when you create a new page or edit the page settings, for example from the Edit button in the control panel . The page settings include the page metadata, appearance, permissions, and theme. Page Metadata and Appearance Settings The metadata and appearance settings are the default tab displayed for the single page settings, as show in the screenshot below. The metadata settings for a given page are described below. Name - Parent - Insert - Navigation? - Clickable? - Url Path - Redirect - The appearance settings for a given page are described below. Title - Meta - Theme - Default Container - Icon - Personalizable? - Page Permissions The page permission settings are the second tab displayed, as show in the screenshot below. As can be seen in the screenshot, View and Edit permissions can be set for this page using a role or for a given user. Page Theme Settings The page theme settings are the third tab displayed, as show in the screenshot below. The theme settings for a given page are described below. Setting Scope - Show Login? - Show Register? - Display Fixed Footer? -"
  },
  "admin/site-administration/content-editor.html": {
    "href": "admin/site-administration/content-editor.html",
    "title": "Content Editor | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Content Editor The content editor is what allows you to edit the modules on the page in a variety of ways. You access the content editor by clicking on the pencil on the top right side of the page which then shows the borders of the content pane which the modules are put inside of, as well as a small downward pointing arrow beside each module that allows you to open a menu to interact with the modules. The options for the module's menu are: Manage Settings: Brings up the module's settings and permissions which allow you to change the: Title: The title displayed above the module. Container: Specify if you want the title to be displayed for the module. Display on All Pages: Choose whether you want this module to be on every page on the site. Page: Change the page that the module is displayed on. Permissions: Specify either what roles or individual users should be able to view or edit the page. Unpublish Module: Hides the module from everyone, but the site administrators for instances where you want to edit modules. Delete Module: Deletes the module from the page. Import Content: Enter a file's address to import it into the module, such as a image address to include it. Export Content: Enter a file address to select where to export data from a module. Move to Top: Moves the modules to the top of the page to be the first module displayed. Move Up: Moves the module up to be above the module above it. Move Down: Move the module down below the module beneath it. Move to Bottom: Moves the module to the bottom of the page, below all other modules. If the page has the layout for multiple panes, which will allows for three center rows and a top and bottom row that can have content inserted into them, then there will be additional options available which are: Move to Top Pane: Moves the module to the content pane at the top of the page. Move to Left Pane: Moves the module to the left-most column. Move to Right Pane: Moves the module to the right-most column. Move to Content Pane: Moves the module to the central column. Move to Bottom Pane: Moves the module to the pane at the bottom of the page."
  },
  "admin/site-administration/file-management.html": {
    "href": "admin/site-administration/file-management.html",
    "title": "File Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "File Management Nearly everything you could need to do with files and folders in Oqtane can be done from this view. You have the ability to upload, edit, and delete files and folders. You can also control where files are stored and what permissions should be applied to which folders.Folder permissions specified by roles allow you to determine who can see folders and files and who is allowed to modify the contents of a folder. The options provided by the file manager are: A drop down menu to select the file in which you what your view to placed in. Edit Folder: Lets you change the parent of the folder, the name of the folder, and the permissions for what roles are able to see and access the folder and its files. Add Folder: Allows you to create a new folder with the ability to choose a name, parent folder, and permissions to access. Upload Files: This is the feature that allows for user to upload files like images from their local system to a folder in Oqtane and allows for files to downloaded from Oqtane to their local system."
  },
  "admin/site-administration/index.html": {
    "href": "admin/site-administration/index.html",
    "title": "Site Administration | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Site Administration Site administration in Oqtane is the proccesses, tasks, and features that it takes to effectively run a website in Oqtane. This includes things like managing users, security, site settings, configurations, and content using the features available to them, in both the control panel and the admin dashboard . Site administration can take on many forms, but there are two use cases that you should be familiar with. First, there's site administration as defined by Oqtane.You enable this by adding the Administrators security role as one of the assigned roles for the account. That way, all “admin” features will be available for that user across that specific site. Site administration can take on a hybrid of another sort as well, where you as the site administrator can define a different kind of administration for your site. This would be a kind of administration where you define a subset of administration capabilities and assign them to more privileged users to avoid having to make them an actual administrator. As an example, there may be times when you want to create a security role in the role manager that might be named something like Site Admin. You would then create a page or pages on the site that contain some of the Admin modules, assigning permission to the newly created Site Admin security role so that only participants of that security role can see them. In these areas, you can also add references or links to features that normally require Administrator permissions, provided you set up your permissions properly in those other areas and that the chosen feature(s) allows this. In summary, you can perform all of the configuration and content management tasks that you need to in order to run your own site."
  },
  "admin/site-administration/language-management.html": {
    "href": "admin/site-administration/language-management.html",
    "title": "Language Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Language Management Manages languages used on the site."
  },
  "admin/site-administration/page-management.html": {
    "href": "admin/site-administration/page-management.html",
    "title": "Page Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Page Management Pretty much every website starts out as one thing first and foremost: a collection of pages that constitute a web presence. Each page will have a purpose (we hope) and serve it well. As you have seen after the default installation of Oqtane, you are even given a home page to work with on the first load of your new site. Your next step might be to create additional pages, such as About Us, Contact Us, and more. As your site continues to become successful and grows to meet the needs of your customers and other visitors, you will undoubtedly begin to have more and more pages on your site. You'll have so many that at some point you will need to manage them from a centralized location. In other cases, you might have pages that are hidden from the menu and are not easily accessible. This is where the Page Management feature comes in to allow for a larger overview of the pages on your website, with all pages on your website viewable in a list format. These pages can be manipulated in the page manager by being able to add, edit, and delete pages. Add The add feature adds a new page to your website and brings up the page management window, which allows you to specify the settings, appearance, and permissions for the page you are adding. The fields which exist in the page management window are the: Settings Name: Which specifies the name that will be displayed in the navigation bar. Parent: Which will specify the page that this page will be underneath, meaning that the added page will be put to the right of the page specified in the navigation bar at the top. Insert: Specify where the name for the page will appear in the navigation bar, by saying where the page should appear among all of the children of the parent that has been selected. Navigation: Say whether you want the page to be displayed to users that fit within the permissions, or if you want the page to be hidden to everyone but administrators which can be useful while editing a page. URL Path: The url is what is put in the web page's address, for example if the url path is set to page1 then the address might be www.website/page1.com. If no URL path is specified then the URL will by default be set to be the same as the name field above. Redirect: Input a URL that is the same as the URL path of another page in the site that user will be sent to, remember that if no URL path is specified for another page then the name will be used. If this feature is implemented then you will not be able stay on the page to use the control panel's page manager, so you will need to edit or delete page's with this feature. Appearance Title: The name that is displayed on the web page's tab. Theme: The theme that the web page will take on. In the admin dashboard's theme management feature you can see more information on these theme and import new themes to be used. Default Container: Choose the layout of modules for the page, like hw the titles typically displayed above the modules will be. Icon: Input a favicon address or other icon address to include an icon beside the name of your page. Personalizable: This feature gives a page that is unique to every individual and allows them to add modules and edit the content of the page, so only the individual can see what they put onto the page. Permissions View: This is what allows different users to see certain pages and any users that are within certain roles, that can be specified in the admin dashboard's role management feature will be able to see or not see the page depending on what you have checked the box for the role they fit into. Edit: This allows users that fit into the specified roles to be able to edit pages using the content editor. Specific Users: The permissions tab also has the ability for you to enter a specific username and allow for you to set custom permissions for any specific users that you want. Edit The edit feature shares all of the same features as the add feature, allowing you to change the settings, appearances, and permissions of any page, with the insert feature being replaced by the move feature. The edit feature also shows you when a page was created and when the page was last edited at the bottom of the page management window. Delete The delete feature will delete the page that you are currently on and you can recover the page or fully delete the page in the admin dashboard's recycle bin ."
  },
  "admin/site-administration/profile-management.html": {
    "href": "admin/site-administration/profile-management.html",
    "title": "Profile Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Profile Management The profile manager exposes one of the more powerful and under-appreciated features that Oqtane has to offer. The profile manager expose to you a few features, but the primary feature is the profile editor, which allows you to customize completely the profile fields that a user account has in nearly every way possible. This is the backbone of all of the user profile features in Oqtane. The Oqtane profile manager allows for a user to specify more things about themselves than the typical information from a basic user account. Fields from the profile can be made to be required upon making an account such as making a name or address a required field. The profile page has an add profile button at the top of its page which includes: Name: The name of the profile item as it would be accessible in the database . Title: The title of the field displayed to the user. Description: Enter a description for the profile that will be what shows up for the help icon for the field. Category: The name for a grouping of fields such as the name or address headings that are by default included in the profile tab above their respective groupings of fields. Order: Choose the spot where in the list of profile fields thatb this one will appear with 0 being the first position. Lenth: The maximum length that can be input into this field, with a 0 for unlimited length. Default Value: The value that will be put into this field if the user doesn't enter anything into it. Options: Has the ability to create a list of items that can be selected and is enter by a list with commas in between the items (a,b,c). Required?: Specify whether or not the field is required upon the creation of a new account. Private: Specify whether it should be seen by regular user or should just been seen by administrators. There is also the option to edit or delete any of the fields that have already been created with edit and delete buttons on each item in the list of profile fields."
  },
  "admin/site-administration/recycle-bin.html": {
    "href": "admin/site-administration/recycle-bin.html",
    "title": "Recycle Bin | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Recycle Bin The Recycle Bin is a very useful and often overlooked feature of Oqtane, especially for new users. Oftentimes, a newly designated administrator for a site will simply assume that when something is deleted, it is gone. The next logical step would probably be to re-create the content that was just deleted. This could lead to frustrations with Oqtane. The Recycle Bin allows you to restore the content in most cases, which can save you time and frustration. The Recycle Bin has two types of objects that can be restored, Pages and Modules. When you delete a page or a module, it will show up in the respective list. You can switch which list you're looking at by clicking the tabs at the top of the page. Clicking retore on one of the pages or modules will allow you to restore the selected item to their original place in your site. The recycle bin feature has two options, restore and delete. With the restore button, the page or module is restoredm to its original location. The delete button permanently deletes the page from your website and you will cause it be removed permanently."
  },
  "admin/site-administration/role-management.html": {
    "href": "admin/site-administration/role-management.html",
    "title": "Role Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Role Management Security Roles in Oqtane are nothing more than a grouping of one or more users for a purpose. That purpose is up to you. The purpose could be to see exclusive content in a specific area of the site or on specific pages in the site. It could also be to have the ability to edit content on one or more pages or to create content in a specific module, like a blog. We could go on and on. Just remember that Security Roles can be used for content targeting, editing, and hiding sections of your site. Security Roles work the same as most permissions-based systems, such as Windows. You first create a Security Role if it doesn't already exist to create a grouping of users. Then, you add one or more people to that group. Once you do that minimal setup, you can apply that group to various capabilities, permissions, and features. Permissions are set when creating or editing pages and modules by selecting which roles can edit or view them. At the top of the page is the add role btton that allows for the addition of a new group you want to make, with a name, description, and saying if it should be automatically assigned to users. You can edit, delete, and manage users in each role except for the default administrator and registered users roles which you cannot edit or delete, you can only manage their users. When adding a user into a role, there are fields for effective date and expiry date, which determines when a user will be added to a roles and how long they will be inside of a role."
  },
  "admin/site-administration/site-settings.html": {
    "href": "admin/site-administration/site-settings.html",
    "title": "Site Settings | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Site Settings The Site Settings apply to one given website within Oqtane. The settings are divided into the following sections. Basic Settings - SMTP Settings - PWA Settings - Aliases - Hosting Model - Tenant Information - feature contains a large number of settings that you canuse to perform high-level administrative configuration for your site. The Settings mostly contains set-it-and-forget it options that should be managed once when you build your site. Some of these settings include the default look and feel for new pages created on your site, your site logo, and default metadata for pages.The main parts of the settings are basic settings, SMTP configuration, and progressive web app configuration. Basic Settings Basic Settings mostly contains set-it-and-forget it options that should be managed once when you build your site. Name What you want to call the website. Tenant The name of the database you wan the site to use. Aliases The name that will appear for the sites URL. Logo The logo that will appear in the navigation bar. Favicon Enter a favicon address or another icon address to have a default icon to appear beside each page in the navigation bar. Default Theme Choose a default theme tht will give a different color scheme and structure. Default Layout Choose how many columns a page has by default. Default Container Choose if you want titles to appear about each module by default. Allow User Registration Should users be able to create their own accounts or should only administrators be able to create accounts. Is Deleted Select whether you want to delete this site. SMTP Server (Secure Mail Transfer Protocol) The Oqtane instance sends outbound email for a variety of reasons, from the host or site admin or in the form of password reminders, event notifications, newsletters, or other business-specific use cases. A valid SMTP server is required for this to work; you should consult your network administrator for the appropriate credentials to use in a production configuration. Most non-Exchange Server SMTP hosts will require “Basic” authentication and a valid username/password combination. Some will also require that SSL be enabled. Host: Enter the host name for the server. Port: Enter the port number that the server is on. SSL Enabled: Specify yes or no if the SMTP server has an SSL certificate. Username: Enter the username for the SMTP server you are accessing. Password: Enter the password for the SMTP server you are accessing. Progressive Web Application Settings Is Enabled: Choose whether or not you want the site to be set up as a progressive web application. App Icon: Select a PNG image that is 192 X 192 pixels which will be the app icon for your application. Splash Icon: Select a PNG image that is 512 X 512 pixels which will appear on the screen while the application is loading. Aliases Hosting Model Tenant Information"
  },
  "admin/site-administration/url-mappings.html": {
    "href": "admin/site-administration/url-mappings.html",
    "title": "URL Mappings | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "URL Mappings Lists mapped and broken URLs."
  },
  "admin/site-administration/user-management.html": {
    "href": "admin/site-administration/user-management.html",
    "title": "User Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "User Management One of your primary responsibilities as the site administrator will likely be to manage users on your site. You might need to create, edit, or delete users. You might also be required to add and remove abilities from users on your site. Everything that you need to do in these examples can be done from this one menu. The options that are provided on this user manager includes: Add User: The add new user button is exactly what it sounds like it allows you to add a new user to your site and upon being clicked, it brings up a window that asks for all of the essential information for an account with a username, password, email, and full name. There is also the profile tab which allows for more extensive information to be provided for a user account and may have some fields that are required to be input in order to create an account, which is specified in the required field of the profile manager . Find User: Provides a text field to input a user's account name that will search through all of the site's users and return the account below this ield with the following options: Edit User: This allows for basic fields in the identity field such as password, email, and full name to be modified as well as the ability to give the user a profile image and the profile tab to specify more information about a user. There is also the profile tab which goes into more detail about a user allowing for the specification of things like postal code, phone number and address. Delete User: This is exactly as it sounds, it will delete the user's account. User Roles: This allows for a user account to placed into a security role that has been previously defined in the role manager , and requires a date that this security role will take effect and will expire for the user account."
  },
  "admin/site-administration/user-profile.html": {
    "href": "admin/site-administration/user-profile.html",
    "title": "UserProfile | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "UserProfile"
  },
  "admin/site-administration/visitor-management.html": {
    "href": "admin/site-administration/visitor-management.html",
    "title": "Visitor Management | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Visitor Management Records of user's login metadata."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Oqtane API Documentation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane API Documentation Note The API documentation is still work-in-progress. Colors and Icons APIs can be daunting. Because of this, we've color-coded the menu to the left and added icons to make it easier for you to get around. Note This is what the colors and icons in the TOC mean: Anything that's light gray / subdued is probably not of interest to you marks WebApi related things marks things related to data like models and repositories marks Module related things marks things related to themes These areas are probably what you would like to research TODO"
  },
  "api/Oqtane.Controllers.AliasController.html": {
    "href": "api/Oqtane.Controllers.AliasController.html",
    "title": "Class AliasController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class AliasController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller AliasController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class AliasController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors AliasController(IAliasRepository, ILogManager, ITenantManager) Declaration public AliasController(IAliasRepository aliases, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description IAliasRepository aliases ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Host Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration [HttpGet] [Authorize(Roles = \"Administrators\")] public IEnumerable<Alias> Get() Returns Type Description System.Collections.Generic.IEnumerable < Alias > Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Host Users\")] public Alias Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Alias Post(Alias) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public Alias Post([FromBody] Alias alias) Parameters Type Name Description Alias alias Returns Type Description Alias Put(Int32, Alias) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Host Users\")] public Alias Put(int id, [FromBody] Alias alias) Parameters Type Name Description System.Int32 id Alias alias Returns Type Description Alias"
  },
  "api/Oqtane.Controllers.DatabaseController.html": {
    "href": "api/Oqtane.Controllers.DatabaseController.html",
    "title": "Class DatabaseController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class DatabaseController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller DatabaseController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class DatabaseController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors DatabaseController(IOptions<List<Database>>, IConfigManager) Declaration public DatabaseController(IOptions<List<Database>> databaseOptions, IConfigManager config) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < System.Collections.Generic.List < Database >> databaseOptions IConfigManager config Methods Get() Declaration [HttpGet] public IEnumerable<Database> Get() Returns Type Description System.Collections.Generic.IEnumerable < Database >"
  },
  "api/Oqtane.Controllers.FileController.html": {
    "href": "api/Oqtane.Controllers.FileController.html",
    "title": "Class FileController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class FileController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller FileController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class FileController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors FileController(IWebHostEnvironment, IFileRepository, IFolderRepository, IUserPermissions, ILogManager, ITenantManager) Declaration public FileController(IWebHostEnvironment environment, IFileRepository files, IFolderRepository folders, IUserPermissions userPermissions, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment IFileRepository files IFolderRepository folders IUserPermissions userPermissions ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id DownloadAttachment(Int32) Get file with header Content-Disposition: attachment; filename=\"filename.jpg\" https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition Declaration [HttpGet(\"download/{id}/attach\")] public IActionResult DownloadAttachment(int id) Parameters Type Name Description System.Int32 id File Id from Oqtane filesystem Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult DownloadInline(Int32) Get file with header Content-Disposition: inline https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition Declaration [HttpGet(\"download/{id}\")] public IActionResult DownloadInline(int id) Parameters Type Name Description System.Int32 id File Id from Oqtane filesystem Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult file content Get(Int32) Declaration [HttpGet(\"{id}\")] public File Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description File Get(Int32, String) Declaration [HttpGet(\"{siteId}/{path}\")] public IEnumerable<File> Get(int siteId, string path) Parameters Type Name Description System.Int32 siteId System.String path Returns Type Description System.Collections.Generic.IEnumerable < File > Get(String) Declaration [HttpGet] public IEnumerable<File> Get(string folder) Parameters Type Name Description System.String folder Returns Type Description System.Collections.Generic.IEnumerable < File > GetImage(Int32, Int32, Int32, String, String, String, String, String) Declaration [HttpGet(\"image/{id}/{width}/{height}/{mode}/{position}/{background}/{rotate}/{recreate}\")] public IActionResult GetImage(int id, int width, int height, string mode, string position, string background, string rotate, string recreate) Parameters Type Name Description System.Int32 id System.Int32 width System.Int32 height System.String mode System.String position System.String background System.String rotate System.String recreate Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Put(Int32, File) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public File Put(int id, [FromBody] File file) Parameters Type Name Description System.Int32 id File file Returns Type Description File UploadFile(String, IFormFile) Declaration [HttpPost(\"upload\")] public async Task UploadFile(string folder, IFormFile formfile) Parameters Type Name Description System.String folder Microsoft.AspNetCore.Http.IFormFile formfile Returns Type Description System.Threading.Tasks.Task UploadFile(String, String, String) Declaration [HttpGet(\"upload\")] public async Task<File> UploadFile(string url, string folderid, string name) Parameters Type Name Description System.String url System.String folderid System.String name Returns Type Description System.Threading.Tasks.Task < File >"
  },
  "api/Oqtane.Controllers.FolderController.html": {
    "href": "api/Oqtane.Controllers.FolderController.html",
    "title": "Class FolderController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class FolderController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller FolderController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class FolderController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors FolderController(IWebHostEnvironment, IFolderRepository, IUserPermissions, ILogManager, ITenantManager) Declaration public FolderController(IWebHostEnvironment environment, IFolderRepository folders, IUserPermissions userPermissions, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment IFolderRepository folders IUserPermissions userPermissions ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] public Folder Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Folder Get(String) Declaration [HttpGet] public IEnumerable<Folder> Get(string siteid) Parameters Type Name Description System.String siteid Returns Type Description System.Collections.Generic.IEnumerable < Folder > GetByPath(Int32, String) Declaration [HttpGet(\"{siteId}/{path}\")] public Folder GetByPath(int siteId, string path) Parameters Type Name Description System.Int32 siteId System.String path Returns Type Description Folder Post(Folder) Declaration [HttpPost] [Authorize(Roles = \"Registered Users\")] public Folder Post([FromBody] Folder folder) Parameters Type Name Description Folder folder Returns Type Description Folder Put(Int32, Folder) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public Folder Put(int id, [FromBody] Folder folder) Parameters Type Name Description System.Int32 id Folder folder Returns Type Description Folder Put(Int32, Int32, Nullable<Int32>) Declaration [HttpPut] [Authorize(Roles = \"Registered Users\")] public void Put(int siteid, int folderid, int? parentid) Parameters Type Name Description System.Int32 siteid System.Int32 folderid System.Nullable < System.Int32 > parentid"
  },
  "api/Oqtane.Controllers.html": {
    "href": "api/Oqtane.Controllers.html",
    "title": "Namespace Oqtane.Controllers | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Controllers TODO: Please document what this namespace is for. Classes AliasController DatabaseController FileController FolderController InstallationController JobController JobLogController LanguageController LocalizationController LogController ModuleController ModuleControllerBase ModuleDefinitionController NotificationController PackageController PageController PageModuleController ProfileController RoleController SettingController SiteController SiteTemplateController SqlController SyncController SystemController TenantController ThemeController UrlMappingController UserController UserRoleController VisitorController"
  },
  "api/Oqtane.Controllers.InstallationController.html": {
    "href": "api/Oqtane.Controllers.InstallationController.html",
    "title": "Class InstallationController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class InstallationController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller InstallationController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class InstallationController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors InstallationController(IConfigManager, IInstallationManager, IDatabaseManager, ILocalizationManager, IMemoryCache, IHttpContextAccessor, IAliasRepository, ILogger<InstallationController>) Declaration public InstallationController(IConfigManager configManager, IInstallationManager installationManager, IDatabaseManager databaseManager, ILocalizationManager localizationManager, IMemoryCache cache, IHttpContextAccessor accessor, IAliasRepository aliases, ILogger<InstallationController> filelogger) Parameters Type Name Description IConfigManager configManager IInstallationManager installationManager IDatabaseManager databaseManager ILocalizationManager localizationManager Microsoft.Extensions.Caching.Memory.IMemoryCache cache Microsoft.AspNetCore.Http.IHttpContextAccessor accessor IAliasRepository aliases Microsoft.Extensions.Logging.ILogger < InstallationController > filelogger Methods IsInstalled(String) Declaration [HttpGet(\"installed\")] public Installation IsInstalled(string path) Parameters Type Name Description System.String path Returns Type Description Installation Load() Declaration [HttpGet(\"load\")] public IActionResult Load() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Post(InstallConfig) Declaration [HttpPost] public async Task<Installation> Post([FromBody] InstallConfig config) Parameters Type Name Description InstallConfig config Returns Type Description System.Threading.Tasks.Task < Installation > Register(String) Declaration [HttpPost(\"register\")] [Authorize(Roles = \"Host Users\")] public async Task Register(string email) Parameters Type Name Description System.String email Returns Type Description System.Threading.Tasks.Task Restart() Declaration [HttpPost(\"restart\")] [Authorize(Roles = \"Host Users\")] public void Restart() Upgrade() Declaration [HttpGet(\"upgrade\")] [Authorize(Roles = \"Host Users\")] public Installation Upgrade() Returns Type Description Installation"
  },
  "api/Oqtane.Controllers.JobController.html": {
    "href": "api/Oqtane.Controllers.JobController.html",
    "title": "Class JobController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class JobController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller JobController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class JobController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors JobController(IJobRepository, ILogManager, IServiceProvider) Declaration public JobController(IJobRepository jobs, ILogManager logger, IServiceProvider serviceProvider) Parameters Type Name Description IJobRepository jobs ILogManager logger System.IServiceProvider serviceProvider Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Host Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration [HttpGet] [Authorize(Roles = \"Host Users\")] public IEnumerable<Job> Get() Returns Type Description System.Collections.Generic.IEnumerable < Job > Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Host Users\")] public Job Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Job Post(Job) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public Job Post([FromBody] Job job) Parameters Type Name Description Job job Returns Type Description Job Put(Int32, Job) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Host Users\")] public Job Put(int id, [FromBody] Job job) Parameters Type Name Description System.Int32 id Job job Returns Type Description Job Start(Int32) Declaration [HttpGet(\"start/{id}\")] [Authorize(Roles = \"Host Users\")] public void Start(int id) Parameters Type Name Description System.Int32 id Stop(Int32) Declaration [HttpGet(\"stop/{id}\")] [Authorize(Roles = \"Host Users\")] public void Stop(int id) Parameters Type Name Description System.Int32 id"
  },
  "api/Oqtane.Controllers.JobLogController.html": {
    "href": "api/Oqtane.Controllers.JobLogController.html",
    "title": "Class JobLogController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class JobLogController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller JobLogController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class JobLogController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors JobLogController(IJobLogRepository) Declaration public JobLogController(IJobLogRepository jobLogs) Parameters Type Name Description IJobLogRepository jobLogs Methods Get() Declaration [HttpGet] [Authorize(Roles = \"Host Users\")] public IEnumerable<JobLog> Get() Returns Type Description System.Collections.Generic.IEnumerable < JobLog > Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Host Users\")] public JobLog Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description JobLog"
  },
  "api/Oqtane.Controllers.LanguageController.html": {
    "href": "api/Oqtane.Controllers.LanguageController.html",
    "title": "Class LanguageController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LanguageController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller LanguageController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class LanguageController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors LanguageController(ILanguageRepository, ILogManager, ITenantManager) Declaration public LanguageController(ILanguageRepository language, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description ILanguageRepository language ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Administrators\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] public Language Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Language Get(String) Declaration [HttpGet] public IEnumerable<Language> Get(string siteid) Parameters Type Name Description System.String siteid Returns Type Description System.Collections.Generic.IEnumerable < Language > Post(Language) Declaration [HttpPost] [Authorize(Roles = \"Administrators\")] public Language Post([FromBody] Language language) Parameters Type Name Description Language language Returns Type Description Language"
  },
  "api/Oqtane.Controllers.LocalizationController.html": {
    "href": "api/Oqtane.Controllers.LocalizationController.html",
    "title": "Class LocalizationController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LocalizationController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller LocalizationController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class LocalizationController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors LocalizationController(ILocalizationManager) Declaration public LocalizationController(ILocalizationManager localizationManager) Parameters Type Name Description ILocalizationManager localizationManager Methods Get() Declaration [HttpGet] public IEnumerable<Culture> Get() Returns Type Description System.Collections.Generic.IEnumerable < Culture >"
  },
  "api/Oqtane.Controllers.LogController.html": {
    "href": "api/Oqtane.Controllers.LogController.html",
    "title": "Class LogController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LogController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller LogController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class LogController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors LogController(ILogManager, ILogRepository, ITenantManager) Declaration public LogController(ILogManager logger, ILogRepository logs, ITenantManager tenantManager) Parameters Type Name Description ILogManager logger ILogRepository logs ITenantManager tenantManager Methods Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Administrators\")] public Log Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Log Get(String, String, String, String) Declaration [HttpGet] [Authorize(Roles = \"Administrators\")] public IEnumerable<Log> Get(string siteid, string level, string function, string rows) Parameters Type Name Description System.String siteid System.String level System.String function System.String rows Returns Type Description System.Collections.Generic.IEnumerable < Log > Post(Log) Declaration [HttpPost] public void Post([FromBody] Log log) Parameters Type Name Description Log log"
  },
  "api/Oqtane.Controllers.ModuleController.html": {
    "href": "api/Oqtane.Controllers.ModuleController.html",
    "title": "Class ModuleController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ModuleController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class ModuleController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ModuleController(IModuleRepository, IPageModuleRepository, IPageRepository, IModuleDefinitionRepository, ISettingRepository, IUserPermissions, ITenantManager, ISyncManager, ILogManager) Declaration public ModuleController(IModuleRepository modules, IPageModuleRepository pageModules, IPageRepository pages, IModuleDefinitionRepository moduleDefinitions, ISettingRepository settings, IUserPermissions userPermissions, ITenantManager tenantManager, ISyncManager syncManager, ILogManager logger) Parameters Type Name Description IModuleRepository modules IPageModuleRepository pageModules IPageRepository pages IModuleDefinitionRepository moduleDefinitions ISettingRepository settings IUserPermissions userPermissions ITenantManager tenantManager ISyncManager syncManager ILogManager logger Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Export(Int32) Declaration [HttpGet(\"export\")] [Authorize(Roles = \"Registered Users\")] public string Export(int moduleid) Parameters Type Name Description System.Int32 moduleid Returns Type Description System.String Get(Int32) Declaration [HttpGet(\"{id}\")] public Module Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Module Get(String) Declaration [HttpGet] public IEnumerable<Module> Get(string siteid) Parameters Type Name Description System.String siteid Returns Type Description System.Collections.Generic.IEnumerable < Module > Import(Int32, String) Declaration [HttpPost(\"import\")] [Authorize(Roles = \"Registered Users\")] public bool Import(int moduleid, [FromBody] string content) Parameters Type Name Description System.Int32 moduleid System.String content Returns Type Description System.Boolean Post(Module) Declaration [HttpPost] [Authorize(Roles = \"Registered Users\")] public Module Post([FromBody] Module module) Parameters Type Name Description Module module Returns Type Description Module Put(Int32, Module) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public Module Put(int id, [FromBody] Module module) Parameters Type Name Description System.Int32 id Module module Returns Type Description Module"
  },
  "api/Oqtane.Controllers.ModuleControllerBase.html": {
    "href": "api/Oqtane.Controllers.ModuleControllerBase.html",
    "title": "Class ModuleControllerBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleControllerBase Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ModuleControllerBase Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax public class ModuleControllerBase : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ModuleControllerBase(ILogManager, IHttpContextAccessor) Declaration public ModuleControllerBase(ILogManager logger, IHttpContextAccessor accessor) Parameters Type Name Description ILogManager logger Microsoft.AspNetCore.Http.IHttpContextAccessor accessor Fields _authEntityId Declaration protected Dictionary<string, int> _authEntityId Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Int32 > _entityId Declaration protected int _entityId Field Value Type Description System.Int32 _logger Declaration protected readonly ILogManager _logger Field Value Type Description ILogManager Methods AuthEntityId(String) Declaration protected int AuthEntityId(string entityname) Parameters Type Name Description System.String entityname Returns Type Description System.Int32"
  },
  "api/Oqtane.Controllers.ModuleDefinitionController.html": {
    "href": "api/Oqtane.Controllers.ModuleDefinitionController.html",
    "title": "Class ModuleDefinitionController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleDefinitionController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ModuleDefinitionController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class ModuleDefinitionController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ModuleDefinitionController(IModuleDefinitionRepository, ITenantRepository, ISqlRepository, IUserPermissions, IInstallationManager, IWebHostEnvironment, IServiceProvider, ITenantManager, ILogManager) Declaration public ModuleDefinitionController(IModuleDefinitionRepository moduleDefinitions, ITenantRepository tenants, ISqlRepository sql, IUserPermissions userPermissions, IInstallationManager installationManager, IWebHostEnvironment environment, IServiceProvider serviceProvider, ITenantManager tenantManager, ILogManager logger) Parameters Type Name Description IModuleDefinitionRepository moduleDefinitions ITenantRepository tenants ISqlRepository sql IUserPermissions userPermissions IInstallationManager installationManager Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment System.IServiceProvider serviceProvider ITenantManager tenantManager ILogManager logger Methods Delete(Int32, Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Host Users\")] public void Delete(int id, int siteid) Parameters Type Name Description System.Int32 id System.Int32 siteid Get(Int32, String) Declaration [HttpGet(\"{id}\")] public ModuleDefinition Get(int id, string siteid) Parameters Type Name Description System.Int32 id System.String siteid Returns Type Description ModuleDefinition Get(String) Declaration [HttpGet] public IEnumerable<ModuleDefinition> Get(string siteid) Parameters Type Name Description System.String siteid Returns Type Description System.Collections.Generic.IEnumerable < ModuleDefinition > GetTemplates() Declaration [HttpGet(\"templates\")] [Authorize(Roles = \"Host Users\")] public List<Template> GetTemplates() Returns Type Description System.Collections.Generic.List < Template > InstallModules() Declaration [HttpGet(\"install\")] [Authorize(Roles = \"Host Users\")] public void InstallModules() Post(ModuleDefinition) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public ModuleDefinition Post([FromBody] ModuleDefinition moduleDefinition) Parameters Type Name Description ModuleDefinition moduleDefinition Returns Type Description ModuleDefinition Put(Int32, ModuleDefinition) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Administrators\")] public void Put(int id, [FromBody] ModuleDefinition moduleDefinition) Parameters Type Name Description System.Int32 id ModuleDefinition moduleDefinition"
  },
  "api/Oqtane.Controllers.NotificationController.html": {
    "href": "api/Oqtane.Controllers.NotificationController.html",
    "title": "Class NotificationController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class NotificationController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller NotificationController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class NotificationController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors NotificationController(INotificationRepository, IUserPermissions, ILogManager, ITenantManager) Declaration public NotificationController(INotificationRepository notifications, IUserPermissions userPermissions, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description INotificationRepository notifications IUserPermissions userPermissions ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public Notification Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Notification Get(String, String, String) Declaration [HttpGet] [Authorize(Roles = \"Registered Users\")] public IEnumerable<Notification> Get(string siteid, string direction, string userid) Parameters Type Name Description System.String siteid System.String direction System.String userid Returns Type Description System.Collections.Generic.IEnumerable < Notification > Post(Notification) Declaration [HttpPost] [Authorize(Roles = \"Registered Users\")] public Notification Post([FromBody] Notification notification) Parameters Type Name Description Notification notification Returns Type Description Notification Put(Int32, Notification) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public Notification Put(int id, [FromBody] Notification notification) Parameters Type Name Description System.Int32 id Notification notification Returns Type Description Notification"
  },
  "api/Oqtane.Controllers.PackageController.html": {
    "href": "api/Oqtane.Controllers.PackageController.html",
    "title": "Class PackageController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PackageController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller PackageController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class PackageController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors PackageController(IInstallationManager, IWebHostEnvironment, IConfigManager, ILogManager) Declaration public PackageController(IInstallationManager installationManager, IWebHostEnvironment environment, IConfigManager configManager, ILogManager logger) Parameters Type Name Description IInstallationManager installationManager Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment IConfigManager configManager ILogManager logger Methods Get(String, String, String, String) Declaration [HttpGet] public async Task<IEnumerable<Package>> Get(string type, string search, string price, string package) Parameters Type Name Description System.String type System.String search System.String price System.String package Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < Package >> InstallPackages() Declaration [HttpGet(\"install\")] [Authorize(Roles = \"Host Users\")] public void InstallPackages() Post(String, String, String) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public async Task<Package> Post(string packageid, string version, string folder) Parameters Type Name Description System.String packageid System.String version System.String folder Returns Type Description System.Threading.Tasks.Task < Package >"
  },
  "api/Oqtane.Controllers.PageController.html": {
    "href": "api/Oqtane.Controllers.PageController.html",
    "title": "Class PageController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller PageController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class PageController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors PageController(IPageRepository, IModuleRepository, IPageModuleRepository, IPermissionRepository, ISettingRepository, IUserPermissions, IUrlMappingRepository, ITenantManager, ISyncManager, ILogManager) Declaration public PageController(IPageRepository pages, IModuleRepository modules, IPageModuleRepository pageModules, IPermissionRepository permissionRepository, ISettingRepository settings, IUserPermissions userPermissions, IUrlMappingRepository urlMappings, ITenantManager tenantManager, ISyncManager syncManager, ILogManager logger) Parameters Type Name Description IPageRepository pages IModuleRepository modules IPageModuleRepository pageModules IPermissionRepository permissionRepository ISettingRepository settings IUserPermissions userPermissions IUrlMappingRepository urlMappings ITenantManager tenantManager ISyncManager syncManager ILogManager logger Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32, String) Declaration [HttpGet(\"{id}\")] public Page Get(int id, string userid) Parameters Type Name Description System.Int32 id System.String userid Returns Type Description Page Get(String) Declaration [HttpGet] public IEnumerable<Page> Get(string siteid) Parameters Type Name Description System.String siteid Returns Type Description System.Collections.Generic.IEnumerable < Page > Get(String, Int32) Declaration [HttpGet(\"path/{siteid}\")] public Page Get(string path, int siteid) Parameters Type Name Description System.String path System.Int32 siteid Returns Type Description Page Post(Page) Declaration [HttpPost] [Authorize(Roles = \"Registered Users\")] public Page Post([FromBody] Page page) Parameters Type Name Description Page page Returns Type Description Page Post(Int32, String) Declaration [HttpPost(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public Page Post(int id, string userid) Parameters Type Name Description System.Int32 id System.String userid Returns Type Description Page Put(Int32, Page) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public Page Put(int id, [FromBody] Page page) Parameters Type Name Description System.Int32 id Page page Returns Type Description Page Put(Int32, Int32, Nullable<Int32>) Declaration [HttpPut] [Authorize(Roles = \"Registered Users\")] public void Put(int siteid, int pageid, int? parentid) Parameters Type Name Description System.Int32 siteid System.Int32 pageid System.Nullable < System.Int32 > parentid"
  },
  "api/Oqtane.Controllers.PageModuleController.html": {
    "href": "api/Oqtane.Controllers.PageModuleController.html",
    "title": "Class PageModuleController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageModuleController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller PageModuleController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class PageModuleController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors PageModuleController(IPageModuleRepository, IPageRepository, IUserPermissions, ITenantManager, ISyncManager, ILogManager) Declaration public PageModuleController(IPageModuleRepository pageModules, IPageRepository pages, IUserPermissions userPermissions, ITenantManager tenantManager, ISyncManager syncManager, ILogManager logger) Parameters Type Name Description IPageModuleRepository pageModules IPageRepository pages IUserPermissions userPermissions ITenantManager tenantManager ISyncManager syncManager ILogManager logger Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] public PageModule Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description PageModule Get(Int32, Int32) Declaration [HttpGet(\"{pageid}/{moduleid}\")] public PageModule Get(int pageid, int moduleid) Parameters Type Name Description System.Int32 pageid System.Int32 moduleid Returns Type Description PageModule Post(PageModule) Declaration [HttpPost] [Authorize(Roles = \"Registered Users\")] public PageModule Post([FromBody] PageModule pageModule) Parameters Type Name Description PageModule pageModule Returns Type Description PageModule Put(Int32, PageModule) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public PageModule Put(int id, [FromBody] PageModule pageModule) Parameters Type Name Description System.Int32 id PageModule pageModule Returns Type Description PageModule Put(Int32, String) Declaration [HttpPut] [Authorize(Roles = \"Registered Users\")] public void Put(int pageid, string pane) Parameters Type Name Description System.Int32 pageid System.String pane"
  },
  "api/Oqtane.Controllers.ProfileController.html": {
    "href": "api/Oqtane.Controllers.ProfileController.html",
    "title": "Class ProfileController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ProfileController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ProfileController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class ProfileController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ProfileController(IProfileRepository, ILogManager, ITenantManager) Declaration public ProfileController(IProfileRepository profiles, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description IProfileRepository profiles ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Administrators\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] public Profile Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Profile Get(String) Declaration [HttpGet] public IEnumerable<Profile> Get(string siteid) Parameters Type Name Description System.String siteid Returns Type Description System.Collections.Generic.IEnumerable < Profile > Post(Profile) Declaration [HttpPost] [Authorize(Roles = \"Administrators\")] public Profile Post([FromBody] Profile profile) Parameters Type Name Description Profile profile Returns Type Description Profile Put(Int32, Profile) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Administrators\")] public Profile Put(int id, [FromBody] Profile profile) Parameters Type Name Description System.Int32 id Profile profile Returns Type Description Profile"
  },
  "api/Oqtane.Controllers.RoleController.html": {
    "href": "api/Oqtane.Controllers.RoleController.html",
    "title": "Class RoleController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class RoleController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller RoleController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class RoleController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors RoleController(IRoleRepository, ILogManager, ITenantManager) Declaration public RoleController(IRoleRepository roles, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description IRoleRepository roles ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Administrators\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Registered Users\")] public Role Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Role Get(String, String) Declaration [HttpGet] [Authorize(Roles = \"Registered Users\")] public IEnumerable<Role> Get(string siteid, string global) Parameters Type Name Description System.String siteid System.String global Returns Type Description System.Collections.Generic.IEnumerable < Role > Post(Role) Declaration [HttpPost] [Authorize(Roles = \"Administrators\")] public Role Post([FromBody] Role role) Parameters Type Name Description Role role Returns Type Description Role Put(Int32, Role) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Administrators\")] public Role Put(int id, [FromBody] Role role) Parameters Type Name Description System.Int32 id Role role Returns Type Description Role"
  },
  "api/Oqtane.Controllers.SettingController.html": {
    "href": "api/Oqtane.Controllers.SettingController.html",
    "title": "Class SettingController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SettingController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller SettingController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class SettingController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SettingController(ISettingRepository, IPageModuleRepository, IUserPermissions, ITenantManager, ISyncManager, IAliasAccessor, IOptionsMonitorCache<CookieAuthenticationOptions>, IOptionsMonitorCache<OpenIdConnectOptions>, IOptionsMonitorCache<OAuthOptions>, IOptionsMonitorCache<IdentityOptions>, ILogManager) Declaration public SettingController(ISettingRepository settings, IPageModuleRepository pageModules, IUserPermissions userPermissions, ITenantManager tenantManager, ISyncManager syncManager, IAliasAccessor aliasAccessor, IOptionsMonitorCache<CookieAuthenticationOptions> cookieCache, IOptionsMonitorCache<OpenIdConnectOptions> oidcCache, IOptionsMonitorCache<OAuthOptions> oauthCache, IOptionsMonitorCache<IdentityOptions> identityCache, ILogManager logger) Parameters Type Name Description ISettingRepository settings IPageModuleRepository pageModules IUserPermissions userPermissions ITenantManager tenantManager ISyncManager syncManager IAliasAccessor aliasAccessor Microsoft.Extensions.Options.IOptionsMonitorCache < Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions > cookieCache Microsoft.Extensions.Options.IOptionsMonitorCache < Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions > oidcCache Microsoft.Extensions.Options.IOptionsMonitorCache < Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions > oauthCache Microsoft.Extensions.Options.IOptionsMonitorCache < Microsoft.AspNetCore.Identity.IdentityOptions > identityCache ILogManager logger Methods Clear() Declaration [HttpDelete(\"clear\")] [Authorize(Roles = \"Administrators\")] public void Clear() Delete(String, Int32) Declaration [HttpDelete(\"{id}/{entityName}\")] public void Delete(string entityName, int id) Parameters Type Name Description System.String entityName System.Int32 id Get(Int32, String) Declaration [HttpGet(\"{id}/{entityName}\")] public Setting Get(int id, string entityName) Parameters Type Name Description System.Int32 id System.String entityName Returns Type Description Setting Get(String, Int32) Declaration [HttpGet] public IEnumerable<Setting> Get(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.Collections.Generic.IEnumerable < Setting > Post(Setting) Declaration [HttpPost] public Setting Post([FromBody] Setting setting) Parameters Type Name Description Setting setting Returns Type Description Setting Put(Int32, Setting) Declaration [HttpPut(\"{id}\")] public Setting Put(int id, [FromBody] Setting setting) Parameters Type Name Description System.Int32 id Setting setting Returns Type Description Setting"
  },
  "api/Oqtane.Controllers.SiteController.html": {
    "href": "api/Oqtane.Controllers.SiteController.html",
    "title": "Class SiteController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller SiteController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class SiteController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SiteController(ISiteRepository, ISettingRepository, ITenantManager, ISyncManager, ILogManager) Declaration public SiteController(ISiteRepository sites, ISettingRepository settings, ITenantManager tenantManager, ISyncManager syncManager, ILogManager logger) Parameters Type Name Description ISiteRepository sites ISettingRepository settings ITenantManager tenantManager ISyncManager syncManager ILogManager logger Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Host Users\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration [HttpGet] [Authorize(Roles = \"Host Users\")] public IEnumerable<Site> Get() Returns Type Description System.Collections.Generic.IEnumerable < Site > Get(Int32) Declaration [HttpGet(\"{id}\")] public Site Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Site Post(Site) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public Site Post([FromBody] Site site) Parameters Type Name Description Site site Returns Type Description Site Put(Int32, Site) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Administrators\")] public Site Put(int id, [FromBody] Site site) Parameters Type Name Description System.Int32 id Site site Returns Type Description Site"
  },
  "api/Oqtane.Controllers.SiteTemplateController.html": {
    "href": "api/Oqtane.Controllers.SiteTemplateController.html",
    "title": "Class SiteTemplateController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteTemplateController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller SiteTemplateController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class SiteTemplateController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SiteTemplateController(ISiteTemplateRepository) Declaration public SiteTemplateController(ISiteTemplateRepository siteTemplates) Parameters Type Name Description ISiteTemplateRepository siteTemplates Methods Get() Declaration [HttpGet] [Authorize(Roles = \"Host Users\")] public IEnumerable<SiteTemplate> Get() Returns Type Description System.Collections.Generic.IEnumerable < SiteTemplate >"
  },
  "api/Oqtane.Controllers.SqlController.html": {
    "href": "api/Oqtane.Controllers.SqlController.html",
    "title": "Class SqlController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SqlController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller SqlController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class SqlController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SqlController(ITenantRepository, ISqlRepository, ILogManager) Declaration public SqlController(ITenantRepository tenants, ISqlRepository sql, ILogManager logger) Parameters Type Name Description ITenantRepository tenants ISqlRepository sql ILogManager logger Methods Post(SqlQuery) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public SqlQuery Post([FromBody] SqlQuery sqlquery) Parameters Type Name Description SqlQuery sqlquery Returns Type Description SqlQuery"
  },
  "api/Oqtane.Controllers.SyncController.html": {
    "href": "api/Oqtane.Controllers.SyncController.html",
    "title": "Class SyncController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SyncController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller SyncController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class SyncController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SyncController(ISyncManager, ITenantManager) Declaration public SyncController(ISyncManager syncManager, ITenantManager tenantManager) Parameters Type Name Description ISyncManager syncManager ITenantManager tenantManager Methods Get(String) Declaration [HttpGet(\"{lastSyncDate}\")] public Sync Get(string lastSyncDate) Parameters Type Name Description System.String lastSyncDate Returns Type Description Sync"
  },
  "api/Oqtane.Controllers.SystemController.html": {
    "href": "api/Oqtane.Controllers.SystemController.html",
    "title": "Class SystemController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SystemController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller SystemController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class SystemController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SystemController(IWebHostEnvironment, IConfigManager) Declaration public SystemController(IWebHostEnvironment environment, IConfigManager configManager) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment IConfigManager configManager Methods Get(String) Declaration [HttpGet] [Authorize(Roles = \"Host Users\")] public Dictionary<string, object> Get(string type) Parameters Type Name Description System.String type Returns Type Description System.Collections.Generic.Dictionary < System.String , System.Object > Get(String, Object) Declaration [HttpGet(\"{key}/{value}\")] [Authorize(Roles = \"Host Users\")] public object Get(string key, object value) Parameters Type Name Description System.String key System.Object value Returns Type Description System.Object Post(Dictionary<String, Object>) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public void Post([FromBody] Dictionary<string, object> settings) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.Object > settings Put(String, Object) Declaration [HttpPut(\"{key}/{value}\")] [Authorize(Roles = \"Host Users\")] public void Put(string key, object value) Parameters Type Name Description System.String key System.Object value"
  },
  "api/Oqtane.Controllers.TenantController.html": {
    "href": "api/Oqtane.Controllers.TenantController.html",
    "title": "Class TenantController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class TenantController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller TenantController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class TenantController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors TenantController(ITenantRepository, ILogManager) Declaration public TenantController(ITenantRepository tenants, ILogManager logger) Parameters Type Name Description ITenantRepository tenants ILogManager logger Methods Get() Declaration [HttpGet] [Authorize(Roles = \"Host Users\")] public IEnumerable<Tenant> Get() Returns Type Description System.Collections.Generic.IEnumerable < Tenant > Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Host Users\")] public Tenant Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Tenant"
  },
  "api/Oqtane.Controllers.ThemeController.html": {
    "href": "api/Oqtane.Controllers.ThemeController.html",
    "title": "Class ThemeController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ThemeController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ThemeController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class ThemeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ThemeController(IThemeRepository, IInstallationManager, IWebHostEnvironment, ILogManager) Declaration public ThemeController(IThemeRepository themes, IInstallationManager installationManager, IWebHostEnvironment environment, ILogManager logger) Parameters Type Name Description IThemeRepository themes IInstallationManager installationManager Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment ILogManager logger Methods Delete(String) Declaration [HttpDelete(\"{themename}\")] [Authorize(Roles = \"Host Users\")] public void Delete(string themename) Parameters Type Name Description System.String themename Get() Declaration [HttpGet] [Authorize(Roles = \"Registered Users\")] public IEnumerable<Theme> Get() Returns Type Description System.Collections.Generic.IEnumerable < Theme > GetTemplates() Declaration [HttpGet(\"templates\")] [Authorize(Roles = \"Host Users\")] public List<Template> GetTemplates() Returns Type Description System.Collections.Generic.List < Template > InstallThemes() Declaration [HttpGet(\"install\")] [Authorize(Roles = \"Host Users\")] public void InstallThemes() Post(Theme) Declaration [HttpPost] [Authorize(Roles = \"Host Users\")] public Theme Post([FromBody] Theme theme) Parameters Type Name Description Theme theme Returns Type Description Theme"
  },
  "api/Oqtane.Controllers.UrlMappingController.html": {
    "href": "api/Oqtane.Controllers.UrlMappingController.html",
    "title": "Class UrlMappingController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UrlMappingController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller UrlMappingController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class UrlMappingController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors UrlMappingController(IUrlMappingRepository, ILogManager, ITenantManager) Declaration public UrlMappingController(IUrlMappingRepository urlMappings, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description IUrlMappingRepository urlMappings ILogManager logger ITenantManager tenantManager Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Administrators\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Administrators\")] public UrlMapping Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description UrlMapping Get(Int32, String) Declaration [HttpGet(\"url/{siteid}\")] public UrlMapping Get(int siteid, string url) Parameters Type Name Description System.Int32 siteid System.String url Returns Type Description UrlMapping Get(String, String) Declaration [HttpGet] [Authorize(Roles = \"Administrators\")] public IEnumerable<UrlMapping> Get(string siteid, string ismapped) Parameters Type Name Description System.String siteid System.String ismapped Returns Type Description System.Collections.Generic.IEnumerable < UrlMapping > Post(UrlMapping) Declaration [HttpPost] [Authorize(Roles = \"Administrators\")] public UrlMapping Post([FromBody] UrlMapping urlMapping) Parameters Type Name Description UrlMapping urlMapping Returns Type Description UrlMapping Put(Int32, UrlMapping) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Administrators\")] public UrlMapping Put(int id, [FromBody] UrlMapping urlMapping) Parameters Type Name Description System.Int32 id UrlMapping urlMapping Returns Type Description UrlMapping"
  },
  "api/Oqtane.Controllers.UserController.html": {
    "href": "api/Oqtane.Controllers.UserController.html",
    "title": "Class UserController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller UserController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class UserController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors UserController(IUserRepository, IRoleRepository, IUserRoleRepository, UserManager<IdentityUser>, SignInManager<IdentityUser>, ITenantManager, INotificationRepository, IFolderRepository, ISyncManager, ISiteRepository, IJwtManager, ILogManager) Declaration public UserController(IUserRepository users, IRoleRepository roles, IUserRoleRepository userRoles, UserManager<IdentityUser> identityUserManager, SignInManager<IdentityUser> identitySignInManager, ITenantManager tenantManager, INotificationRepository notifications, IFolderRepository folders, ISyncManager syncManager, ISiteRepository sites, IJwtManager jwtManager, ILogManager logger) Parameters Type Name Description IUserRepository users IRoleRepository roles IUserRoleRepository userRoles Microsoft.AspNetCore.Identity.UserManager < Microsoft.AspNetCore.Identity.IdentityUser > identityUserManager Microsoft.AspNetCore.Identity.SignInManager < Microsoft.AspNetCore.Identity.IdentityUser > identitySignInManager ITenantManager tenantManager INotificationRepository notifications IFolderRepository folders ISyncManager syncManager ISiteRepository sites IJwtManager jwtManager ILogManager logger Methods Authenticate() Declaration [HttpGet(\"authenticate\")] public User Authenticate() Returns Type Description User Delete(Int32, String) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Administrators\")] public async Task Delete(int id, string siteid) Parameters Type Name Description System.Int32 id System.String siteid Returns Type Description System.Threading.Tasks.Task Forgot(User) Declaration [HttpPost(\"forgot\")] public async Task Forgot([FromBody] User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task Get(Int32, String) Declaration [HttpGet(\"{id}\")] [Authorize] public User Get(int id, string siteid) Parameters Type Name Description System.Int32 id System.String siteid Returns Type Description User Get(String, String) Declaration [HttpGet(\"name/{name}\")] public User Get(string name, string siteid) Parameters Type Name Description System.String name System.String siteid Returns Type Description User Link(User, String, String, String, String) Declaration [HttpPost(\"link\")] public async Task<User> Link([FromBody] User user, string token, string type, string key, string name) Parameters Type Name Description User user System.String token System.String type System.String key System.String name Returns Type Description System.Threading.Tasks.Task < User > Login(User) Declaration [HttpPost(\"login\")] public async Task<User> Login([FromBody] User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task < User > Logout(User) Declaration [HttpPost(\"logout\")] [Authorize] public async Task Logout([FromBody] User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task PersonalAccessToken() Declaration [HttpGet(\"personalaccesstoken\")] [Authorize(Roles = \"Administrators\")] public string PersonalAccessToken() Returns Type Description System.String Post(User) Declaration [HttpPost] public async Task<User> Post([FromBody] User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task < User > Put(Int32, User) Declaration [HttpPut(\"{id}\")] [Authorize] public async Task<User> Put(int id, [FromBody] User user) Parameters Type Name Description System.Int32 id User user Returns Type Description System.Threading.Tasks.Task < User > Reset(User, String) Declaration [HttpPost(\"reset\")] public async Task<User> Reset([FromBody] User user, string token) Parameters Type Name Description User user System.String token Returns Type Description System.Threading.Tasks.Task < User > Token() Declaration [HttpGet(\"token\")] [Authorize(Roles = \"Registered Users\")] public string Token() Returns Type Description System.String TwoFactor(User, String) Declaration [HttpPost(\"twofactor\")] public User TwoFactor([FromBody] User user, string token) Parameters Type Name Description User user System.String token Returns Type Description User Validate(String) Declaration [HttpGet(\"validate/{password}\")] public async Task<bool> Validate(string password) Parameters Type Name Description System.String password Returns Type Description System.Threading.Tasks.Task < System.Boolean > Verify(User, String) Declaration [HttpPost(\"verify\")] public async Task<User> Verify([FromBody] User user, string token) Parameters Type Name Description User user System.String token Returns Type Description System.Threading.Tasks.Task < User >"
  },
  "api/Oqtane.Controllers.UserRoleController.html": {
    "href": "api/Oqtane.Controllers.UserRoleController.html",
    "title": "Class UserRoleController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserRoleController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller UserRoleController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class UserRoleController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors UserRoleController(IUserRoleRepository, IRoleRepository, ITenantManager, ISyncManager, ILogManager) Declaration public UserRoleController(IUserRoleRepository userRoles, IRoleRepository roles, ITenantManager tenantManager, ISyncManager syncManager, ILogManager logger) Parameters Type Name Description IUserRoleRepository userRoles IRoleRepository roles ITenantManager tenantManager ISyncManager syncManager ILogManager logger Methods Delete(Int32) Declaration [HttpDelete(\"{id}\")] [Authorize(Roles = \"Administrators\")] public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration [HttpGet(\"{id}\")] [Authorize(Roles = \"Administrators\")] public UserRole Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description UserRole Get(String) Declaration [HttpGet] [Authorize(Roles = \"Administrators\")] public IEnumerable<UserRole> Get(string siteid) Parameters Type Name Description System.String siteid Returns Type Description System.Collections.Generic.IEnumerable < UserRole > Post(UserRole) Declaration [HttpPost] [Authorize(Roles = \"Administrators\")] public UserRole Post([FromBody] UserRole userRole) Parameters Type Name Description UserRole userRole Returns Type Description UserRole Put(Int32, UserRole) Declaration [HttpPut(\"{id}\")] [Authorize(Roles = \"Administrators\")] public UserRole Put(int id, [FromBody] UserRole userRole) Parameters Type Name Description System.Int32 id UserRole userRole Returns Type Description UserRole"
  },
  "api/Oqtane.Controllers.VisitorController.html": {
    "href": "api/Oqtane.Controllers.VisitorController.html",
    "title": "Class VisitorController | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class VisitorController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller VisitorController Namespace : Oqtane.Controllers Assembly : Oqtane.Server.dll Syntax [Route(\"api/[controller]\")] public class VisitorController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors VisitorController(IVisitorRepository, ILogManager, ITenantManager) Declaration public VisitorController(IVisitorRepository visitors, ILogManager logger, ITenantManager tenantManager) Parameters Type Name Description IVisitorRepository visitors ILogManager logger ITenantManager tenantManager Methods Get(Int32) Declaration [HttpGet(\"{id}\")] public Visitor Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Visitor Get(String, String) Declaration [HttpGet] [Authorize(Roles = \"Administrators\")] public IEnumerable<Visitor> Get(string siteid, string fromdate) Parameters Type Name Description System.String siteid System.String fromdate Returns Type Description System.Collections.Generic.IEnumerable < Visitor >"
  },
  "api/Oqtane.Databases.DatabaseBase.html": {
    "href": "api/Oqtane.Databases.DatabaseBase.html",
    "title": "Class DatabaseBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class DatabaseBase Inheritance System.Object DatabaseBase Implements IDatabase Namespace : Oqtane.Databases Assembly : Oqtane.Server.dll Syntax public abstract class DatabaseBase : IDatabase Constructors DatabaseBase(String, String) Declaration protected DatabaseBase(string name, string friendlyName) Parameters Type Name Description System.String name System.String friendlyName Properties AssemblyName Declaration public string AssemblyName { get; } Property Value Type Description System.String FriendlyName Declaration public string FriendlyName { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Provider Declaration public abstract string Provider { get; } Property Value Type Description System.String TypeName Declaration public string TypeName { get; } Property Value Type Description System.String Methods AddAutoIncrementColumn(ColumnsBuilder, String) Declaration public abstract OperationBuilder<AddColumnOperation> AddAutoIncrementColumn(ColumnsBuilder table, string name) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder table System.String name Returns Type Description Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder < Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation > AlterStringColumn(MigrationBuilder, String, String, Int32, Boolean, Boolean) Declaration public virtual void AlterStringColumn(MigrationBuilder builder, string name, string table, int length, bool nullable, bool unicode) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder builder System.String name System.String table System.Int32 length System.Boolean nullable System.Boolean unicode ConcatenateSql(String[]) Declaration public virtual string ConcatenateSql(params string[] values) Parameters Type Name Description System.String [] values Returns Type Description System.String DropColumn(MigrationBuilder, String, String) Declaration public virtual void DropColumn(MigrationBuilder builder, string name, string table) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder builder System.String name System.String table ExecuteNonQuery(String, String) Declaration public abstract int ExecuteNonQuery(string connectionString, string query) Parameters Type Name Description System.String connectionString System.String query Returns Type Description System.Int32 ExecuteReader(String, String) Declaration public abstract IDataReader ExecuteReader(string connectionString, string query) Parameters Type Name Description System.String connectionString System.String query Returns Type Description System.Data.IDataReader Initialize(Type) Declaration protected static void Initialize(Type type) Parameters Type Name Description System.Type type RewriteName(String) Declaration public virtual string RewriteName(string name) Parameters Type Name Description System.String name Returns Type Description System.String RewriteValue(String, String) Declaration public virtual string RewriteValue(string value, string type) Parameters Type Name Description System.String value System.String type Returns Type Description System.String UpdateIdentityStoreTableNames(ModelBuilder) Declaration public virtual void UpdateIdentityStoreTableNames(ModelBuilder builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder builder UseDatabase(DbContextOptionsBuilder, String) Declaration public abstract DbContextOptionsBuilder UseDatabase(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder System.String connectionString Returns Type Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder Implements IDatabase"
  },
  "api/Oqtane.Databases.html": {
    "href": "api/Oqtane.Databases.html",
    "title": "Namespace Oqtane.Databases | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Databases Classes DatabaseBase"
  },
  "api/Oqtane.Databases.Interfaces.html": {
    "href": "api/Oqtane.Databases.Interfaces.html",
    "title": "Namespace Oqtane.Databases.Interfaces | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Databases.Interfaces Interfaces IDatabase"
  },
  "api/Oqtane.Databases.Interfaces.IDatabase.html": {
    "href": "api/Oqtane.Databases.Interfaces.IDatabase.html",
    "title": "Interface IDatabase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IDatabase Namespace : Oqtane.Databases.Interfaces Assembly : Oqtane.Server.dll Syntax public interface IDatabase Properties AssemblyName Declaration string AssemblyName { get; } Property Value Type Description System.String FriendlyName Declaration string FriendlyName { get; } Property Value Type Description System.String Name Declaration string Name { get; } Property Value Type Description System.String Provider Declaration string Provider { get; } Property Value Type Description System.String TypeName Declaration string TypeName { get; } Property Value Type Description System.String Methods AddAutoIncrementColumn(ColumnsBuilder, String) Declaration OperationBuilder<AddColumnOperation> AddAutoIncrementColumn(ColumnsBuilder table, string name) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder table System.String name Returns Type Description Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder < Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation > AlterStringColumn(MigrationBuilder, String, String, Int32, Boolean, Boolean) Declaration void AlterStringColumn(MigrationBuilder builder, string name, string table, int length, bool nullable, bool unicode) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder builder System.String name System.String table System.Int32 length System.Boolean nullable System.Boolean unicode ConcatenateSql(String[]) Declaration string ConcatenateSql(params string[] values) Parameters Type Name Description System.String [] values Returns Type Description System.String DropColumn(MigrationBuilder, String, String) Declaration void DropColumn(MigrationBuilder builder, string name, string table) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder builder System.String name System.String table ExecuteNonQuery(String, String) Declaration int ExecuteNonQuery(string connectionString, string query) Parameters Type Name Description System.String connectionString System.String query Returns Type Description System.Int32 ExecuteReader(String, String) Declaration IDataReader ExecuteReader(string connectionString, string query) Parameters Type Name Description System.String connectionString System.String query Returns Type Description System.Data.IDataReader RewriteName(String) Declaration string RewriteName(string name) Parameters Type Name Description System.String name Returns Type Description System.String RewriteValue(String, String) Declaration string RewriteValue(string value, string type) Parameters Type Name Description System.String value System.String type Returns Type Description System.String UpdateIdentityStoreTableNames(ModelBuilder) Declaration void UpdateIdentityStoreTableNames(ModelBuilder builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder builder UseDatabase(DbContextOptionsBuilder, String) Declaration DbContextOptionsBuilder UseDatabase(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder System.String connectionString Returns Type Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder"
  },
  "api/Oqtane.Documentation.html": {
    "href": "api/Oqtane.Documentation.html",
    "title": "Namespace Oqtane.Documentation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Documentation This namespace contains attributes like PublicApi which mark code as public, private, internal, etc. Depending on what attributes you add to your code it will appear in the generated docs - and possibly have a warning or something attached. Typical use: [PublicApi] public class YourClass { // this will be documented without any special comments // because we're not using the <summary> tag public string Name; /// <summary> /// This will be documented with this text in the summary /// </summary> public string Something; /// <summary> /// This won't appear in the public documentation /// </summary> [PrivateApi(\"Don't publish this - should only be used internally\")] public string InternalSpecialName; /// <summary> /// This will appear in the docs, but the Work-In-Progress will be clearly visible /// </summary> [WorkInProgressApi(\"We're not done yet, may change\")] public string NotDoneYet; /// <summary> /// This will appear in the docs, but with a warning /// </summary> [InternalApi_DoNotUse_MayChangeWithoutNotice(\"This may help you, but please don't use it\")] public string YouShouldKnowAboutThisButNotUseIt; } Classes InternalApi_DoNotUse_MayChangeWithoutNotice This attribute serves as metadata for other things to mark them as internal APIs. Use this on stuff you want to document publicly, but mark as internal so people are warned PrivateApi This attribute marks classes, methods, etc. as private APIs So they should not be publicly documented. By default, all APIs are private, so you only need this attribute on children of classes marked with [PublicApi] . PublicApi This attribute marks classes, properties etc. as public APIs. Any API / code with this attribute will be published in the docs. You can apply it to anything, but usually you will only need it on classes. WorkInProgressApi This attribute marks APIs to be publicly documented with a clear warning that it's work in progress."
  },
  "api/Oqtane.Documentation.InternalApi_DoNotUse_MayChangeWithoutNotice.html": {
    "href": "api/Oqtane.Documentation.InternalApi_DoNotUse_MayChangeWithoutNotice.html",
    "title": "Class InternalApi_DoNotUse_MayChangeWithoutNotice | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class InternalApi_DoNotUse_MayChangeWithoutNotice This attribute serves as metadata for other things to mark them as internal APIs. Use this on stuff you want to document publicly, but mark as internal so people are warned Inheritance System.Object System.Attribute InternalApi_DoNotUse_MayChangeWithoutNotice Namespace : Oqtane.Documentation Assembly : Oqtane.Shared.dll Syntax [AttributeUsage(AttributeTargets.All, AllowMultiple = true, Inherited = false)] [PublicApi] public class InternalApi_DoNotUse_MayChangeWithoutNotice : Attribute Constructors InternalApi_DoNotUse_MayChangeWithoutNotice() The [InternalApi_DoNotUse_MayChangeWithoutNotice] attribute can be used without additional comment. Declaration public InternalApi_DoNotUse_MayChangeWithoutNotice() InternalApi_DoNotUse_MayChangeWithoutNotice(String) Constructor with optional comment [InternalApi_DoNotUse_MayChangeWithoutNotice(some-comment)] . Declaration public InternalApi_DoNotUse_MayChangeWithoutNotice(string comment) Parameters Type Name Description System.String comment Reason why it's internal, optional"
  },
  "api/Oqtane.Documentation.PrivateApi.html": {
    "href": "api/Oqtane.Documentation.PrivateApi.html",
    "title": "Class PrivateApi | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PrivateApi This attribute marks classes, methods, etc. as private APIs So they should not be publicly documented. By default, all APIs are private, so you only need this attribute on children of classes marked with [PublicApi] . If you attach this attribute to a class like this: [PrivateApi] public class YourClass { } or like this [PrivateApi(\"Reason why the API should remain private\")] public class YourClass { } or in combination with PublicApi [PublicApi] public class YourClass { public string Name; [PrivateApi(\"Don't publish this - should only be used internally\")] public string InternalSpecialName; } It will result in this class, method etc. to not be documented in the docs.oqtane.org. Inheritance System.Object System.Attribute PrivateApi Namespace : Oqtane.Documentation Assembly : Oqtane.Shared.dll Syntax [AttributeUsage(AttributeTargets.All, AllowMultiple = true, Inherited = false)] [PublicApi] public class PrivateApi : Attribute Constructors PrivateApi() The [PrivateApi] attribute can be used without additional comment. Declaration public PrivateApi() PrivateApi(String) Constructor with optional comment [PrivateApi(some-comment)] . Declaration public PrivateApi(string comment) Parameters Type Name Description System.String comment Reason why it's private, optional"
  },
  "api/Oqtane.Documentation.PublicApi.html": {
    "href": "api/Oqtane.Documentation.PublicApi.html",
    "title": "Class PublicApi | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PublicApi This attribute marks classes, properties etc. as public APIs. Any API / code with this attribute will be published in the docs. You can apply it to anything, but usually you will only need it on classes. If you attach this attribute to a class like this: [PublicApi] public class YourClass { } or like this [PublicApi(\"This is stable code\")] public class YourClass { } It will result in this class, method etc. to be publicly documented in the docs.oqtane.org. If you want the entire class to be documented, just add this to the class. To exclude certain methods or properties add a PrivateApi , InternalApi or WorkInProgress attribute. Inheritance System.Object System.Attribute PublicApi Namespace : Oqtane.Documentation Assembly : Oqtane.Shared.dll Syntax [AttributeUsage(AttributeTargets.All, AllowMultiple = true, Inherited = false)] [PublicApi] public class PublicApi : Attribute Constructors PublicApi() The [PublicApi] attribute can usually be used without additional comment. Declaration public PublicApi() PublicApi(String) Constructor with optional comment [PublicApi(some-comment)] Declaration public PublicApi(string comment) Parameters Type Name Description System.String comment Reason why it's public, optional"
  },
  "api/Oqtane.Documentation.WorkInProgressApi.html": {
    "href": "api/Oqtane.Documentation.WorkInProgressApi.html",
    "title": "Class WorkInProgressApi | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class WorkInProgressApi This attribute marks APIs to be publicly documented with a clear warning that it's work in progress. Inheritance System.Object System.Attribute WorkInProgressApi Namespace : Oqtane.Documentation Assembly : Oqtane.Shared.dll Syntax [AttributeUsage(AttributeTargets.All, AllowMultiple = true, Inherited = false)] [PublicApi] public class WorkInProgressApi : Attribute Constructors WorkInProgressApi(String) The [WorkInProgressApi(some-comment)] attributes must always have a comment why they are WIP. Declaration public WorkInProgressApi(string comment) Parameters Type Name Description System.String comment Reason why it's WIP, required"
  },
  "api/Oqtane.Enums.html": {
    "href": "api/Oqtane.Enums.html",
    "title": "Namespace Oqtane.Enums | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Enums TODO: Please document what this namespace is for. Enums LogFunction MigrationType"
  },
  "api/Oqtane.Enums.LogFunction.html": {
    "href": "api/Oqtane.Enums.LogFunction.html",
    "title": "Enum LogFunction | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum LogFunction Namespace : Oqtane.Enums Assembly : Oqtane.Shared.dll Syntax public enum LogFunction Fields Name Description Create Delete Other Read Security Update"
  },
  "api/Oqtane.Enums.MigrationType.html": {
    "href": "api/Oqtane.Enums.MigrationType.html",
    "title": "Enum MigrationType | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum MigrationType Namespace : Oqtane.Enums Assembly : Oqtane.Shared.dll Syntax public enum MigrationType Fields Name Description Down Up"
  },
  "api/Oqtane.Extensions.ApplicationBuilderExtensions.html": {
    "href": "api/Oqtane.Extensions.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ApplicationBuilderExtensions Inheritance System.Object ApplicationBuilderExtensions Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class ApplicationBuilderExtensions Methods ConfigureOqtaneAssemblies(IApplicationBuilder, IWebHostEnvironment) Declaration public static IApplicationBuilder ConfigureOqtaneAssemblies(this IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IWebHostEnvironment env Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder UseJwtAuthorization(IApplicationBuilder) Declaration public static IApplicationBuilder UseJwtAuthorization(this IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder UseOqtaneLocalization(IApplicationBuilder) Declaration public static IApplicationBuilder UseOqtaneLocalization(this IApplicationBuilder app) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder UseTenantResolution(IApplicationBuilder) Declaration public static IApplicationBuilder UseTenantResolution(this IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder"
  },
  "api/Oqtane.Extensions.DbContextOptionsBuilderExtensions.html": {
    "href": "api/Oqtane.Extensions.DbContextOptionsBuilderExtensions.html",
    "title": "Class DbContextOptionsBuilderExtensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class DbContextOptionsBuilderExtensions Inheritance System.Object DbContextOptionsBuilderExtensions Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class DbContextOptionsBuilderExtensions Methods UseOqtaneDatabase(DbContextOptionsBuilder, IDatabase, String) Declaration public static DbContextOptionsBuilder UseOqtaneDatabase(this DbContextOptionsBuilder optionsBuilder, IDatabase database, string connectionString) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder IDatabase database System.String connectionString Returns Type Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder"
  },
  "api/Oqtane.Extensions.DictionaryExtensions.html": {
    "href": "api/Oqtane.Extensions.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class DictionaryExtensions Inheritance System.Object DictionaryExtensions Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class DictionaryExtensions Methods GetValue<TKey, TValue>(Dictionary<TKey, TValue>, TKey, TValue, Boolean) Declaration public static TValue GetValue<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, TValue defaultValue, bool nullOrEmptyValueIsValid = false) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> dictionary TKey key TValue defaultValue System.Boolean nullOrEmptyValueIsValid Returns Type Description TValue Type Parameters Name Description TKey TValue"
  },
  "api/Oqtane.Extensions.html": {
    "href": "api/Oqtane.Extensions.html",
    "title": "Namespace Oqtane.Extensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Extensions TODO: Please document what this namespace is for. Classes ApplicationBuilderExtensions DbContextOptionsBuilderExtensions DictionaryExtensions HttpContextExtensions MimeUtilities OqtaneSiteAuthenticationBuilderExtensions OqtaneSiteIdentityBuilderExtensions PermissionExtension StringExtensions"
  },
  "api/Oqtane.Extensions.HttpContextExtensions.html": {
    "href": "api/Oqtane.Extensions.HttpContextExtensions.html",
    "title": "Class HttpContextExtensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class HttpContextExtensions Inheritance System.Object HttpContextExtensions Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class HttpContextExtensions Methods GetAlias(HttpContext) Declaration public static Alias GetAlias(this HttpContext context) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context Returns Type Description Alias GetSiteSettings(HttpContext) Declaration public static Dictionary<string, string> GetSiteSettings(this HttpContext context) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String >"
  },
  "api/Oqtane.Extensions.MimeUtilities.html": {
    "href": "api/Oqtane.Extensions.MimeUtilities.html",
    "title": "Class MimeUtilities | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class MimeUtilities Inheritance System.Object MimeUtilities Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class MimeUtilities Methods GetMimeType(File) Return Mime content type based on file extension Declaration public static string GetMimeType(this File file) Parameters Type Name Description File file Returns Type Description System.String GetMimeType(String) Return Mime content type based on file extension Declaration public static string GetMimeType(string fileName) Parameters Type Name Description System.String fileName File name Returns Type Description System.String"
  },
  "api/Oqtane.Extensions.OqtaneSiteAuthenticationBuilderExtensions.html": {
    "href": "api/Oqtane.Extensions.OqtaneSiteAuthenticationBuilderExtensions.html",
    "title": "Class OqtaneSiteAuthenticationBuilderExtensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class OqtaneSiteAuthenticationBuilderExtensions Inheritance System.Object OqtaneSiteAuthenticationBuilderExtensions Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class OqtaneSiteAuthenticationBuilderExtensions Methods WithSiteAuthentication(OqtaneSiteOptionsBuilder) Declaration public static OqtaneSiteOptionsBuilder WithSiteAuthentication(this OqtaneSiteOptionsBuilder builder) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.OqtaneSiteOptionsBuilder builder Returns Type Description Microsoft.Extensions.DependencyInjection.OqtaneSiteOptionsBuilder"
  },
  "api/Oqtane.Extensions.OqtaneSiteIdentityBuilderExtensions.html": {
    "href": "api/Oqtane.Extensions.OqtaneSiteIdentityBuilderExtensions.html",
    "title": "Class OqtaneSiteIdentityBuilderExtensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class OqtaneSiteIdentityBuilderExtensions Inheritance System.Object OqtaneSiteIdentityBuilderExtensions Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class OqtaneSiteIdentityBuilderExtensions Methods WithSiteIdentity(OqtaneSiteOptionsBuilder) Declaration public static OqtaneSiteOptionsBuilder WithSiteIdentity(this OqtaneSiteOptionsBuilder builder) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.OqtaneSiteOptionsBuilder builder Returns Type Description Microsoft.Extensions.DependencyInjection.OqtaneSiteOptionsBuilder"
  },
  "api/Oqtane.Extensions.PermissionExtension.html": {
    "href": "api/Oqtane.Extensions.PermissionExtension.html",
    "title": "Class PermissionExtension | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PermissionExtension Inheritance System.Object PermissionExtension Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class PermissionExtension Methods EncodePermissions(IEnumerable<Permission>) Declaration public static string EncodePermissions(this IEnumerable<Permission> permissionList) Parameters Type Name Description System.Collections.Generic.IEnumerable < Permission > permissionList Returns Type Description System.String"
  },
  "api/Oqtane.Extensions.StringExtensions.html": {
    "href": "api/Oqtane.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class StringExtensions Inheritance System.Object StringExtensions Namespace : Oqtane.Extensions Assembly : Oqtane.Server.dll Syntax public static class StringExtensions Methods ReplaceMultiple(String, String[], String) Declaration public static string ReplaceMultiple(this string s, string[] oldValues, string newValue) Parameters Type Name Description System.String s System.String [] oldValues System.String newValue Returns Type Description System.String StartWithAnyOf(String, IEnumerable<String>) Declaration public static bool StartWithAnyOf(this string s, IEnumerable<string> list) Parameters Type Name Description System.String s System.Collections.Generic.IEnumerable < System.String > list Returns Type Description System.Boolean"
  },
  "api/Oqtane.html": {
    "href": "api/Oqtane.html",
    "title": "Namespace Oqtane | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane TODO: Please document what this namespace is for. Classes SharedResources Dummy class used to collect shared resource strings for this application Startup"
  },
  "api/Oqtane.Infrastructure.AliasAccessor.html": {
    "href": "api/Oqtane.Infrastructure.AliasAccessor.html",
    "title": "Class AliasAccessor | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class AliasAccessor Inheritance System.Object AliasAccessor Implements IAliasAccessor Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class AliasAccessor : IAliasAccessor Constructors AliasAccessor(IHttpContextAccessor) Declaration public AliasAccessor(IHttpContextAccessor httpContextAccessor) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Properties Alias Declaration public Alias Alias { get; } Property Value Type Description Alias Implements IAliasAccessor"
  },
  "api/Oqtane.Infrastructure.ConfigManager.html": {
    "href": "api/Oqtane.Infrastructure.ConfigManager.html",
    "title": "Class ConfigManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ConfigManager Inheritance System.Object ConfigManager Implements IConfigManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class ConfigManager : IConfigManager Constructors ConfigManager(IConfigurationRoot) Declaration public ConfigManager(IConfigurationRoot config) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot config Methods AddOrUpdateSetting<T>(String, T, Boolean) Declaration public void AddOrUpdateSetting<T>(string key, T value, bool reload) Parameters Type Name Description System.String key T value System.Boolean reload Type Parameters Name Description T AddOrUpdateSetting<T>(String, String, T, Boolean) Declaration public void AddOrUpdateSetting<T>(string file, string key, T value, bool reload) Parameters Type Name Description System.String file System.String key T value System.Boolean reload Type Parameters Name Description T GetConnectionString() Declaration public string GetConnectionString() Returns Type Description System.String GetConnectionString(String) Declaration public string GetConnectionString(string name) Parameters Type Name Description System.String name Returns Type Description System.String GetInstallationId() Declaration public string GetInstallationId() Returns Type Description System.String GetSection(String) Declaration public IConfigurationSection GetSection(string key) Parameters Type Name Description System.String key Returns Type Description Microsoft.Extensions.Configuration.IConfigurationSection GetSetting<T>(String, T) Declaration public T GetSetting<T>(string sectionKey, T defaultValue) Parameters Type Name Description System.String sectionKey T defaultValue Returns Type Description T Type Parameters Name Description T GetSetting<T>(String, String, T) Declaration public T GetSetting<T>(string sectionKey, string settingKey, T defaultValue) Parameters Type Name Description System.String sectionKey System.String settingKey T defaultValue Returns Type Description T Type Parameters Name Description T IsInstalled() Declaration public bool IsInstalled() Returns Type Description System.Boolean Reload() Declaration public void Reload() RemoveSetting(String, Boolean) Declaration public void RemoveSetting(string key, bool reload) Parameters Type Name Description System.String key System.Boolean reload RemoveSetting(String, String, Boolean) Declaration public void RemoveSetting(string file, string key, bool reload) Parameters Type Name Description System.String file System.String key System.Boolean reload Implements IConfigManager"
  },
  "api/Oqtane.Infrastructure.DatabaseManager.html": {
    "href": "api/Oqtane.Infrastructure.DatabaseManager.html",
    "title": "Class DatabaseManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class DatabaseManager Inheritance System.Object DatabaseManager Implements IDatabaseManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class DatabaseManager : IDatabaseManager Constructors DatabaseManager(IConfigManager, IServiceScopeFactory, IWebHostEnvironment, IMemoryCache, IConfigManager, ILogger<DatabaseManager>) Declaration public DatabaseManager(IConfigManager config, IServiceScopeFactory serviceScopeFactory, IWebHostEnvironment environment, IMemoryCache cache, IConfigManager configManager, ILogger<DatabaseManager> filelogger) Parameters Type Name Description IConfigManager config Microsoft.Extensions.DependencyInjection.IServiceScopeFactory serviceScopeFactory Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment Microsoft.Extensions.Caching.Memory.IMemoryCache cache IConfigManager configManager Microsoft.Extensions.Logging.ILogger < DatabaseManager > filelogger Methods Install() Declaration public Installation Install() Returns Type Description Installation Install(InstallConfig) Declaration public Installation Install(InstallConfig install) Parameters Type Name Description InstallConfig install Returns Type Description Installation IsInstalled() Declaration public Installation IsInstalled() Returns Type Description Installation UpdateConnectionString(String) Declaration public void UpdateConnectionString(string connectionString) Parameters Type Name Description System.String connectionString UpdateDatabaseType(String) Declaration public void UpdateDatabaseType(string databaseType) Parameters Type Name Description System.String databaseType UpgradeSqlServer(ISqlRepository, String, String, Boolean) Declaration public void UpgradeSqlServer(ISqlRepository sql, string connectionString, string databaseType, bool isMaster) Parameters Type Name Description ISqlRepository sql System.String connectionString System.String databaseType System.Boolean isMaster Implements IDatabaseManager"
  },
  "api/Oqtane.Infrastructure.ExampleSiteMigration.html": {
    "href": "api/Oqtane.Infrastructure.ExampleSiteMigration.html",
    "title": "Class ExampleSiteMigration | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ExampleSiteMigration Inheritance System.Object ExampleSiteMigration Implements ISiteMigration Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax [SiteMigration(\"localhost:44357\", \"01.00.00\")] public class ExampleSiteMigration : ISiteMigration Explicit Interface Implementations ISiteMigration.Down(Site, Alias) Declaration void ISiteMigration.Down(Site site, Alias alias) Parameters Type Name Description Site site Alias alias ISiteMigration.Up(Site, Alias) Declaration void ISiteMigration.Up(Site site, Alias alias) Parameters Type Name Description Site site Alias alias Implements ISiteMigration"
  },
  "api/Oqtane.Infrastructure.FileLogger.html": {
    "href": "api/Oqtane.Infrastructure.FileLogger.html",
    "title": "Class FileLogger | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class FileLogger Inheritance System.Object FileLogger Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class FileLogger : ILogger Constructors FileLogger(FileLoggerProvider, IWebHostEnvironment, IConfigManager) Declaration public FileLogger(FileLoggerProvider FileLoggerProvider, IWebHostEnvironment environment, IConfigManager configManager) Parameters Type Name Description FileLoggerProvider FileLoggerProvider Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment IConfigManager configManager Fields _FileLoggerProvider Declaration protected readonly FileLoggerProvider _FileLoggerProvider Field Value Type Description FileLoggerProvider Methods BeginScope<TState>(TState) Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description System.IDisposable Type Parameters Name Description TState IsEnabled(LogLevel) Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description Microsoft.Extensions.Logging.LogLevel logLevel Returns Type Description System.Boolean Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters Type Name Description Microsoft.Extensions.Logging.LogLevel logLevel Microsoft.Extensions.Logging.EventId eventId TState state System.Exception exception System.Func <TState, System.Exception , System.String > formatter Type Parameters Name Description TState"
  },
  "api/Oqtane.Infrastructure.FileLoggerProvider.html": {
    "href": "api/Oqtane.Infrastructure.FileLoggerProvider.html",
    "title": "Class FileLoggerProvider | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class FileLoggerProvider FileLogger should only be used in scenarios where a database is not available or tenant/site cannot be determined ( ie. during startup ) Inheritance System.Object FileLoggerProvider Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax [ProviderAlias(\"FileLogger\")] public class FileLoggerProvider : ILoggerProvider, IDisposable Constructors FileLoggerProvider(IWebHostEnvironment, IConfigManager) Declaration public FileLoggerProvider(IWebHostEnvironment environment, IConfigManager configManager) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment IConfigManager configManager Methods CreateLogger(String) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description System.String categoryName Returns Type Description Microsoft.Extensions.Logging.ILogger Dispose() Declaration public void Dispose()"
  },
  "api/Oqtane.Infrastructure.HostedServiceBase.html": {
    "href": "api/Oqtane.Infrastructure.HostedServiceBase.html",
    "title": "Class HostedServiceBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class HostedServiceBase Inheritance System.Object HostedServiceBase NotificationJob PurgeJob Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public abstract class HostedServiceBase : IHostedService, IDisposable Constructors HostedServiceBase(IServiceScopeFactory) Declaration public HostedServiceBase(IServiceScopeFactory serviceScopeFactory) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScopeFactory serviceScopeFactory Properties EndDate Declaration public DateTime? EndDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Frequency Declaration public string Frequency { get; set; } Property Value Type Description System.String Interval Declaration public int Interval { get; set; } Property Value Type Description System.Int32 IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean Name Declaration public string Name { get; set; } Property Value Type Description System.String RetentionHistory Declaration public int RetentionHistory { get; set; } Property Value Type Description System.Int32 StartDate Declaration public DateTime? StartDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Methods Dispose() Declaration public void Dispose() ExecuteAsync(CancellationToken) Declaration protected async Task ExecuteAsync(CancellationToken stoppingToken) Parameters Type Name Description System.Threading.CancellationToken stoppingToken Returns Type Description System.Threading.Tasks.Task ExecuteJob(IServiceProvider) Declaration public abstract string ExecuteJob(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description System.String StartAsync(CancellationToken) Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task StopAsync(CancellationToken) Declaration public async Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Infrastructure.html": {
    "href": "api/Oqtane.Infrastructure.html",
    "title": "Namespace Oqtane.Infrastructure | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Infrastructure TODO: Please document what this namespace is for. Classes AliasAccessor ConfigManager DatabaseManager ExampleSiteMigration FileLogger FileLoggerProvider FileLogger should only be used in scenarios where a database is not available or tenant/site cannot be determined ( ie. during startup ) HostedServiceBase InstallationManager LocalizationManager LocalizationOptions LogManager NotificationJob PurgeJob SiteMigrationAttribute SiteOptions<TOptions> SiteOptionsCache<TOptions> SiteOptionsFactory<TOptions> SiteOptionsManager<TOptions> SiteState SyncManager TenantManager UpgradeManager Interfaces IAliasAccessor IConfigManager IDatabaseManager IHostResources IInstallable IInstallationManager ILocalizationManager ILogManager IServerStartup ISiteMigration ISiteOptions<TOptions> ISiteTemplate ISyncManager ITenantManager IUpgradeManager"
  },
  "api/Oqtane.Infrastructure.IAliasAccessor.html": {
    "href": "api/Oqtane.Infrastructure.IAliasAccessor.html",
    "title": "Interface IAliasAccessor | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IAliasAccessor Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IAliasAccessor Properties Alias Declaration Alias Alias { get; } Property Value Type Description Alias"
  },
  "api/Oqtane.Infrastructure.IConfigManager.html": {
    "href": "api/Oqtane.Infrastructure.IConfigManager.html",
    "title": "Interface IConfigManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IConfigManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IConfigManager Methods AddOrUpdateSetting<T>(String, T, Boolean) Declaration void AddOrUpdateSetting<T>(string key, T value, bool reload) Parameters Type Name Description System.String key T value System.Boolean reload Type Parameters Name Description T AddOrUpdateSetting<T>(String, String, T, Boolean) Declaration void AddOrUpdateSetting<T>(string file, string key, T value, bool reload) Parameters Type Name Description System.String file System.String key T value System.Boolean reload Type Parameters Name Description T GetConnectionString() Declaration string GetConnectionString() Returns Type Description System.String GetConnectionString(String) Declaration string GetConnectionString(string name) Parameters Type Name Description System.String name Returns Type Description System.String GetInstallationId() Declaration string GetInstallationId() Returns Type Description System.String GetSection(String) Declaration IConfigurationSection GetSection(string sectionKey) Parameters Type Name Description System.String sectionKey Returns Type Description Microsoft.Extensions.Configuration.IConfigurationSection GetSetting<T>(String, T) Declaration T GetSetting<T>(string settingKey, T defaultValue) Parameters Type Name Description System.String settingKey T defaultValue Returns Type Description T Type Parameters Name Description T GetSetting<T>(String, String, T) Declaration T GetSetting<T>(string sectionKey, string settingKey, T defaultValue) Parameters Type Name Description System.String sectionKey System.String settingKey T defaultValue Returns Type Description T Type Parameters Name Description T IsInstalled() Declaration bool IsInstalled() Returns Type Description System.Boolean Reload() Declaration void Reload() RemoveSetting(String, Boolean) Declaration void RemoveSetting(string key, bool reload) Parameters Type Name Description System.String key System.Boolean reload RemoveSetting(String, String, Boolean) Declaration void RemoveSetting(string file, string key, bool reload) Parameters Type Name Description System.String file System.String key System.Boolean reload"
  },
  "api/Oqtane.Infrastructure.IDatabaseManager.html": {
    "href": "api/Oqtane.Infrastructure.IDatabaseManager.html",
    "title": "Interface IDatabaseManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IDatabaseManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IDatabaseManager Methods Install() Declaration Installation Install() Returns Type Description Installation Install(InstallConfig) Declaration Installation Install(InstallConfig install) Parameters Type Name Description InstallConfig install Returns Type Description Installation IsInstalled() Declaration Installation IsInstalled() Returns Type Description Installation"
  },
  "api/Oqtane.Infrastructure.IHostResources.html": {
    "href": "api/Oqtane.Infrastructure.IHostResources.html",
    "title": "Interface IHostResources | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IHostResources Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IHostResources Properties Resources Declaration List<Resource> Resources { get; } Property Value Type Description System.Collections.Generic.List < Resource >"
  },
  "api/Oqtane.Infrastructure.IInstallable.html": {
    "href": "api/Oqtane.Infrastructure.IInstallable.html",
    "title": "Interface IInstallable | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IInstallable Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IInstallable Methods Install(Tenant, String) Declaration bool Install(Tenant tenant, string version) Parameters Type Name Description Tenant tenant System.String version Returns Type Description System.Boolean Uninstall(Tenant) Declaration bool Uninstall(Tenant tenant) Parameters Type Name Description Tenant tenant Returns Type Description System.Boolean"
  },
  "api/Oqtane.Infrastructure.IInstallationManager.html": {
    "href": "api/Oqtane.Infrastructure.IInstallationManager.html",
    "title": "Interface IInstallationManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IInstallationManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IInstallationManager Methods InstallPackages() Declaration void InstallPackages() RestartApplication() Declaration void RestartApplication() UninstallPackage(String) Declaration bool UninstallPackage(string PackageName) Parameters Type Name Description System.String PackageName Returns Type Description System.Boolean UpgradeFramework() Declaration Task UpgradeFramework() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Infrastructure.ILocalizationManager.html": {
    "href": "api/Oqtane.Infrastructure.ILocalizationManager.html",
    "title": "Interface ILocalizationManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILocalizationManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface ILocalizationManager Methods GetDefaultCulture() Declaration string GetDefaultCulture() Returns Type Description System.String GetSupportedCultures() Declaration string[] GetSupportedCultures() Returns Type Description System.String []"
  },
  "api/Oqtane.Infrastructure.ILogManager.html": {
    "href": "api/Oqtane.Infrastructure.ILogManager.html",
    "title": "Interface ILogManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILogManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface ILogManager Methods Log(Log) Declaration void Log(Log log) Parameters Type Name Description Log log Log(LogLevel, Object, LogFunction, Exception, String, Object[]) Declaration void Log(LogLevel level, object class, LogFunction function, Exception exception, string message, params object[] args) Parameters Type Name Description LogLevel level System.Object class LogFunction function System.Exception exception System.String message System.Object [] args Log(LogLevel, Object, LogFunction, String, Object[]) Declaration void Log(LogLevel level, object class, LogFunction function, string message, params object[] args) Parameters Type Name Description LogLevel level System.Object class LogFunction function System.String message System.Object [] args Log(Int32, LogLevel, Object, LogFunction, Exception, String, Object[]) Declaration void Log(int siteId, LogLevel level, object class, LogFunction function, Exception exception, string message, params object[] args) Parameters Type Name Description System.Int32 siteId LogLevel level System.Object class LogFunction function System.Exception exception System.String message System.Object [] args Log(Int32, LogLevel, Object, LogFunction, String, Object[]) Declaration void Log(int siteId, LogLevel level, object class, LogFunction function, string message, params object[] args) Parameters Type Name Description System.Int32 siteId LogLevel level System.Object class LogFunction function System.String message System.Object [] args"
  },
  "api/Oqtane.Infrastructure.InstallationManager.html": {
    "href": "api/Oqtane.Infrastructure.InstallationManager.html",
    "title": "Class InstallationManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class InstallationManager Inheritance System.Object InstallationManager Implements IInstallationManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class InstallationManager : IInstallationManager Constructors InstallationManager(IHostApplicationLifetime, IWebHostEnvironment) Declaration public InstallationManager(IHostApplicationLifetime hostApplicationLifetime, IWebHostEnvironment environment) Parameters Type Name Description Microsoft.Extensions.Hosting.IHostApplicationLifetime hostApplicationLifetime Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment Methods InstallPackages() Declaration public void InstallPackages() InstallPackages(String, String) Declaration public static bool InstallPackages(string webRootPath, string contentRootPath) Parameters Type Name Description System.String webRootPath System.String contentRootPath Returns Type Description System.Boolean RestartApplication() Declaration public void RestartApplication() UninstallPackage(String) Declaration public bool UninstallPackage(string PackageName) Parameters Type Name Description System.String PackageName Returns Type Description System.Boolean UpgradeFramework() Declaration public async Task UpgradeFramework() Returns Type Description System.Threading.Tasks.Task Implements IInstallationManager"
  },
  "api/Oqtane.Infrastructure.IServerStartup.html": {
    "href": "api/Oqtane.Infrastructure.IServerStartup.html",
    "title": "Interface IServerStartup | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IServerStartup Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IServerStartup Methods Configure(IApplicationBuilder, IWebHostEnvironment) Declaration void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IWebHostEnvironment env ConfigureMvc(IMvcBuilder) Declaration void ConfigureMvc(IMvcBuilder mvcBuilder) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder ConfigureServices(IServiceCollection) Declaration void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/Oqtane.Infrastructure.ISiteMigration.html": {
    "href": "api/Oqtane.Infrastructure.ISiteMigration.html",
    "title": "Interface ISiteMigration | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISiteMigration Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface ISiteMigration Methods Down(Site, Alias) Declaration void Down(Site site, Alias alias) Parameters Type Name Description Site site Alias alias Up(Site, Alias) Declaration void Up(Site site, Alias alias) Parameters Type Name Description Site site Alias alias"
  },
  "api/Oqtane.Infrastructure.ISiteOptions-1.html": {
    "href": "api/Oqtane.Infrastructure.ISiteOptions-1.html",
    "title": "Interface ISiteOptions<TOptions> | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISiteOptions<TOptions> Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface ISiteOptions<TOptions> where TOptions : class, new() Type Parameters Name Description TOptions Methods Configure(TOptions, Alias, Dictionary<String, String>) Declaration void Configure(TOptions options, Alias alias, Dictionary<string, string> sitesettings) Parameters Type Name Description TOptions options Alias alias System.Collections.Generic.Dictionary < System.String , System.String > sitesettings"
  },
  "api/Oqtane.Infrastructure.ISiteTemplate.html": {
    "href": "api/Oqtane.Infrastructure.ISiteTemplate.html",
    "title": "Interface ISiteTemplate | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISiteTemplate Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface ISiteTemplate Properties Name Declaration string Name { get; } Property Value Type Description System.String Methods CreateSite(Site) Declaration List<PageTemplate> CreateSite(Site site) Parameters Type Name Description Site site Returns Type Description System.Collections.Generic.List < PageTemplate >"
  },
  "api/Oqtane.Infrastructure.ISyncManager.html": {
    "href": "api/Oqtane.Infrastructure.ISyncManager.html",
    "title": "Interface ISyncManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISyncManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface ISyncManager Methods AddSyncEvent(Int32, String, Int32) Declaration void AddSyncEvent(int tenantId, string entityName, int entityId) Parameters Type Name Description System.Int32 tenantId System.String entityName System.Int32 entityId AddSyncEvent(Int32, String, Int32, Boolean) Declaration void AddSyncEvent(int tenantId, string entityName, int entityId, bool reload) Parameters Type Name Description System.Int32 tenantId System.String entityName System.Int32 entityId System.Boolean reload GetSyncEvents(Int32, DateTime) Declaration List<SyncEvent> GetSyncEvents(int tenantId, DateTime lastSyncDate) Parameters Type Name Description System.Int32 tenantId System.DateTime lastSyncDate Returns Type Description System.Collections.Generic.List < SyncEvent >"
  },
  "api/Oqtane.Infrastructure.ITenantManager.html": {
    "href": "api/Oqtane.Infrastructure.ITenantManager.html",
    "title": "Interface ITenantManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ITenantManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface ITenantManager Methods GetAlias() Declaration Alias GetAlias() Returns Type Description Alias GetTenant() Declaration Tenant GetTenant() Returns Type Description Tenant SetAlias(Alias) Declaration void SetAlias(Alias alias) Parameters Type Name Description Alias alias SetTenant(Int32) Declaration void SetTenant(int tenantId) Parameters Type Name Description System.Int32 tenantId"
  },
  "api/Oqtane.Infrastructure.IUpgradeManager.html": {
    "href": "api/Oqtane.Infrastructure.IUpgradeManager.html",
    "title": "Interface IUpgradeManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUpgradeManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public interface IUpgradeManager Methods Upgrade(Tenant, String) Declaration void Upgrade(Tenant tenant, string version) Parameters Type Name Description Tenant tenant System.String version"
  },
  "api/Oqtane.Infrastructure.LocalizationManager.html": {
    "href": "api/Oqtane.Infrastructure.LocalizationManager.html",
    "title": "Class LocalizationManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LocalizationManager Inheritance System.Object LocalizationManager Implements ILocalizationManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class LocalizationManager : ILocalizationManager Constructors LocalizationManager(IOptions<LocalizationOptions>) Declaration public LocalizationManager(IOptions<LocalizationOptions> localizationOptions) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < LocalizationOptions > localizationOptions Methods GetDefaultCulture() Declaration public string GetDefaultCulture() Returns Type Description System.String GetSupportedCultures() Declaration public string[] GetSupportedCultures() Returns Type Description System.String [] Implements ILocalizationManager"
  },
  "api/Oqtane.Infrastructure.LocalizationOptions.html": {
    "href": "api/Oqtane.Infrastructure.LocalizationOptions.html",
    "title": "Class LocalizationOptions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LocalizationOptions Inheritance System.Object LocalizationOptions Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class LocalizationOptions Properties DefaultCulture Declaration public string DefaultCulture { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Infrastructure.LogManager.html": {
    "href": "api/Oqtane.Infrastructure.LogManager.html",
    "title": "Class LogManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LogManager Inheritance System.Object LogManager Implements ILogManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class LogManager : ILogManager Constructors LogManager(ILogRepository, ITenantManager, IConfigManager, IUserPermissions, IHttpContextAccessor, IUserRoleRepository, INotificationRepository) Declaration public LogManager(ILogRepository logs, ITenantManager tenantManager, IConfigManager config, IUserPermissions userPermissions, IHttpContextAccessor accessor, IUserRoleRepository userRoles, INotificationRepository notifications) Parameters Type Name Description ILogRepository logs ITenantManager tenantManager IConfigManager config IUserPermissions userPermissions Microsoft.AspNetCore.Http.IHttpContextAccessor accessor IUserRoleRepository userRoles INotificationRepository notifications Methods Log(Log) Declaration public void Log(Log log) Parameters Type Name Description Log log Log(LogLevel, Object, LogFunction, Exception, String, Object[]) Declaration public void Log(LogLevel level, object class, LogFunction function, Exception exception, string message, params object[] args) Parameters Type Name Description LogLevel level System.Object class LogFunction function System.Exception exception System.String message System.Object [] args Log(LogLevel, Object, LogFunction, String, Object[]) Declaration public void Log(LogLevel level, object class, LogFunction function, string message, params object[] args) Parameters Type Name Description LogLevel level System.Object class LogFunction function System.String message System.Object [] args Log(Int32, LogLevel, Object, LogFunction, Exception, String, Object[]) Declaration public void Log(int siteId, LogLevel level, object class, LogFunction function, Exception exception, string message, params object[] args) Parameters Type Name Description System.Int32 siteId LogLevel level System.Object class LogFunction function System.Exception exception System.String message System.Object [] args Log(Int32, LogLevel, Object, LogFunction, String, Object[]) Declaration public void Log(int siteId, LogLevel level, object class, LogFunction function, string message, params object[] args) Parameters Type Name Description System.Int32 siteId LogLevel level System.Object class LogFunction function System.String message System.Object [] args Implements ILogManager"
  },
  "api/Oqtane.Infrastructure.NotificationJob.html": {
    "href": "api/Oqtane.Infrastructure.NotificationJob.html",
    "title": "Class NotificationJob | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class NotificationJob Inheritance System.Object HostedServiceBase NotificationJob Inherited Members HostedServiceBase.Name HostedServiceBase.Frequency HostedServiceBase.Interval HostedServiceBase.StartDate HostedServiceBase.EndDate HostedServiceBase.RetentionHistory HostedServiceBase.IsEnabled HostedServiceBase.ExecuteAsync(CancellationToken) HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.Dispose() Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class NotificationJob : HostedServiceBase, IHostedService, IDisposable Constructors NotificationJob(IServiceScopeFactory) Declaration public NotificationJob(IServiceScopeFactory serviceScopeFactory) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScopeFactory serviceScopeFactory Methods ExecuteJob(IServiceProvider) Declaration public override string ExecuteJob(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description System.String Overrides HostedServiceBase.ExecuteJob(IServiceProvider)"
  },
  "api/Oqtane.Infrastructure.PurgeJob.html": {
    "href": "api/Oqtane.Infrastructure.PurgeJob.html",
    "title": "Class PurgeJob | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PurgeJob Inheritance System.Object HostedServiceBase PurgeJob Inherited Members HostedServiceBase.Name HostedServiceBase.Frequency HostedServiceBase.Interval HostedServiceBase.StartDate HostedServiceBase.EndDate HostedServiceBase.RetentionHistory HostedServiceBase.IsEnabled HostedServiceBase.ExecuteAsync(CancellationToken) HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.Dispose() Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class PurgeJob : HostedServiceBase, IHostedService, IDisposable Constructors PurgeJob(IServiceScopeFactory) Declaration public PurgeJob(IServiceScopeFactory serviceScopeFactory) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScopeFactory serviceScopeFactory Methods ExecuteJob(IServiceProvider) Declaration public override string ExecuteJob(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description System.String Overrides HostedServiceBase.ExecuteJob(IServiceProvider)"
  },
  "api/Oqtane.Infrastructure.SiteMigrationAttribute.html": {
    "href": "api/Oqtane.Infrastructure.SiteMigrationAttribute.html",
    "title": "Class SiteMigrationAttribute | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteMigrationAttribute Inheritance System.Object System.Attribute SiteMigrationAttribute Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class SiteMigrationAttribute : Attribute Constructors SiteMigrationAttribute(String, String) Declaration public SiteMigrationAttribute(string AliasName, string Version) Parameters Type Name Description System.String AliasName System.String Version Properties AliasName Declaration public virtual string AliasName { get; } Property Value Type Description System.String Version Declaration public virtual string Version { get; } Property Value Type Description System.String"
  },
  "api/Oqtane.Infrastructure.SiteOptions-1.html": {
    "href": "api/Oqtane.Infrastructure.SiteOptions-1.html",
    "title": "Class SiteOptions<TOptions> | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteOptions<TOptions> Inheritance System.Object SiteOptions<TOptions> Implements ISiteOptions <TOptions> Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class SiteOptions<TOptions> : ISiteOptions<TOptions> where TOptions : class, new() Type Parameters Name Description TOptions Constructors SiteOptions(Action<TOptions, Alias, Dictionary<String, String>>) Declaration public SiteOptions(Action<TOptions, Alias, Dictionary<string, string>> configureOptions) Parameters Type Name Description System.Action <TOptions, Alias , System.Collections.Generic.Dictionary < System.String , System.String >> configureOptions Methods Configure(TOptions, Alias, Dictionary<String, String>) Declaration public void Configure(TOptions options, Alias alias, Dictionary<string, string> sitesettings) Parameters Type Name Description TOptions options Alias alias System.Collections.Generic.Dictionary < System.String , System.String > sitesettings Implements ISiteOptions<TOptions>"
  },
  "api/Oqtane.Infrastructure.SiteOptionsCache-1.html": {
    "href": "api/Oqtane.Infrastructure.SiteOptionsCache-1.html",
    "title": "Class SiteOptionsCache<TOptions> | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteOptionsCache<TOptions> Inheritance System.Object SiteOptionsCache<TOptions> Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class SiteOptionsCache<TOptions> : IOptionsMonitorCache<TOptions> where TOptions : class, new() Type Parameters Name Description TOptions Constructors SiteOptionsCache(IAliasAccessor) Declaration public SiteOptionsCache(IAliasAccessor aliasAccessor) Parameters Type Name Description IAliasAccessor aliasAccessor Methods Clear() Declaration public void Clear() GetOrAdd(String, Func<TOptions>) Declaration public TOptions GetOrAdd(string name, Func<TOptions> createOptions) Parameters Type Name Description System.String name System.Func <TOptions> createOptions Returns Type Description TOptions TryAdd(String, TOptions) Declaration public bool TryAdd(string name, TOptions options) Parameters Type Name Description System.String name TOptions options Returns Type Description System.Boolean TryRemove(String) Declaration public bool TryRemove(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean"
  },
  "api/Oqtane.Infrastructure.SiteOptionsFactory-1.html": {
    "href": "api/Oqtane.Infrastructure.SiteOptionsFactory-1.html",
    "title": "Class SiteOptionsFactory<TOptions> | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteOptionsFactory<TOptions> Inheritance System.Object SiteOptionsFactory<TOptions> Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class SiteOptionsFactory<TOptions> : IOptionsFactory<TOptions> where TOptions : class, new() Type Parameters Name Description TOptions Constructors SiteOptionsFactory(IEnumerable<IConfigureOptions<TOptions>>, IEnumerable<IPostConfigureOptions<TOptions>>, IEnumerable<ISiteOptions<TOptions>>, IHttpContextAccessor) Declaration public SiteOptionsFactory(IEnumerable<IConfigureOptions<TOptions>> configureOptions, IEnumerable<IPostConfigureOptions<TOptions>> postConfigureOptions, IEnumerable<ISiteOptions<TOptions>> siteOptions, IHttpContextAccessor accessor) Parameters Type Name Description System.Collections.Generic.IEnumerable < Microsoft.Extensions.Options.IConfigureOptions <TOptions>> configureOptions System.Collections.Generic.IEnumerable < Microsoft.Extensions.Options.IPostConfigureOptions <TOptions>> postConfigureOptions System.Collections.Generic.IEnumerable < ISiteOptions <TOptions>> siteOptions Microsoft.AspNetCore.Http.IHttpContextAccessor accessor Methods Create(String) Declaration public TOptions Create(string name) Parameters Type Name Description System.String name Returns Type Description TOptions"
  },
  "api/Oqtane.Infrastructure.SiteOptionsManager-1.html": {
    "href": "api/Oqtane.Infrastructure.SiteOptionsManager-1.html",
    "title": "Class SiteOptionsManager<TOptions> | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteOptionsManager<TOptions> Inheritance System.Object SiteOptionsManager<TOptions> Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class SiteOptionsManager<TOptions> : IOptionsSnapshot<TOptions>, IOptions<TOptions> where TOptions : class, new() Type Parameters Name Description TOptions Constructors SiteOptionsManager(IOptionsFactory<TOptions>, IOptionsMonitorCache<TOptions>) Declaration public SiteOptionsManager(IOptionsFactory<TOptions> factory, IOptionsMonitorCache<TOptions> cache) Parameters Type Name Description Microsoft.Extensions.Options.IOptionsFactory <TOptions> factory Microsoft.Extensions.Options.IOptionsMonitorCache <TOptions> cache Properties Value Declaration public TOptions Value { get; } Property Value Type Description TOptions Methods Get(String) Declaration public virtual TOptions Get(string name) Parameters Type Name Description System.String name Returns Type Description TOptions Reset() Declaration public void Reset()"
  },
  "api/Oqtane.Infrastructure.SiteState.html": {
    "href": "api/Oqtane.Infrastructure.SiteState.html",
    "title": "Class SiteState | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteState Inheritance System.Object SiteState Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class SiteState Properties Alias Declaration public Alias Alias { get; set; } Property Value Type Description Alias"
  },
  "api/Oqtane.Infrastructure.SyncManager.html": {
    "href": "api/Oqtane.Infrastructure.SyncManager.html",
    "title": "Class SyncManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SyncManager Inheritance System.Object SyncManager Implements ISyncManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class SyncManager : ISyncManager Constructors SyncManager() Declaration public SyncManager() Methods AddSyncEvent(Int32, String, Int32) Declaration public void AddSyncEvent(int tenantId, string entityName, int entityId) Parameters Type Name Description System.Int32 tenantId System.String entityName System.Int32 entityId AddSyncEvent(Int32, String, Int32, Boolean) Declaration public void AddSyncEvent(int tenantId, string entityName, int entityId, bool reload) Parameters Type Name Description System.Int32 tenantId System.String entityName System.Int32 entityId System.Boolean reload GetSyncEvents(Int32, DateTime) Declaration public List<SyncEvent> GetSyncEvents(int tenantId, DateTime lastSyncDate) Parameters Type Name Description System.Int32 tenantId System.DateTime lastSyncDate Returns Type Description System.Collections.Generic.List < SyncEvent > Implements ISyncManager"
  },
  "api/Oqtane.Infrastructure.TenantManager.html": {
    "href": "api/Oqtane.Infrastructure.TenantManager.html",
    "title": "Class TenantManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class TenantManager Inheritance System.Object TenantManager Implements ITenantManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class TenantManager : ITenantManager Constructors TenantManager(IHttpContextAccessor, IAliasRepository, ITenantRepository, SiteState) Declaration public TenantManager(IHttpContextAccessor httpContextAccessor, IAliasRepository aliasRepository, ITenantRepository tenantRepository, SiteState siteState) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor IAliasRepository aliasRepository ITenantRepository tenantRepository SiteState siteState Methods GetAlias() Declaration public Alias GetAlias() Returns Type Description Alias GetTenant() Declaration public Tenant GetTenant() Returns Type Description Tenant SetAlias(Alias) Declaration public void SetAlias(Alias alias) Parameters Type Name Description Alias alias SetTenant(Int32) Declaration public void SetTenant(int tenantId) Parameters Type Name Description System.Int32 tenantId Implements ITenantManager"
  },
  "api/Oqtane.Infrastructure.UpgradeManager.html": {
    "href": "api/Oqtane.Infrastructure.UpgradeManager.html",
    "title": "Class UpgradeManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UpgradeManager Inheritance System.Object UpgradeManager Implements IUpgradeManager Namespace : Oqtane.Infrastructure Assembly : Oqtane.Server.dll Syntax public class UpgradeManager : IUpgradeManager Constructors UpgradeManager(IServiceScopeFactory, IWebHostEnvironment, IConfigManager) Declaration public UpgradeManager(IServiceScopeFactory serviceScopeFactory, IWebHostEnvironment environment, IConfigManager configManager) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScopeFactory serviceScopeFactory Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment IConfigManager configManager Methods Upgrade(Tenant, String) Declaration public void Upgrade(Tenant tenant, string version) Parameters Type Name Description Tenant tenant System.String version Implements IUpgradeManager"
  },
  "api/Oqtane.Interfaces.html": {
    "href": "api/Oqtane.Interfaces.html",
    "title": "Namespace Oqtane.Interfaces | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Interfaces Interfaces IDatabaseConfigControl ISettingsControl"
  },
  "api/Oqtane.Interfaces.IDatabaseConfigControl.html": {
    "href": "api/Oqtane.Interfaces.IDatabaseConfigControl.html",
    "title": "Interface IDatabaseConfigControl | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IDatabaseConfigControl Namespace : Oqtane.Interfaces Assembly : Oqtane.Shared.dll Syntax public interface IDatabaseConfigControl Methods GetConnectionString() Declaration string GetConnectionString() Returns Type Description System.String"
  },
  "api/Oqtane.Interfaces.ISettingsControl.html": {
    "href": "api/Oqtane.Interfaces.ISettingsControl.html",
    "title": "Interface ISettingsControl | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISettingsControl Namespace : Oqtane.Interfaces Assembly : Oqtane.Shared.dll Syntax public interface ISettingsControl Methods UpdateSettings() Declaration Task UpdateSettings() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Models.Alias.html": {
    "href": "api/Oqtane.Models.Alias.html",
    "title": "Class Alias | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Alias An Alias maps a url like oqtane.my or oqtane.my/products to a Site and Tenant Inheritance System.Object Alias Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Alias : IAuditable Properties AliasId The primary ID for internal use. It's also used in API calls to identify the site. Declaration public int AliasId { get; set; } Property Value Type Description System.Int32 CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime IsDefault Specifies if the alias is the default for the tenant/site. Requests for non-default aliases are redirected to the default alias. Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name The Alias Name = URL. The Name contains the entire path - so it can be oqtane.me , www.oqtane.me or oqtane.me/products Declaration public string Name { get; set; } Property Value Type Description System.String Path The path contains the url-part after the first slash. If the Name is oqtane.me the Path is empty if the Name is oqtane.me/products the Path is products Declaration [NotMapped] public string Path { get; } Property Value Type Description System.String SiteId The Site this Alias references. Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 SiteKey Unique key used for identifying a site within a runtime process (ie. cache, etc...) Declaration [NotMapped] public string SiteKey { get; } Property Value Type Description System.String TenantId The Tenant this Alias (and the Site) references. It's important, as anything related to the Alias must be requested from a database, which is found by the Tenant it's in. Declaration public int TenantId { get; set; } Property Value Type Description System.Int32 Implements IAuditable"
  },
  "api/Oqtane.Models.Culture.html": {
    "href": "api/Oqtane.Models.Culture.html",
    "title": "Class Culture | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Culture Culture information describing a Culture Inheritance System.Object Culture Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Culture Properties DisplayName Nice name for the user, like English (United States) Declaration public string DisplayName { get; set; } Property Value Type Description System.String IsDefault Information if this is the default culture. Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean Remarks Not sure if this is actually valid, as ATM there is no setting to configure a default culture Name Short code like en or en-US Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.Database.html": {
    "href": "api/Oqtane.Models.Database.html",
    "title": "Class Database | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Database Information about a Database used in the current Oqtane installation Inheritance System.Object Database Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Database Properties ControlType Namespace & name of the UI control to configure this database, like Oqtane.Installer.Controls.SqlServerConfig, Oqtane.Client Declaration public string ControlType { get; set; } Property Value Type Description System.String DBType Type of DB using the full namespace, like Oqtane.Database.SqlServer.SqlServerDatabase, Oqtane.Database.SqlServer Declaration public string DBType { get; set; } Property Value Type Description System.String IsDefault whether this item is the default database provider ( ie. specified by DefaultDBType in appsettings.json ) Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean Name Name of the Database Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.File.html": {
    "href": "api/Oqtane.Models.File.html",
    "title": "Class File | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class File Describes a File in Oqtane Inheritance System.Object File Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class File : IAuditable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DeletedBy Declaration public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Declaration public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > Description Description of a file Declaration public string Description { get; set; } Property Value Type Description System.String Extension File name extension like 'jpg' Always lower case Without the dot (.) Declaration public string Extension { get; set; } Property Value Type Description System.String FileId ID to identify the file Declaration public int FileId { get; set; } Property Value Type Description System.Int32 Folder Object reference to the Folder object. Use this if you need to determine what Site the file belongs to. TODO: not sure if this is always populated, must verify and document Declaration public Folder Folder { get; set; } Property Value Type Description Folder FolderId Reference to the Folder . Use this if you need to determine what Site the file belongs to. Declaration public int FolderId { get; set; } Property Value Type Description System.Int32 ImageHeight The height of an image (if the file is an image) in pixels. This is calculated at time of Upload, so if the file is manually replaced, the value will be wrong. Declaration public int ImageHeight { get; set; } Property Value Type Description System.Int32 ImageWidth The width of an image (if the file is an image) in pixels. This is calculated at time of Upload, so if the file is manually replaced, the value will be wrong. Declaration public int ImageWidth { get; set; } Property Value Type Description System.Int32 IsDeleted Declaration public bool IsDeleted { get; set; } Property Value Type Description System.Boolean ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Name of the file todo: with extension or not? Declaration public string Name { get; set; } Property Value Type Description System.String Size File size Declaration public int Size { get; set; } Property Value Type Description System.Int32 Url url for accessing file Declaration [NotMapped] public string Url { get; set; } Property Value Type Description System.String Implements IAuditable Extension Methods MimeUtilities.GetMimeType(File) Utilities.IsFileValid(File)"
  },
  "api/Oqtane.Models.Folder.html": {
    "href": "api/Oqtane.Models.Folder.html",
    "title": "Class Folder | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Folder Describes a Folder in Oqtane Inheritance System.Object Folder Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Folder : IAuditable Properties Capacity Maximum folder capacity (in bytes) Declaration public int Capacity { get; set; } Property Value Type Description System.Int32 CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DeletedBy Declaration public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Declaration public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > FolderId ID to identify the folder Declaration public int FolderId { get; set; } Property Value Type Description System.Int32 HasChildren Information if this folder has sub-items like more Folder or File objects Declaration [NotMapped] public bool HasChildren { get; set; } Property Value Type Description System.Boolean ImageSizes List of image sizes which can be generated dynamically from uploaded images (ie. 200x200,x200,200x) Declaration public string ImageSizes { get; set; } Property Value Type Description System.String IsDeleted Declaration public bool IsDeleted { get; set; } Property Value Type Description System.Boolean IsSystem Folder is a dependency of the framework and cannot be modified or removed Declaration public bool IsSystem { get; set; } Property Value Type Description System.Boolean Level Folder Depth TODO: todoc Where does this start, so Depth 0 or 1 is where in the file system? Declaration [NotMapped] public int Level { get; set; } Property Value Type Description System.Int32 ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Folder name Declaration public string Name { get; set; } Property Value Type Description System.String Order Sorting order of the folder Declaration public int Order { get; set; } Property Value Type Description System.Int32 ParentId Reference to the parent Folder , if it has a parent folder. Declaration public int? ParentId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Path Path to the folder TODO: document from where the path starts Declaration public string Path { get; set; } Property Value Type Description System.String Permissions TODO: todoc what would this contain? Declaration [NotMapped] public string Permissions { get; set; } Property Value Type Description System.String SiteId Reference to the Site . Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 Type Folder type - based on FolderTypes Declaration public string Type { get; set; } Property Value Type Description System.String Implements IAuditable Extension Methods Utilities.IsPathValid(Folder)"
  },
  "api/Oqtane.Models.html": {
    "href": "api/Oqtane.Models.html",
    "title": "Namespace Oqtane.Models | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Models TODO: Please document what this namespace is for. Classes Alias An Alias maps a url like oqtane.my or oqtane.my/products to a Site and Tenant Culture Culture information describing a Culture Database Information about a Database used in the current Oqtane installation File Describes a File in Oqtane Folder Describes a Folder in Oqtane Installation Internal message used internally during installation. Each part of the installation will return the status / message when installing. Job Definition of a Job / Task which is run on the server. When Jobs run, they create a JobLog JobLog Log / Journal of Job s executed. Language Language Information for Site s TODO: todoc - unclear how this is different from Culture Log A log entry in the events log. MigrationHistoryTable Module Describes a Module Instance which will be shown on a page. This is different from a ModuleDefinition which describes a Module. ModuleContent Generic Model for Module-Contents to enable Import/Export of the Module-Data ModuleDefinition Describes a Module type (Definition) in Oqtane. The available Modules are determined at StartUp. Notification Notification for a User - usually meant to be sent as an E-Mail. Package A software Package for installation. Page Describes a Page in Oqtane PageModule Information about a Module instance on a Page PageTemplate PageTemplateModule Permission Permission information for anything in Oqtane. Things in Oqtane are identified as Entities, so anything that can be identified can be described here. PermissionString Use this to define a PermissionName which addresses a set of multiple permissions. Profile A single Profile Property information of a User . So a user will have many of these to fully describe his Profile. Resource Resource Objects describe a JavaScript or CSS file which is needed by the Module to work. Role Describes a Security Role in Oqtane. Route A route is comprised of multiple components ( some optional depending on context ) {scheme}://{hostname}/{aliaspath}/{pagepath}/*/{moduleid}/{action}/!/{urlparameters}?{query}#{fragment} Setting A setting for any kind of object like Tenant , Site , Page , Module etc. Site Describes a Site in a Tenant in an Oqtane installation. Sites can have multiple Alias es. SiteTemplate SqlQuery Sync SyncEvent Template model for defining metadata for a Module or Theme template Tenant Describes a Tenant in Oqtane. Tenants can contain multiple Site s and have all their data in a separate Database. Theme Information about a Theme in Oqtane. ThemeControl UrlMapping Describes a UrlMapping in Oqtane. User Describes a User in Oqtane. UserRole Assigns a Role to a User Visitor Describes a Visitor in Oqtane. Interfaces IAuditable Basic create/edit information - used in many objects. IDeletable Audit information for things than can be deleted."
  },
  "api/Oqtane.Models.IAuditable.html": {
    "href": "api/Oqtane.Models.IAuditable.html",
    "title": "Interface IAuditable | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IAuditable Basic create/edit information - used in many objects. Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public interface IAuditable Properties CreatedBy Username of the creator of this Object. Declaration string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime ModifiedBy Username of the last user who modified this Object. Declaration string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime"
  },
  "api/Oqtane.Models.IDeletable.html": {
    "href": "api/Oqtane.Models.IDeletable.html",
    "title": "Interface IDeletable | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IDeletable Audit information for things than can be deleted. Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public interface IDeletable Properties DeletedBy User who deleted this object. Declaration string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Timestamp when it was deleted. Declaration DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > IsDeleted If something is deleted, this will be true. Declaration bool IsDeleted { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Oqtane.Models.Installation.html": {
    "href": "api/Oqtane.Models.Installation.html",
    "title": "Class Installation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Installation Internal message used internally during installation. Each part of the installation will return the status / message when installing. Inheritance System.Object Installation Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Installation Properties Alias current alias value from server Declaration public Alias Alias { get; set; } Property Value Type Description Alias Message Message or error in case something failed. Declaration public string Message { get; set; } Property Value Type Description System.String Success Status if everything worked. Declaration public bool Success { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Oqtane.Models.Job.html": {
    "href": "api/Oqtane.Models.Job.html",
    "title": "Class Job | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Job Definition of a Job / Task which is run on the server. When Jobs run, they create a JobLog Inheritance System.Object Job Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Job : IAuditable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime EndDate When the job is to be run the last time. See also StartDate . Declaration public DateTime? EndDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Frequency Unit used in how often the job should run - expects a character like m (minutes), H (hours) etc. Declaration public string Frequency { get; set; } Property Value Type Description System.String Interval How often the Job should run - see also Frequency Declaration public int Interval { get; set; } Property Value Type Description System.Int32 IsEnabled Determines if the Job is activated / enabled. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean IsExecuting If the Job is executing right now. Declaration public bool IsExecuting { get; set; } Property Value Type Description System.Boolean IsStarted If the Job has ever started running Declaration public bool IsStarted { get; set; } Property Value Type Description System.Boolean JobId Internal ID Declaration public int JobId { get; set; } Property Value Type Description System.Int32 JobType What kind of Job this is Declaration public string JobType { get; set; } Property Value Type Description System.String ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Name for simple identification Declaration public string Name { get; set; } Property Value Type Description System.String NextExecution When the Job will run again next time. Declaration public DateTime? NextExecution { get; set; } Property Value Type Description System.Nullable < System.DateTime > RetentionHistory Todo: todoc - unsure what this does Declaration public int RetentionHistory { get; set; } Property Value Type Description System.Int32 StartDate When the Job is to be run the first time. See also EndDate . Declaration public DateTime? StartDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Implements IAuditable"
  },
  "api/Oqtane.Models.JobLog.html": {
    "href": "api/Oqtane.Models.JobLog.html",
    "title": "Class JobLog | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class JobLog Log / Journal of Job s executed. Inheritance System.Object JobLog Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class JobLog Properties FinishDate Timestamp when the Job ended. Declaration public DateTime? FinishDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Job Reference to the Job. Declaration public Job Job { get; set; } Property Value Type Description Job Remarks It's not clear if this is always populated. JobId Reference to the Job which was run Declaration public int JobId { get; set; } Property Value Type Description System.Int32 JobLogId Internal ID Declaration public int JobLogId { get; set; } Property Value Type Description System.Int32 Notes Additional protocol information that was left after the Job ran. Declaration public string Notes { get; set; } Property Value Type Description System.String StartDate Timestamp when the Job started. Declaration public DateTime StartDate { get; set; } Property Value Type Description System.DateTime Succeeded Success information. Declaration public bool? Succeeded { get; set; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/Oqtane.Models.Language.html": {
    "href": "api/Oqtane.Models.Language.html",
    "title": "Class Language | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Language Language Information for Site s TODO: todoc - unclear how this is different from Culture Inheritance System.Object Language Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Language : IAuditable Properties Code Language / Culture code, like 'en-US' - corresponds to Name Declaration public string Code { get; set; } Property Value Type Description System.String CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime IsDefault Is this the default language on a Site Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean LanguageId Internal ID Declaration public int LanguageId { get; set; } Property Value Type Description System.Int32 ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Language Name - corresponds to DisplayName , not Name Declaration public string Name { get; set; } Property Value Type Description System.String SiteId Reference to a Site TODO: todoc - unclear why it's nullable Declaration public int? SiteId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Implements IAuditable"
  },
  "api/Oqtane.Models.Log.html": {
    "href": "api/Oqtane.Models.Log.html",
    "title": "Class Log | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Log A log entry in the events log. Inheritance System.Object Log Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Log Properties Category Declaration public string Category { get; set; } Property Value Type Description System.String Exception Information about raised Exceptions Declaration public string Exception { get; set; } Property Value Type Description System.String Feature Declaration public string Feature { get; set; } Property Value Type Description System.String Function Declaration public string Function { get; set; } Property Value Type Description System.String Level Log level / severity Declaration public string Level { get; set; } Property Value Type Description System.String LogDate Timestamp Declaration public DateTime LogDate { get; set; } Property Value Type Description System.DateTime LogId Internal ID Declaration public int LogId { get; set; } Property Value Type Description System.Int32 Message Log Message Declaration public string Message { get; set; } Property Value Type Description System.String MessageTemplate Declaration public string MessageTemplate { get; set; } Property Value Type Description System.String ModuleId Reference to the Module Declaration public int? ModuleId { get; set; } Property Value Type Description System.Nullable < System.Int32 > PageId Reference to the Page Declaration public int? PageId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Properties Declaration public string Properties { get; set; } Property Value Type Description System.String Server Name of the server that created this entry Declaration public string Server { get; set; } Property Value Type Description System.String SiteId Reference to the Site Declaration public int? SiteId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Url Url if relevant for this log entry. Declaration public string Url { get; set; } Property Value Type Description System.String UserId Reference to the User Declaration public int? UserId { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/Oqtane.Models.MigrationHistoryTable.html": {
    "href": "api/Oqtane.Models.MigrationHistoryTable.html",
    "title": "Class MigrationHistoryTable | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class MigrationHistoryTable Inheritance System.Object MigrationHistoryTable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class MigrationHistoryTable Properties AppliedDateColumnName Declaration public string AppliedDateColumnName { get; set; } Property Value Type Description System.String AppliedVersionColumnName Declaration public string AppliedVersionColumnName { get; set; } Property Value Type Description System.String MigrationIdColumnName Declaration public string MigrationIdColumnName { get; set; } Property Value Type Description System.String ProductVersionColumnName Declaration public string ProductVersionColumnName { get; set; } Property Value Type Description System.String TableName Declaration public string TableName { get; set; } Property Value Type Description System.String TableSchema Declaration public string TableSchema { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.Module.html": {
    "href": "api/Oqtane.Models.Module.html",
    "title": "Class Module | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Module Describes a Module Instance which will be shown on a page. This is different from a ModuleDefinition which describes a Module. Inheritance System.Object Module Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Module : IAuditable Properties Actions Declaration [NotMapped] public string Actions { get; set; } Property Value Type Description System.String AllPages Determines if this Module Instance should be shown on all pages of the current Site Declaration public bool AllPages { get; set; } Property Value Type Description System.Boolean ContainerType Declaration [NotMapped] public string ContainerType { get; set; } Property Value Type Description System.String ControlTitle Declaration [NotMapped] public string ControlTitle { get; set; } Property Value Type Description System.String CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DeletedBy Declaration [NotMapped] public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Declaration [NotMapped] public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > IsDeleted Declaration [NotMapped] public bool IsDeleted { get; set; } Property Value Type Description System.Boolean ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime ModuleDefinition Reference to the ModuleDefinition used for this module. TODO: todoc - unclear if this is always populated Declaration [NotMapped] public ModuleDefinition ModuleDefinition { get; set; } Property Value Type Description ModuleDefinition ModuleDefinitionName Reference to the ModuleDefinition Declaration public string ModuleDefinitionName { get; set; } Property Value Type Description System.String ModuleId The ID of this instance Declaration public int ModuleId { get; set; } Property Value Type Description System.Int32 ModuleType Declaration [NotMapped] public string ModuleType { get; set; } Property Value Type Description System.String Order Declaration [NotMapped] public int Order { get; set; } Property Value Type Description System.Int32 PageId Reference to the Page this module is on. Declaration [NotMapped] public int PageId { get; set; } Property Value Type Description System.Int32 PageModuleId Declaration [NotMapped] public int PageModuleId { get; set; } Property Value Type Description System.Int32 Pane The Pane this module is shown in. Declaration [NotMapped] public string Pane { get; set; } Property Value Type Description System.String PaneModuleCount Declaration [NotMapped] public int PaneModuleCount { get; set; } Property Value Type Description System.Int32 PaneModuleIndex Declaration [NotMapped] public int PaneModuleIndex { get; set; } Property Value Type Description System.Int32 Permissions Declaration [NotMapped] public string Permissions { get; set; } Property Value Type Description System.String SecurityAccessLevel Declaration [NotMapped] public SecurityAccessLevel SecurityAccessLevel { get; set; } Property Value Type Description SecurityAccessLevel Settings Declaration [NotMapped] public Dictionary<string, string> Settings { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > SiteId Reference to the Site Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 Title Declaration [NotMapped] public string Title { get; set; } Property Value Type Description System.String UseAdminContainer Declaration [NotMapped] public bool UseAdminContainer { get; set; } Property Value Type Description System.Boolean Implements IAuditable"
  },
  "api/Oqtane.Models.ModuleContent.html": {
    "href": "api/Oqtane.Models.ModuleContent.html",
    "title": "Class ModuleContent | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleContent Generic Model for Module-Contents to enable Import/Export of the Module-Data Inheritance System.Object ModuleContent Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class ModuleContent Properties Content Serialized Content of the module for import/export. Declaration public string Content { get; set; } Property Value Type Description System.String ModuleDefinitionName Reference to a ModuleDefinition for which this content is relevant. Declaration public string ModuleDefinitionName { get; set; } Property Value Type Description System.String Version Version of the ModuleDefinition which is used here. It's not the version of the Content Declaration public string Version { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.ModuleDefinition.html": {
    "href": "api/Oqtane.Models.ModuleDefinition.html",
    "title": "Class ModuleDefinition | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleDefinition Describes a Module type (Definition) in Oqtane. The available Modules are determined at StartUp. Inheritance System.Object ModuleDefinition Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class ModuleDefinition : IAuditable Properties AssemblyName Declaration [NotMapped] public string AssemblyName { get; set; } Property Value Type Description System.String Categories Categories this Module will be shown in (in the admin-dialogs) Declaration public string Categories { get; set; } Property Value Type Description System.String Contact Declaration [NotMapped] public string Contact { get; set; } Property Value Type Description System.String ControlTypeRoutes Declaration [NotMapped] public string ControlTypeRoutes { get; set; } Property Value Type Description System.String ControlTypeTemplate Declaration [NotMapped] public string ControlTypeTemplate { get; set; } Property Value Type Description System.String CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DefaultAction Declaration [NotMapped] public string DefaultAction { get; set; } Property Value Type Description System.String Dependencies Declaration [NotMapped] public string Dependencies { get; set; } Property Value Type Description System.String Description Module description for admin dialogs. Declaration public string Description { get; set; } Property Value Type Description System.String License Declaration [NotMapped] public string License { get; set; } Property Value Type Description System.String ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime ModuleDefinitionId Reference to the ModuleDefinition . Declaration public int ModuleDefinitionId { get; set; } Property Value Type Description System.Int32 ModuleDefinitionName Name of the ModuleDefinition Declaration public string ModuleDefinitionName { get; set; } Property Value Type Description System.String Name Nice name to show in admin / edit dialogs. Declaration public string Name { get; set; } Property Value Type Description System.String Owner Declaration [NotMapped] public string Owner { get; set; } Property Value Type Description System.String PackageName Declaration [NotMapped] public string PackageName { get; set; } Property Value Type Description System.String PermissionNames Declaration [NotMapped] public string PermissionNames { get; set; } Property Value Type Description System.String Permissions Declaration [NotMapped] public string Permissions { get; set; } Property Value Type Description System.String ReleaseVersions Declaration [NotMapped] public string ReleaseVersions { get; set; } Property Value Type Description System.String Runtimes Declaration [NotMapped] public string Runtimes { get; set; } Property Value Type Description System.String ServerManagerType Declaration [NotMapped] public string ServerManagerType { get; set; } Property Value Type Description System.String SettingsType Declaration [NotMapped] public string SettingsType { get; set; } Property Value Type Description System.String SiteId Declaration [NotMapped] public int SiteId { get; set; } Property Value Type Description System.Int32 Template Declaration [NotMapped] public string Template { get; set; } Property Value Type Description System.String Url Declaration [NotMapped] public string Url { get; set; } Property Value Type Description System.String Version Version information of this Module based on the DLL / NuGet package. Declaration public string Version { get; set; } Property Value Type Description System.String Implements IAuditable"
  },
  "api/Oqtane.Models.Notification.html": {
    "href": "api/Oqtane.Models.Notification.html",
    "title": "Class Notification | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Notification Notification for a User - usually meant to be sent as an E-Mail. Inheritance System.Object Notification Implements IDeletable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Notification : IDeletable Constructors Notification() Declaration public Notification() Notification(Int32, User, User, String, String) Declaration public Notification(int siteId, User from, User to, string subject, string body) Parameters Type Name Description System.Int32 siteId User from User to System.String subject System.String body Notification(Int32, User, User, String, String, Nullable<Int32>) Declaration public Notification(int siteId, User from, User to, string subject, string body, int? parentId) Parameters Type Name Description System.Int32 siteId User from User to System.String subject System.String body System.Nullable < System.Int32 > parentId Notification(Int32, User, String, String) Declaration public Notification(int siteId, User to, string subject, string body) Parameters Type Name Description System.Int32 siteId User to System.String subject System.String body Notification(Int32, User, String, String, DateTime) Declaration public Notification(int siteId, User to, string subject, string body, DateTime sendOn) Parameters Type Name Description System.Int32 siteId User to System.String subject System.String body System.DateTime sendOn Notification(Int32, String, String, String, String) Declaration public Notification(int siteId, string toDisplayName, string toEmail, string subject, string body) Parameters Type Name Description System.Int32 siteId System.String toDisplayName System.String toEmail System.String subject System.String body Notification(Int32, String, String, String, String, DateTime) Declaration public Notification(int siteId, string toDisplayName, string toEmail, string subject, string body, DateTime sendOn) Parameters Type Name Description System.Int32 siteId System.String toDisplayName System.String toEmail System.String subject System.String body System.DateTime sendOn Notification(Int32, String, String, String, String, String, String) Declaration public Notification(int siteId, string fromDisplayName, string fromEmail, string toDisplayName, string toEmail, string subject, string body) Parameters Type Name Description System.Int32 siteId System.String fromDisplayName System.String fromEmail System.String toDisplayName System.String toEmail System.String subject System.String body Properties Body Body / Contents of this Notification Declaration public string Body { get; set; } Property Value Type Description System.String CreatedOn When the notification was created. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DeletedBy User who deleted this object. Declaration public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Timestamp when it was deleted. Declaration public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > DeliveredOn When the Notification was sent/delivered. Declaration public DateTime? DeliveredOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > FromDisplayName Nice Name of the Creator Declaration public string FromDisplayName { get; set; } Property Value Type Description System.String FromEmail Creator E-Mail Declaration public string FromEmail { get; set; } Property Value Type Description System.String FromUserId Creator User ID Declaration public int? FromUserId { get; set; } Property Value Type Description System.Nullable < System.Int32 > IsDeleted If something is deleted, this will be true. Declaration public bool IsDeleted { get; set; } Property Value Type Description System.Boolean IsDelivered If it has been delivered. See also DeliveredOn . Declaration public bool IsDelivered { get; set; } Property Value Type Description System.Boolean NotificationId Internal ID Declaration public int NotificationId { get; set; } Property Value Type Description System.Int32 ParentId Reference to an optional Parent Notification - in case it's a kind of thread with reply-messages. Declaration public int? ParentId { get; set; } Property Value Type Description System.Nullable < System.Int32 > SendOn When the Notification should be sent. See also DeliveredOn Declaration public DateTime? SendOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > SiteId Reference to the Site on which the Notification was created. Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 Subject Message Subject. Declaration public string Subject { get; set; } Property Value Type Description System.String ToDisplayName Recipient Nice-Name. Declaration public string ToDisplayName { get; set; } Property Value Type Description System.String ToEmail Recipient Mail Declaration public string ToEmail { get; set; } Property Value Type Description System.String ToUserId Recipient User ID - nullable, as Recipient could be someone that's not a user. Declaration public int? ToUserId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Implements IDeletable"
  },
  "api/Oqtane.Models.Package.html": {
    "href": "api/Oqtane.Models.Package.html",
    "title": "Class Package | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Package A software Package for installation. Inheritance System.Object Package Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Package Properties Description Description of the Package. Declaration public string Description { get; set; } Property Value Type Description System.String Downloads Download count to show how popular the package is. Declaration public long Downloads { get; set; } Property Value Type Description System.Int64 ExpiryDate The expiry date of the package Declaration public DateTime? ExpiryDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > License License for the Package. Declaration public string License { get; set; } Property Value Type Description System.String Name Friendly name of the package Declaration public string Name { get; set; } Property Value Type Description System.String Owner Owner of the package Declaration public string Owner { get; set; } Property Value Type Description System.String OwnerUrl Url for the owner of the package Declaration public string OwnerUrl { get; set; } Property Value Type Description System.String PackageId ID of the Package. Usually constructed of the Namespace. Declaration public string PackageId { get; set; } Property Value Type Description System.String PackageUrl The direct Url for downloading the package Declaration public string PackageUrl { get; set; } Property Value Type Description System.String PaymentUrl The Url for purchasing the package Declaration public string PaymentUrl { get; set; } Property Value Type Description System.String Price The price of the package Declaration public decimal? Price { get; set; } Property Value Type Description System.Nullable < System.Decimal > ProductUrl Friendly name of the package Declaration public string ProductUrl { get; set; } Property Value Type Description System.String ReleaseDate date the package was released Declaration public DateTime ReleaseDate { get; set; } Property Value Type Description System.DateTime TrialPeriod The trial period in days Declaration public int TrialPeriod { get; set; } Property Value Type Description System.Int32 Version Version as defined in the NuGet package. Declaration public string Version { get; set; } Property Value Type Description System.String Vulnerabilities Indicates if any known security vulnerabilities exist Declaration public int Vulnerabilities { get; set; } Property Value Type Description System.Int32"
  },
  "api/Oqtane.Models.Page.html": {
    "href": "api/Oqtane.Models.Page.html",
    "title": "Class Page | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Page Describes a Page in Oqtane Inheritance System.Object Page Implements IAuditable IDeletable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Page : IAuditable, IDeletable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DefaultContainerType Reference to a Container which will be used for modules on this page. Declaration public string DefaultContainerType { get; set; } Property Value Type Description System.String DeletedBy Declaration public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Declaration public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > EditMode Declaration [Obsolete(\"This property is deprecated\", false)] [NotMapped] public bool EditMode { get; set; } Property Value Type Description System.Boolean HasChildren Determines if there are sub-pages. True if this page has sub-pages. Declaration [NotMapped] public bool HasChildren { get; set; } Property Value Type Description System.Boolean Icon Icon file for this page. TODO: unclear what this is for, and what icon library is used. Probably FontAwesome? Declaration public string Icon { get; set; } Property Value Type Description System.String IsClickable Declaration public bool IsClickable { get; set; } Property Value Type Description System.Boolean IsDeleted Declaration public bool IsDeleted { get; set; } Property Value Type Description System.Boolean IsNavigation Declaration public bool IsNavigation { get; set; } Property Value Type Description System.Boolean IsPersonalizable Declaration public bool IsPersonalizable { get; set; } Property Value Type Description System.Boolean LayoutType Declaration [Obsolete(\"This property is deprecated\", false)] [NotMapped] public string LayoutType { get; set; } Property Value Type Description System.String Level Declaration [NotMapped] public int Level { get; set; } Property Value Type Description System.Int32 Meta Meta tags to be included in the head of the page Declaration public string Meta { get; set; } Property Value Type Description System.String ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Page Name. TODO: todoc where this is used Declaration public string Name { get; set; } Property Value Type Description System.String Order Sort order in the list of other sibling pages Declaration public int Order { get; set; } Property Value Type Description System.Int32 PageId Id of the Page Declaration public int PageId { get; set; } Property Value Type Description System.Int32 Panes List of Pane-names which this Page has. Declaration [NotMapped] public List<string> Panes { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > ParentId Reference to the parent Page if it has one. Declaration public int? ParentId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Path Path of the page. TODO: todoc relative to what? site root, parent-page, domain? Declaration public string Path { get; set; } Property Value Type Description System.String Permissions Declaration [NotMapped] public string Permissions { get; set; } Property Value Type Description System.String Resources List of Resource (CSS, JS) which this page needs to render properly. Declaration [NotMapped] public List<Resource> Resources { get; set; } Property Value Type Description System.Collections.Generic.List < Resource > Settings Declaration [NotMapped] public Dictionary<string, string> Settings { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > SiteId Reference to the Site . Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 ThemeType Reference to a Theme which will be used to show this page. Declaration public string ThemeType { get; set; } Property Value Type Description System.String Title Page Title which is shown in the browser tab. Declaration public string Title { get; set; } Property Value Type Description System.String Url Full URL to this page. TODO: verify that this is the case - does it contain domain etc. or just from domain or alias root? Declaration public string Url { get; set; } Property Value Type Description System.String UserId Declaration public int? UserId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Implements IAuditable IDeletable"
  },
  "api/Oqtane.Models.PageModule.html": {
    "href": "api/Oqtane.Models.PageModule.html",
    "title": "Class PageModule | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageModule Information about a Module instance on a Page Inheritance System.Object PageModule Implements IAuditable IDeletable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class PageModule : IAuditable, IDeletable Properties ContainerType Reference to a Razor Container which wraps this module instance. Declaration public string ContainerType { get; set; } Property Value Type Description System.String CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DeletedBy Declaration public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Declaration public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > IsDeleted Declaration public bool IsDeleted { get; set; } Property Value Type Description System.Boolean ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Module The Module itself. TODO: todoc - unclear if this is always populated Declaration public Module Module { get; set; } Property Value Type Description Module ModuleId Reference to the Module . Declaration public int ModuleId { get; set; } Property Value Type Description System.Int32 Order The sorting order / position in the Pane where this module appears. Declaration public int Order { get; set; } Property Value Type Description System.Int32 PageId Reference to the Page . Declaration public int PageId { get; set; } Property Value Type Description System.Int32 PageModuleId Internal ID to identify this instance. Declaration public int PageModuleId { get; set; } Property Value Type Description System.Int32 Pane The Pane which this module instance appears. Declaration public string Pane { get; set; } Property Value Type Description System.String Title Module title. Will be shown in the Container if the container shows titles. Declaration public string Title { get; set; } Property Value Type Description System.String Implements IAuditable IDeletable"
  },
  "api/Oqtane.Models.PageTemplate.html": {
    "href": "api/Oqtane.Models.PageTemplate.html",
    "title": "Class PageTemplate | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageTemplate Inheritance System.Object PageTemplate Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class PageTemplate Properties EditMode Declaration [Obsolete(\"This property is obsolete\", false)] public bool EditMode { get; set; } Property Value Type Description System.Boolean Icon Declaration public string Icon { get; set; } Property Value Type Description System.String IsNavigation Declaration public bool IsNavigation { get; set; } Property Value Type Description System.Boolean IsPersonalizable Declaration public bool IsPersonalizable { get; set; } Property Value Type Description System.Boolean Name Declaration public string Name { get; set; } Property Value Type Description System.String Order Declaration public int Order { get; set; } Property Value Type Description System.Int32 PagePermissions Declaration public string PagePermissions { get; set; } Property Value Type Description System.String PageTemplateModules Declaration public List<PageTemplateModule> PageTemplateModules { get; set; } Property Value Type Description System.Collections.Generic.List < PageTemplateModule > Parent Declaration public string Parent { get; set; } Property Value Type Description System.String Path Declaration public string Path { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.PageTemplateModule.html": {
    "href": "api/Oqtane.Models.PageTemplateModule.html",
    "title": "Class PageTemplateModule | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageTemplateModule Inheritance System.Object PageTemplateModule Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class PageTemplateModule Properties Content Declaration public string Content { get; set; } Property Value Type Description System.String ModuleDefinitionName Declaration public string ModuleDefinitionName { get; set; } Property Value Type Description System.String ModulePermissions Declaration public string ModulePermissions { get; set; } Property Value Type Description System.String Pane Declaration public string Pane { get; set; } Property Value Type Description System.String Title Declaration public string Title { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.Permission.html": {
    "href": "api/Oqtane.Models.Permission.html",
    "title": "Class Permission | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Permission Permission information for anything in Oqtane. Things in Oqtane are identified as Entities, so anything that can be identified can be described here. Inheritance System.Object Permission Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Permission : IAuditable Constructors Permission() Declaration public Permission() Permission(String, Int32, Boolean) Declaration public Permission(string permissionName, int userId, bool isAuthorized) Parameters Type Name Description System.String permissionName System.Int32 userId System.Boolean isAuthorized Permission(String, String, Boolean) Declaration public Permission(string permissionName, string roleName, bool isAuthorized) Parameters Type Name Description System.String permissionName System.String roleName System.Boolean isAuthorized Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime EntityId ID of the Entity these permissions apply to. Declaration public int EntityId { get; set; } Property Value Type Description System.Int32 EntityName Name of the Entity these permissions apply to. Declaration public string EntityName { get; set; } Property Value Type Description System.String IsAuthorized Determines if Authorization is sufficient to receive this permission. Declaration public bool IsAuthorized { get; set; } Property Value Type Description System.Boolean ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime PermissionId Internal ID storing this information. Declaration public int PermissionId { get; set; } Property Value Type Description System.Int32 PermissionName What this permission is called. TODO: todoc - must clarify what exactly this means, I assume any module can give it's own names for Permissions Declaration public string PermissionName { get; set; } Property Value Type Description System.String Role Reference to the Role based on the RoleId - can be nullable. Declaration public Role Role { get; set; } Property Value Type Description Role Remarks It's not certain if this will always be populated. TODO: todoc/verify RoleId Role this permission applies to. So if all users in the Role Customers have this permission, then it would reference that Role. If null, then the permission doesn't target a role but probably a User (see UserId ). Declaration public int? RoleId { get; set; } Property Value Type Description System.Nullable < System.Int32 > SiteId Reference to the Site which contains both the target Entity and permissions. Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 UserId User this permission applies to. If null, then the permission doesn't target a User but probably a Role (see RoleId ). Declaration public int? UserId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Implements IAuditable"
  },
  "api/Oqtane.Models.PermissionString.html": {
    "href": "api/Oqtane.Models.PermissionString.html",
    "title": "Class PermissionString | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PermissionString Use this to define a PermissionName which addresses a set of multiple permissions. Inheritance System.Object PermissionString Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class PermissionString Properties PermissionName A term describing a set of permissions Declaration public string PermissionName { get; set; } Property Value Type Description System.String Permissions The permissions addressed with this name Declaration public string Permissions { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.Profile.html": {
    "href": "api/Oqtane.Models.Profile.html",
    "title": "Class Profile | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Profile A single Profile Property information of a User . So a user will have many of these to fully describe his Profile. Inheritance System.Object Profile Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Profile : IAuditable Properties Category Category of this Profile-Property for grouping etc. Declaration public string Category { get; set; } Property Value Type Description System.String CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DefaultValue Initial/default value of this Property. Declaration public string DefaultValue { get; set; } Property Value Type Description System.String Description Description of the Property for the UI. Declaration public string Description { get; set; } Property Value Type Description System.String IsPrivate Some Profile Properties are private, meaning other users won't see them. Declaration public bool IsPrivate { get; set; } Property Value Type Description System.Boolean IsRequired Some Profile Properties are required - marked with this field. Declaration public bool IsRequired { get; set; } Property Value Type Description System.Boolean MaxLength Limits the input length of the property. Declaration public int MaxLength { get; set; } Property Value Type Description System.Int32 ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Name of the Profile-Property. NOT the User-Name. Declaration public string Name { get; set; } Property Value Type Description System.String Options This gives possible values for dropdown input fields. Declaration public string Options { get; set; } Property Value Type Description System.String ProfileId Internal ID Declaration public int ProfileId { get; set; } Property Value Type Description System.Int32 SiteId Reference to the Site . It's nullable, probably because certain users like Super-Users don't specifically belong to any site. Declaration public int? SiteId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Title Title (label) of the Profile Property. Declaration public string Title { get; set; } Property Value Type Description System.String ViewOrder Order of the Property in the list of Profile-Properties. Declaration public int ViewOrder { get; set; } Property Value Type Description System.Int32 Implements IAuditable"
  },
  "api/Oqtane.Models.Resource.html": {
    "href": "api/Oqtane.Models.Resource.html",
    "title": "Class Resource | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Resource Resource Objects describe a JavaScript or CSS file which is needed by the Module to work. Inheritance System.Object Resource Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Resource Properties Bundle Bundle ID in case this Resource belongs to a set of Resources, which may have already been loaded using LoadJS Declaration public string Bundle { get; set; } Property Value Type Description System.String CrossOrigin Cross-Origin rules for this Resources. Usually anonymous Declaration public string CrossOrigin { get; set; } Property Value Type Description System.String Declaration Declaration [Obsolete(\"ResourceDeclaration is deprecated\", false)] public ResourceDeclaration Declaration { get; set; } Property Value Type Description ResourceDeclaration ES6Module For Scripts this allows type=\"module\" registrations - not applicable to Stylesheets Declaration public bool ES6Module { get; set; } Property Value Type Description System.Boolean Integrity Integrity checks to increase the security of resources accessed. Especially common in CDN resources. Declaration public string Integrity { get; set; } Property Value Type Description System.String Level For Stylesheets this defines the relative position for cascading purposes Declaration public ResourceLevel Level { get; set; } Property Value Type Description ResourceLevel Location For Scripts this defines if the resource should be included in the Head or Body Declaration public ResourceLocation Location { get; set; } Property Value Type Description ResourceLocation ResourceType A ResourceType so the Interop can properly create script or link tags Declaration public ResourceType ResourceType { get; set; } Property Value Type Description ResourceType Url Path to the resources. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.Role.html": {
    "href": "api/Oqtane.Models.Role.html",
    "title": "Class Role | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Role Describes a Security Role in Oqtane. Inheritance System.Object Role Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Role : IAuditable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime Description Brief description for Admin dialogs. Declaration public string Description { get; set; } Property Value Type Description System.String IsAutoAssigned Determines if users automatically get assigned to this role. Declaration public bool IsAutoAssigned { get; set; } Property Value Type Description System.Boolean IsSystem Declaration public bool IsSystem { get; set; } Property Value Type Description System.Boolean ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Role name to show in Admin dialogs. Declaration public string Name { get; set; } Property Value Type Description System.String RoleId Primary ID Declaration public int RoleId { get; set; } Property Value Type Description System.Int32 SiteId Reference to a Site if applicable. Declaration public int? SiteId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Implements IAuditable"
  },
  "api/Oqtane.Models.Route.html": {
    "href": "api/Oqtane.Models.Route.html",
    "title": "Class Route | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Route A route is comprised of multiple components ( some optional depending on context ) {scheme}://{hostname}/{aliaspath}/{pagepath}/*/{moduleid}/{action}/!/{urlparameters}?{query}#{fragment} Inheritance System.Object Route Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Route Constructors Route(String, String) default constructor the route parameter can be obtained from NavigationManager.Uri on client or HttpContext.Request.GetEncodedUrl() on server the aliaspath parameter can be obtained from PageState.Alias.Path on client or TenantManager.GetAlias().Path on server Declaration public Route(string route, string aliaspath) Parameters Type Name Description System.String route System.String aliaspath Properties AbsolutePath The absolute path for the route Declaration public string AbsolutePath { get; set; } Property Value Type Description System.String Action A route may contain an action (ie. when created using EditUrl) located after the module id. Declaration public string Action { get; set; } Property Value Type Description System.String AliasPath An absolute path may contain an alias path Declaration public string AliasPath { get; set; } Property Value Type Description System.String Authority The host name or IP address and port number (does not include scheme or trailing slash) Declaration public string Authority { get; set; } Property Value Type Description System.String Fragment A route may contain a fragment located after the # delimiter Declaration public string Fragment { get; set; } Property Value Type Description System.String Host A fully qualified route contains a host name. The host name may include a port number. Declaration public string Host { get; set; } Property Value Type Description System.String ModuleId A route may contain a module id (ie. when created using EditUrl) located after the module delimiter segment (/*/). Declaration public string ModuleId { get; set; } Property Value Type Description System.String PagePath A absolute path may contain a page path. Declaration public string PagePath { get; set; } Property Value Type Description System.String Port A host name may contain a port number Declaration public string Port { get; set; } Property Value Type Description System.String Query A route may contain querystring parameters located after the ? delimiter Declaration public string Query { get; set; } Property Value Type Description System.String RootUrl The root url contains the resource identifier for the root of an Oqtane installation ( including scheme ) Declaration public string RootUrl { get; } Property Value Type Description System.String Scheme A fully qualified route contains a scheme (ie. http, https ) Declaration public string Scheme { get; set; } Property Value Type Description System.String SiteUrl The site url contains the resource identifier for the home page of a specific Oqtane site ( including scheme and possibly an alias path ) Declaration public string SiteUrl { get; } Property Value Type Description System.String UrlParameters A route may contain parameters located after the url parameter delimiter segment (/!/). Declaration public string UrlParameters { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.Setting.html": {
    "href": "api/Oqtane.Models.Setting.html",
    "title": "Class Setting | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Setting A setting for any kind of object like Tenant , Site , Page , Module etc. Inheritance System.Object Setting Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Setting : IAuditable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime EntityId Id of the Entity we're describing - so it could be Site number 2 Declaration public int EntityId { get; set; } Property Value Type Description System.Int32 EntityName What kind of entity the setting is for, like Page , Site etc. Declaration public string EntityName { get; set; } Property Value Type Description System.String IsPrivate Indicates if this setting is private - indicating it should be maintained on the server and not sent to the client Declaration public bool IsPrivate { get; set; } Property Value Type Description System.Boolean ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime SettingId ID in the Database - mainly used to later update an existing setting. Declaration public int SettingId { get; set; } Property Value Type Description System.Int32 SettingName Name of the setting. Declaration public string SettingName { get; set; } Property Value Type Description System.String SettingValue The value of this Setting. It's always a string, so make sure to convert/cast as needed. Declaration public string SettingValue { get; set; } Property Value Type Description System.String Implements IAuditable"
  },
  "api/Oqtane.Models.Site.html": {
    "href": "api/Oqtane.Models.Site.html",
    "title": "Class Site | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Site Describes a Site in a Tenant in an Oqtane installation. Sites can have multiple Alias es. Inheritance System.Object Site Implements IAuditable IDeletable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Site : IAuditable, IDeletable Properties AdminContainerType Declaration public string AdminContainerType { get; set; } Property Value Type Description System.String AllowRegistration Determines if visitors may register / create user accounts Declaration public bool AllowRegistration { get; set; } Property Value Type Description System.Boolean CaptureBrokenUrls Determines if broken urls (404s) will be captured automatically Declaration public bool CaptureBrokenUrls { get; set; } Property Value Type Description System.Boolean CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DefaultContainerType Declaration public string DefaultContainerType { get; set; } Property Value Type Description System.String DefaultLayoutType Declaration [NotMapped] [Obsolete(\"This property is deprecated.\", false)] public string DefaultLayoutType { get; set; } Property Value Type Description System.String DefaultThemeType Declaration public string DefaultThemeType { get; set; } Property Value Type Description System.String DeletedBy Declaration public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Declaration public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > FaviconFileId Reference to a File which has the FavIcon for this site. Should be an image. The theme can then use this where needed. TODO: todoc does this get applied automatically, or does the Theme do this? Declaration public int? FaviconFileId { get; set; } Property Value Type Description System.Nullable < System.Int32 > IsDeleted Declaration public bool IsDeleted { get; set; } Property Value Type Description System.Boolean LogoFileId Reference to a File which has the Logo for this site. Should be an image. The theme can then use this where needed. Declaration public int? LogoFileId { get; set; } Property Value Type Description System.Nullable < System.Int32 > ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name The site Name TODO: todoc where this will be used / shown Declaration public string Name { get; set; } Property Value Type Description System.String PwaAppIconFileId Declaration public int? PwaAppIconFileId { get; set; } Property Value Type Description System.Nullable < System.Int32 > PwaIsEnabled Declaration public bool PwaIsEnabled { get; set; } Property Value Type Description System.Boolean PwaSplashIconFileId Declaration public int? PwaSplashIconFileId { get; set; } Property Value Type Description System.Nullable < System.Int32 > RenderMode The render mode for the site (ie. Server, ServerPrerendered, WebAssembly, WebAssemblyPrerendered ). Declaration public string RenderMode { get; set; } Property Value Type Description System.String Runtime The hosting model for the site (ie. Server or WebAssembly ). Declaration public string Runtime { get; set; } Property Value Type Description System.String Settings Declaration [NotMapped] public Dictionary<string, string> Settings { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > SiteGuid Unique GUID to identify the Site. Declaration public string SiteGuid { get; set; } Property Value Type Description System.String SiteId Internal ID, not to be confused with the AliasId Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 SiteTemplateType Declaration [NotMapped] public string SiteTemplateType { get; set; } Property Value Type Description System.String TenantId Reference to the Tenant the Site is in Declaration public int TenantId { get; set; } Property Value Type Description System.Int32 Version Keeps track of site configuration changes and is used by the IUpgradeable interface Declaration public string Version { get; set; } Property Value Type Description System.String VisitorTracking Determines if visitors will be tracked Declaration public bool VisitorTracking { get; set; } Property Value Type Description System.Boolean Implements IAuditable IDeletable"
  },
  "api/Oqtane.Models.SiteTemplate.html": {
    "href": "api/Oqtane.Models.SiteTemplate.html",
    "title": "Class SiteTemplate | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteTemplate Inheritance System.Object SiteTemplate Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class SiteTemplate Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String TypeName Declaration public string TypeName { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.SqlQuery.html": {
    "href": "api/Oqtane.Models.SqlQuery.html",
    "title": "Class SqlQuery | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SqlQuery Inheritance System.Object SqlQuery Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class SqlQuery Properties Query Declaration public string Query { get; set; } Property Value Type Description System.String Results Declaration public List<Dictionary<string, string>> Results { get; set; } Property Value Type Description System.Collections.Generic.List < System.Collections.Generic.Dictionary < System.String , System.String >> TenantId Reference to the Tenant this belongs to Declaration public int TenantId { get; set; } Property Value Type Description System.Int32"
  },
  "api/Oqtane.Models.Sync.html": {
    "href": "api/Oqtane.Models.Sync.html",
    "title": "Class Sync | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Sync Inheritance System.Object Sync Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Sync Properties SyncDate Declaration public DateTime SyncDate { get; set; } Property Value Type Description System.DateTime SyncEvents Declaration public List<SyncEvent> SyncEvents { get; set; } Property Value Type Description System.Collections.Generic.List < SyncEvent >"
  },
  "api/Oqtane.Models.SyncEvent.html": {
    "href": "api/Oqtane.Models.SyncEvent.html",
    "title": "Class SyncEvent | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SyncEvent Inheritance System.Object SyncEvent Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class SyncEvent Properties EntityId Declaration public int EntityId { get; set; } Property Value Type Description System.Int32 EntityName Declaration public string EntityName { get; set; } Property Value Type Description System.String ModifiedOn Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Reload Declaration public bool Reload { get; set; } Property Value Type Description System.Boolean TenantId Declaration public int TenantId { get; set; } Property Value Type Description System.Int32"
  },
  "api/Oqtane.Models.Template.html": {
    "href": "api/Oqtane.Models.Template.html",
    "title": "Class Template | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Template model for defining metadata for a Module or Theme template Inheritance System.Object Template Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Template Properties Location location where template will be created (dynamically set) Declaration public string Location { get; set; } Property Value Type Description System.String Name name of template (folder name) Declaration public string Name { get; set; } Property Value Type Description System.String Title title of template Declaration public string Title { get; set; } Property Value Type Description System.String Type type of template - Internal / External Declaration public string Type { get; set; } Property Value Type Description System.String Version minimum framework version dependency Declaration public string Version { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.Tenant.html": {
    "href": "api/Oqtane.Models.Tenant.html",
    "title": "Class Tenant | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Tenant Describes a Tenant in Oqtane. Tenants can contain multiple Site s and have all their data in a separate Database. Inheritance System.Object Tenant Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Tenant : IAuditable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DBConnectionString Connection string to access this Tenant DB. Declaration public string DBConnectionString { get; set; } Property Value Type Description System.String DBType Type of DB used in this Tenant Declaration public string DBType { get; set; } Property Value Type Description System.String Remarks New in v2.1.0 ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Name Name of the Tenant to show in Tenant lists. Declaration public string Name { get; set; } Property Value Type Description System.String TenantId ID of the Tenant. Declaration public int TenantId { get; set; } Property Value Type Description System.Int32 Version Declaration public string Version { get; set; } Property Value Type Description System.String Implements IAuditable"
  },
  "api/Oqtane.Models.Theme.html": {
    "href": "api/Oqtane.Models.Theme.html",
    "title": "Class Theme | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Theme Information about a Theme in Oqtane. Inheritance System.Object Theme Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Theme Constructors Theme() Declaration public Theme() Properties AssemblyName Declaration public string AssemblyName { get; set; } Property Value Type Description System.String Contact Author Contact information Declaration public string Contact { get; set; } Property Value Type Description System.String ContainerControls Declaration [Obsolete(\"This property is obsolete. Use Containers instead.\", false)] public string ContainerControls { get; set; } Property Value Type Description System.String Containers Declaration public List<ThemeControl> Containers { get; set; } Property Value Type Description System.Collections.Generic.List < ThemeControl > ContainerSettingsType Declaration public string ContainerSettingsType { get; set; } Property Value Type Description System.String Dependencies Theme Dependencies (DLLs) which the system will check if they exist Declaration public string Dependencies { get; set; } Property Value Type Description System.String Layouts Declaration [Obsolete(\"This property is obsolete.\", false)] public List<ThemeControl> Layouts { get; set; } Property Value Type Description System.Collections.Generic.List < ThemeControl > License Theme License, like MIT etc. Declaration public string License { get; set; } Property Value Type Description System.String Name Nice Name of the Theme. Declaration public string Name { get; set; } Property Value Type Description System.String Owner Author / Creator of the Theme. Declaration public string Owner { get; set; } Property Value Type Description System.String PackageName Declaration public string PackageName { get; set; } Property Value Type Description System.String PaneLayouts Declaration [Obsolete(\"This property is obsolete. Use Layouts instead.\", false)] public string PaneLayouts { get; set; } Property Value Type Description System.String Template Declaration public string Template { get; set; } Property Value Type Description System.String ThemeControls Declaration [Obsolete(\"This property is obsolete. Use Themes instead.\", false)] public string ThemeControls { get; set; } Property Value Type Description System.String ThemeName Full Namespace / Identifier of the Theme. Declaration public string ThemeName { get; set; } Property Value Type Description System.String Themes Declaration public List<ThemeControl> Themes { get; set; } Property Value Type Description System.Collections.Generic.List < ThemeControl > ThemeSettingsType Declaration public string ThemeSettingsType { get; set; } Property Value Type Description System.String Url URL (in NuGet) of the Theme Declaration public string Url { get; set; } Property Value Type Description System.String Version Version as determined by the DLL / NuGet Package. Declaration public string Version { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.ThemeControl.html": {
    "href": "api/Oqtane.Models.ThemeControl.html",
    "title": "Class ThemeControl | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ThemeControl Inheritance System.Object ThemeControl Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class ThemeControl Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String Panes Declaration public string Panes { get; set; } Property Value Type Description System.String Thumbnail Declaration public string Thumbnail { get; set; } Property Value Type Description System.String TypeName Declaration public string TypeName { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Models.UrlMapping.html": {
    "href": "api/Oqtane.Models.UrlMapping.html",
    "title": "Class UrlMapping | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UrlMapping Describes a UrlMapping in Oqtane. Inheritance System.Object UrlMapping Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class UrlMapping Properties CreatedOn Date when the url was first requested for the site Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime MappedUrl A Url the visitor will be redirected to Declaration public string MappedUrl { get; set; } Property Value Type Description System.String RequestedOn Date when the url was last requested for the site Declaration public DateTime RequestedOn { get; set; } Property Value Type Description System.DateTime Requests Number of requests all time for the url Declaration public int Requests { get; set; } Property Value Type Description System.Int32 SiteId Reference to a Site Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 Url A fully quaified Url Declaration public string Url { get; set; } Property Value Type Description System.String UrlMappingId ID of this UrlMapping. Declaration public int UrlMappingId { get; set; } Property Value Type Description System.Int32"
  },
  "api/Oqtane.Models.User.html": {
    "href": "api/Oqtane.Models.User.html",
    "title": "Class User | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class User Describes a User in Oqtane. Inheritance System.Object User Implements IAuditable IDeletable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class User : IAuditable, IDeletable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime DeletedBy Declaration public string DeletedBy { get; set; } Property Value Type Description System.String DeletedOn Declaration public DateTime? DeletedOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > DisplayName Name shown in menus / dialogs etc. Declaration public string DisplayName { get; set; } Property Value Type Description System.String Email User E-Mail address. Declaration public string Email { get; set; } Property Value Type Description System.String FolderPath The path name of the user's personal folder Declaration [NotMapped] public string FolderPath { get; } Property Value Type Description System.String IsAuthenticated Information if this user is authenticated. Anonymous users are not authenticated. Declaration [NotMapped] public bool IsAuthenticated { get; set; } Property Value Type Description System.Boolean IsDeleted Declaration public bool IsDeleted { get; set; } Property Value Type Description System.Boolean LastIPAddress Tracking information of IP used when the user last worked on this site. Declaration public string LastIPAddress { get; set; } Property Value Type Description System.String LastLoginOn Timestamp of last login. Declaration public DateTime? LastLoginOn { get; set; } Property Value Type Description System.Nullable < System.DateTime > ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Password The users password. Note that this is not plaintext, so you can probably never really work with this. Declaration [NotMapped] public string Password { get; set; } Property Value Type Description System.String PhotoFileId Reference to a File containing the users photo. Declaration public int? PhotoFileId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Roles Role names this user has. TODO: todoc - is this comma separated? Declaration [NotMapped] public string Roles { get; set; } Property Value Type Description System.String SiteId Reference to the Site this user belongs to. Declaration [NotMapped] public int SiteId { get; set; } Property Value Type Description System.Int32 TwoFactorCode Stores the 2 factor verification code Declaration public string TwoFactorCode { get; set; } Property Value Type Description System.String TwoFactorExpiry The expiry date/time for the 2 factor verification code Declaration public DateTime? TwoFactorExpiry { get; set; } Property Value Type Description System.Nullable < System.DateTime > TwoFactorRequired Indicates if the user requires 2 factor authentication to sign in Declaration public bool TwoFactorRequired { get; set; } Property Value Type Description System.Boolean UserId ID of this User. Declaration public int UserId { get; set; } Property Value Type Description System.Int32 Username Username used for login. Declaration public string Username { get; set; } Property Value Type Description System.String Implements IAuditable IDeletable"
  },
  "api/Oqtane.Models.UserRole.html": {
    "href": "api/Oqtane.Models.UserRole.html",
    "title": "Class UserRole | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserRole Assigns a Role to a User Inheritance System.Object UserRole Implements IAuditable Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class UserRole : IAuditable Properties CreatedBy Username of the creator of this Object. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOn Created Timestamp for this Object. Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime EffectiveDate Start of when this assignment is valid. See also ExpiryDate Declaration public DateTime? EffectiveDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > ExpiryDate End of when this assignment is valid. See also EffectiveDate Declaration public DateTime? ExpiryDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > ModifiedBy Username of the last user who modified this Object. Declaration public string ModifiedBy { get; set; } Property Value Type Description System.String ModifiedOn Modified Timestamp for this Object. Declaration public DateTime ModifiedOn { get; set; } Property Value Type Description System.DateTime Role Direct reference to the Role object. TODO: todoc - is this always populated? Declaration public Role Role { get; set; } Property Value Type Description Role RoleId Reference to the Role which the User receives Declaration public int RoleId { get; set; } Property Value Type Description System.Int32 User Direct reference to the User object. TODO: todoc - is this always populated? Declaration public User User { get; set; } Property Value Type Description User UserId Reference to the User who receives this Role assignment. Declaration public int UserId { get; set; } Property Value Type Description System.Int32 UserRoleId Id of this assignment Declaration public int UserRoleId { get; set; } Property Value Type Description System.Int32 Implements IAuditable"
  },
  "api/Oqtane.Models.Visitor.html": {
    "href": "api/Oqtane.Models.Visitor.html",
    "title": "Class Visitor | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Visitor Describes a Visitor in Oqtane. Inheritance System.Object Visitor Namespace : Oqtane.Models Assembly : Oqtane.Shared.dll Syntax public class Visitor Properties CreatedOn Date the visitor first visited the site Declaration public DateTime CreatedOn { get; set; } Property Value Type Description System.DateTime IPAddress Last recorded IP Address of visitor Declaration public string IPAddress { get; set; } Property Value Type Description System.String Language Last recorded language of visitor Declaration public string Language { get; set; } Property Value Type Description System.String Referrer Last recorded Referrer of visitor Declaration public string Referrer { get; set; } Property Value Type Description System.String SiteId Reference to a Site Declaration public int SiteId { get; set; } Property Value Type Description System.Int32 Url Last recorded Url of visitor Declaration public string Url { get; set; } Property Value Type Description System.String User Direct reference to the User object (if applicable) Declaration public User User { get; set; } Property Value Type Description User UserAgent Last recorded user agent of visitor Declaration public string UserAgent { get; set; } Property Value Type Description System.String UserId Reference to a User if applicable Declaration public int? UserId { get; set; } Property Value Type Description System.Nullable < System.Int32 > VisitedOn Date the visitor last visited the site Declaration public DateTime VisitedOn { get; set; } Property Value Type Description System.DateTime VisitorId ID of this Visitor. Declaration public int VisitorId { get; set; } Property Value Type Description System.Int32 Visits Number of times a visitor has visited a site Declaration public int Visits { get; set; } Property Value Type Description System.Int32"
  },
  "api/Oqtane.Modules.Controls.html": {
    "href": "api/Oqtane.Modules.Controls.html",
    "title": "Namespace Oqtane.Modules.Controls | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Modules.Controls TODO: Please document what this namespace is for. Classes LocalizableComponent RichTextEditorInterop"
  },
  "api/Oqtane.Modules.Controls.LocalizableComponent.html": {
    "href": "api/Oqtane.Modules.Controls.LocalizableComponent.html",
    "title": "Class LocalizableComponent | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LocalizableComponent Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ModuleBase ModuleControlBase LocalizableComponent Implements IModuleControl Inherited Members ModuleBase.logger ModuleBase.LoggingService ModuleBase.JSRuntime ModuleBase.PageState ModuleBase.ModuleState ModuleBase.ModuleInstance ModuleBase.SecurityAccessLevel ModuleBase.Title ModuleBase.Actions ModuleBase.UseAdminContainer ModuleBase.Resources ModuleBase.OnAfterRenderAsync(Boolean) ModuleBase.ModulePath() ModuleBase.NavigateUrl() ModuleBase.NavigateUrl(String) ModuleBase.NavigateUrl(Boolean) ModuleBase.NavigateUrl(String, String) ModuleBase.NavigateUrl(String, Boolean) ModuleBase.EditUrl(String) ModuleBase.EditUrl(String, String) ModuleBase.EditUrl(Int32, String) ModuleBase.EditUrl(Int32, String, String) ModuleBase.EditUrl(String, Int32, String, String) ModuleBase.ContentUrl(Int32) ModuleBase.ContentUrl(Int32, Boolean) ModuleBase.ImageUrl(Int32, Int32, Int32) ModuleBase.ImageUrl(Int32, Int32, Int32, String) ModuleBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) ModuleBase.GetUrlParameters(String) ModuleBase.AddModuleMessage(String, MessageType) ModuleBase.ClearModuleMessage() ModuleBase.ShowProgressIndicator() ModuleBase.HideProgressIndicator() ModuleBase.Log(Alias, LogLevel, String, Exception, String, Object[]) ModuleBase.Log(Alias, LogLevel, LogFunction, Exception, String, Object[]) Namespace : Oqtane.Modules.Controls Assembly : Oqtane.Client.dll Syntax public class LocalizableComponent : ModuleControlBase, IComponent, IHandleEvent, IHandleAfterRender, IModuleControl Properties IsLocalizable Declaration protected bool IsLocalizable { get; } Property Value Type Description System.Boolean ResourceKey Declaration [Parameter] public string ResourceKey { get; set; } Property Value Type Description System.String ResourceType Declaration [Parameter] public string ResourceType { get; set; } Property Value Type Description System.String Methods Localize(String) Declaration protected string Localize(string name) Parameters Type Name Description System.String name Returns Type Description System.String Localize(String, String) Declaration protected string Localize(string propertyName, string propertyValue) Parameters Type Name Description System.String propertyName System.String propertyValue Returns Type Description System.String OnParametersSet() Declaration protected override void OnParametersSet() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Implements IModuleControl"
  },
  "api/Oqtane.Modules.Controls.RichTextEditorInterop.html": {
    "href": "api/Oqtane.Modules.Controls.RichTextEditorInterop.html",
    "title": "Class RichTextEditorInterop | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class RichTextEditorInterop Inheritance System.Object RichTextEditorInterop Namespace : Oqtane.Modules.Controls Assembly : Oqtane.Client.dll Syntax public class RichTextEditorInterop Constructors RichTextEditorInterop(IJSRuntime) Declaration public RichTextEditorInterop(IJSRuntime jsRuntime) Parameters Type Name Description Microsoft.JSInterop.IJSRuntime jsRuntime Methods CreateEditor(ElementReference, ElementReference, Boolean, String, String, String) Declaration public async Task CreateEditor(ElementReference quillElement, ElementReference toolbar, bool readOnly, string placeholder, string theme, string debugLevel) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference quillElement Microsoft.AspNetCore.Components.ElementReference toolbar System.Boolean readOnly System.String placeholder System.String theme System.String debugLevel Returns Type Description System.Threading.Tasks.Task EnableEditor(ElementReference, Boolean) Declaration public Task EnableEditor(ElementReference quillElement, bool mode) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference quillElement System.Boolean mode Returns Type Description System.Threading.Tasks.Task GetContent(ElementReference) Declaration public ValueTask<string> GetContent(ElementReference quillElement) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference quillElement Returns Type Description System.Threading.Tasks.ValueTask < System.String > GetHtml(ElementReference) Declaration public ValueTask<string> GetHtml(ElementReference quillElement) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference quillElement Returns Type Description System.Threading.Tasks.ValueTask < System.String > GetText(ElementReference) Declaration public ValueTask<string> GetText(ElementReference quillElement) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference quillElement Returns Type Description System.Threading.Tasks.ValueTask < System.String > InsertImage(ElementReference, String, String) Declaration public Task InsertImage(ElementReference quillElement, string imageUrl, string altText) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference quillElement System.String imageUrl System.String altText Returns Type Description System.Threading.Tasks.Task LoadEditorContent(ElementReference, String) Declaration public Task LoadEditorContent(ElementReference quillElement, string content) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference quillElement System.String content Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Modules.html": {
    "href": "api/Oqtane.Modules.html",
    "title": "Namespace Oqtane.Modules | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Modules TODO: Please document what this namespace is for. Classes MigratableModuleBase ModuleBase ModuleBase.Logger ModuleControlBase Interfaces IModule IModuleControl IPortable IService Empty interface used to decorate module services for auto registration Enums MessageType"
  },
  "api/Oqtane.Modules.IModule.html": {
    "href": "api/Oqtane.Modules.IModule.html",
    "title": "Interface IModule | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IModule Namespace : Oqtane.Modules Assembly : Oqtane.Client.dll Syntax public interface IModule Properties ModuleDefinition Declaration ModuleDefinition ModuleDefinition { get; } Property Value Type Description ModuleDefinition"
  },
  "api/Oqtane.Modules.IModuleControl.html": {
    "href": "api/Oqtane.Modules.IModuleControl.html",
    "title": "Interface IModuleControl | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IModuleControl Namespace : Oqtane.Modules Assembly : Oqtane.Shared.dll Syntax public interface IModuleControl Properties Actions Allows for routing by configuration rather than by convention ( comma delimited ) - defaults to using component file name Declaration string Actions { get; } Property Value Type Description System.String Resources Identifies all resources in a module Declaration List<Resource> Resources { get; } Property Value Type Description System.Collections.Generic.List < Resource > SecurityAccessLevel Defines the security access level for this control - defaults to View Declaration SecurityAccessLevel SecurityAccessLevel { get; } Property Value Type Description SecurityAccessLevel Title Title to display for this control - defaults to module title Declaration string Title { get; } Property Value Type Description System.String UseAdminContainer Container for embedding module control - defaults to true. false will suppress the default modal UI popup behavior and render the component in the page. Declaration bool UseAdminContainer { get; } Property Value Type Description System.Boolean"
  },
  "api/Oqtane.Modules.IPortable.html": {
    "href": "api/Oqtane.Modules.IPortable.html",
    "title": "Interface IPortable | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IPortable Namespace : Oqtane.Modules Assembly : Oqtane.Server.dll Syntax public interface IPortable Methods ExportModule(Module) Declaration string ExportModule(Module module) Parameters Type Name Description Module module Returns Type Description System.String ImportModule(Module, String, String) Declaration void ImportModule(Module module, string content, string version) Parameters Type Name Description Module module System.String content System.String version"
  },
  "api/Oqtane.Modules.IService.html": {
    "href": "api/Oqtane.Modules.IService.html",
    "title": "Interface IService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IService Empty interface used to decorate module services for auto registration Namespace : Oqtane.Modules Assembly : Oqtane.Shared.dll Syntax public interface IService"
  },
  "api/Oqtane.Modules.MessageType.html": {
    "href": "api/Oqtane.Modules.MessageType.html",
    "title": "Enum MessageType | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum MessageType Namespace : Oqtane.Modules Assembly : Oqtane.Client.dll Syntax public enum MessageType Fields Name Description Error Info Success Undefined Warning"
  },
  "api/Oqtane.Modules.MigratableModuleBase.html": {
    "href": "api/Oqtane.Modules.MigratableModuleBase.html",
    "title": "Class MigratableModuleBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class MigratableModuleBase Inheritance System.Object MigratableModuleBase Namespace : Oqtane.Modules Assembly : Oqtane.Server.dll Syntax public class MigratableModuleBase Methods Migrate(DBContextBase, Tenant, MigrationType) Declaration public bool Migrate(DBContextBase dbContext, Tenant tenant, MigrationType migrationType) Parameters Type Name Description DBContextBase dbContext Tenant tenant MigrationType migrationType Returns Type Description System.Boolean"
  },
  "api/Oqtane.Modules.ModuleBase.html": {
    "href": "api/Oqtane.Modules.ModuleBase.html",
    "title": "Class ModuleBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ModuleBase ModuleControlBase Implements IModuleControl Namespace : Oqtane.Modules Assembly : Oqtane.Client.dll Syntax public abstract class ModuleBase : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IModuleControl Properties Actions Declaration public virtual string Actions { get; } Property Value Type Description System.String JSRuntime Declaration [Inject] protected IJSRuntime JSRuntime { get; set; } Property Value Type Description Microsoft.JSInterop.IJSRuntime logger Declaration protected ModuleBase.Logger logger { get; } Property Value Type Description ModuleBase.Logger LoggingService Declaration [Inject] protected ILogService LoggingService { get; set; } Property Value Type Description ILogService ModuleInstance Declaration [Parameter] public ModuleInstance ModuleInstance { get; set; } Property Value Type Description ModuleInstance ModuleState Declaration [CascadingParameter] protected Module ModuleState { get; set; } Property Value Type Description Module PageState Declaration [CascadingParameter] protected PageState PageState { get; set; } Property Value Type Description PageState Resources Declaration public virtual List<Resource> Resources { get; set; } Property Value Type Description System.Collections.Generic.List < Resource > SecurityAccessLevel Declaration public virtual SecurityAccessLevel SecurityAccessLevel { get; set; } Property Value Type Description SecurityAccessLevel Title Declaration public virtual string Title { get; } Property Value Type Description System.String UseAdminContainer Declaration public virtual bool UseAdminContainer { get; } Property Value Type Description System.Boolean Methods AddModuleMessage(String, MessageType) Declaration public void AddModuleMessage(string message, MessageType type) Parameters Type Name Description System.String message MessageType type ClearModuleMessage() Declaration public void ClearModuleMessage() ContentUrl(Int32) Declaration public string ContentUrl(int fileid) Parameters Type Name Description System.Int32 fileid Returns Type Description System.String ContentUrl(Int32, Boolean) Declaration public string ContentUrl(int fileid, bool asAttachment) Parameters Type Name Description System.Int32 fileid System.Boolean asAttachment Returns Type Description System.String EditUrl(Int32, String) Declaration public string EditUrl(int moduleId, string action) Parameters Type Name Description System.Int32 moduleId System.String action Returns Type Description System.String EditUrl(Int32, String, String) Declaration public string EditUrl(int moduleId, string action, string parameters) Parameters Type Name Description System.Int32 moduleId System.String action System.String parameters Returns Type Description System.String EditUrl(String) Declaration public string EditUrl(string action) Parameters Type Name Description System.String action Returns Type Description System.String EditUrl(String, Int32, String, String) Declaration public string EditUrl(string path, int moduleid, string action, string parameters) Parameters Type Name Description System.String path System.Int32 moduleid System.String action System.String parameters Returns Type Description System.String EditUrl(String, String) Declaration public string EditUrl(string action, string parameters) Parameters Type Name Description System.String action System.String parameters Returns Type Description System.String GetUrlParameters(String) Declaration public virtual Dictionary<string, string> GetUrlParameters(string parametersTemplate = \"\") Parameters Type Name Description System.String parametersTemplate Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > HideProgressIndicator() Declaration public void HideProgressIndicator() ImageUrl(Int32, Int32, Int32) Declaration public string ImageUrl(int fileid, int width, int height) Parameters Type Name Description System.Int32 fileid System.Int32 width System.Int32 height Returns Type Description System.String ImageUrl(Int32, Int32, Int32, String) Declaration public string ImageUrl(int fileid, int width, int height, string mode) Parameters Type Name Description System.Int32 fileid System.Int32 width System.Int32 height System.String mode Returns Type Description System.String ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Declaration public string ImageUrl(int fileid, int width, int height, string mode, string position, string background, int rotate, bool recreate) Parameters Type Name Description System.Int32 fileid System.Int32 width System.Int32 height System.String mode System.String position System.String background System.Int32 rotate System.Boolean recreate Returns Type Description System.String Log(Alias, LogLevel, LogFunction, Exception, String, Object[]) Declaration public async Task Log(Alias alias, LogLevel level, LogFunction function, Exception exception, string message, params object[] args) Parameters Type Name Description Alias alias LogLevel level LogFunction function System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task Log(Alias, LogLevel, String, Exception, String, Object[]) Declaration public async Task Log(Alias alias, LogLevel level, string function, Exception exception, string message, params object[] args) Parameters Type Name Description Alias alias LogLevel level System.String function System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task ModulePath() Declaration public string ModulePath() Returns Type Description System.String NavigateUrl() Declaration public string NavigateUrl() Returns Type Description System.String NavigateUrl(Boolean) Declaration public string NavigateUrl(bool refresh) Parameters Type Name Description System.Boolean refresh Returns Type Description System.String NavigateUrl(String) Declaration public string NavigateUrl(string path) Parameters Type Name Description System.String path Returns Type Description System.String NavigateUrl(String, Boolean) Declaration public string NavigateUrl(string path, bool refresh) Parameters Type Name Description System.String path System.Boolean refresh Returns Type Description System.String NavigateUrl(String, String) Declaration public string NavigateUrl(string path, string parameters) Parameters Type Name Description System.String path System.String parameters Returns Type Description System.String OnAfterRenderAsync(Boolean) Declaration protected override async Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description System.Boolean firstRender Returns Type Description System.Threading.Tasks.Task Overrides Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) ShowProgressIndicator() Declaration public void ShowProgressIndicator() Implements IModuleControl"
  },
  "api/Oqtane.Modules.ModuleBase.Logger.html": {
    "href": "api/Oqtane.Modules.ModuleBase.Logger.html",
    "title": "Class ModuleBase.Logger | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleBase.Logger Inheritance System.Object ModuleBase.Logger Namespace : Oqtane.Modules Assembly : Oqtane.Client.dll Syntax public class Logger Constructors Logger(ModuleBase) Declaration public Logger(ModuleBase moduleBase) Parameters Type Name Description ModuleBase moduleBase Methods LogCritical(LogFunction, String, Object[]) Declaration public async Task LogCritical(LogFunction function, string message, params object[] args) Parameters Type Name Description LogFunction function System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogCritical(Exception, String, Object[]) Declaration public async Task LogCritical(Exception exception, string message, params object[] args) Parameters Type Name Description System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogCritical(String, Object[]) Declaration public async Task LogCritical(string message, params object[] args) Parameters Type Name Description System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogDebug(LogFunction, String, Object[]) Declaration public async Task LogDebug(LogFunction function, string message, params object[] args) Parameters Type Name Description LogFunction function System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogDebug(Exception, String, Object[]) Declaration public async Task LogDebug(Exception exception, string message, params object[] args) Parameters Type Name Description System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogDebug(String, Object[]) Declaration public async Task LogDebug(string message, params object[] args) Parameters Type Name Description System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogError(LogFunction, String, Object[]) Declaration public async Task LogError(LogFunction function, string message, params object[] args) Parameters Type Name Description LogFunction function System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogError(Exception, String, Object[]) Declaration public async Task LogError(Exception exception, string message, params object[] args) Parameters Type Name Description System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogError(String, Object[]) Declaration public async Task LogError(string message, params object[] args) Parameters Type Name Description System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogInformation(LogFunction, String, Object[]) Declaration public async Task LogInformation(LogFunction function, string message, params object[] args) Parameters Type Name Description LogFunction function System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogInformation(Exception, String, Object[]) Declaration public async Task LogInformation(Exception exception, string message, params object[] args) Parameters Type Name Description System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogInformation(String, Object[]) Declaration public async Task LogInformation(string message, params object[] args) Parameters Type Name Description System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogTrace(LogFunction, String, Object[]) Declaration public async Task LogTrace(LogFunction function, string message, params object[] args) Parameters Type Name Description LogFunction function System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogTrace(Exception, String, Object[]) Declaration public async Task LogTrace(Exception exception, string message, params object[] args) Parameters Type Name Description System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogTrace(String, Object[]) Declaration public async Task LogTrace(string message, params object[] args) Parameters Type Name Description System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogWarning(LogFunction, String, Object[]) Declaration public async Task LogWarning(LogFunction function, string message, params object[] args) Parameters Type Name Description LogFunction function System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogWarning(Exception, String, Object[]) Declaration public async Task LogWarning(Exception exception, string message, params object[] args) Parameters Type Name Description System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task LogWarning(String, Object[]) Declaration public async Task LogWarning(string message, params object[] args) Parameters Type Name Description System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Modules.ModuleControlBase.html": {
    "href": "api/Oqtane.Modules.ModuleControlBase.html",
    "title": "Class ModuleControlBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleControlBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ModuleBase ModuleControlBase LocalizableComponent Implements IModuleControl Inherited Members ModuleBase.logger ModuleBase.LoggingService ModuleBase.JSRuntime ModuleBase.PageState ModuleBase.ModuleState ModuleBase.ModuleInstance ModuleBase.SecurityAccessLevel ModuleBase.Title ModuleBase.Actions ModuleBase.UseAdminContainer ModuleBase.Resources ModuleBase.OnAfterRenderAsync(Boolean) ModuleBase.ModulePath() ModuleBase.NavigateUrl() ModuleBase.NavigateUrl(String) ModuleBase.NavigateUrl(Boolean) ModuleBase.NavigateUrl(String, String) ModuleBase.NavigateUrl(String, Boolean) ModuleBase.EditUrl(String) ModuleBase.EditUrl(String, String) ModuleBase.EditUrl(Int32, String) ModuleBase.EditUrl(Int32, String, String) ModuleBase.EditUrl(String, Int32, String, String) ModuleBase.ContentUrl(Int32) ModuleBase.ContentUrl(Int32, Boolean) ModuleBase.ImageUrl(Int32, Int32, Int32) ModuleBase.ImageUrl(Int32, Int32, Int32, String) ModuleBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) ModuleBase.GetUrlParameters(String) ModuleBase.AddModuleMessage(String, MessageType) ModuleBase.ClearModuleMessage() ModuleBase.ShowProgressIndicator() ModuleBase.HideProgressIndicator() ModuleBase.Log(Alias, LogLevel, String, Exception, String, Object[]) ModuleBase.Log(Alias, LogLevel, LogFunction, Exception, String, Object[]) Namespace : Oqtane.Modules Assembly : Oqtane.Client.dll Syntax public abstract class ModuleControlBase : ModuleBase, IComponent, IHandleEvent, IHandleAfterRender, IModuleControl Implements IModuleControl"
  },
  "api/Oqtane.Pages.ExternalModel.html": {
    "href": "api/Oqtane.Pages.ExternalModel.html",
    "title": "Class ExternalModel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ExternalModel Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel ExternalModel Namespace : Oqtane.Pages Assembly : Oqtane.Server.dll Syntax [AllowAnonymous] [IgnoreAntiforgeryToken] public class ExternalModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnGetAsync(String) Declaration public IActionResult OnGetAsync(string returnurl) Parameters Type Name Description System.String returnurl Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult OnPostAsync(String) Declaration public IActionResult OnPostAsync(string returnurl) Parameters Type Name Description System.String returnurl Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult"
  },
  "api/Oqtane.Pages.HostModel.html": {
    "href": "api/Oqtane.Pages.HostModel.html",
    "title": "Class HostModel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class HostModel Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel HostModel Namespace : Oqtane.Pages Assembly : Oqtane.Server.dll Syntax public class HostModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Constructors HostModel(IConfigManager, ITenantManager, ILocalizationManager, ILanguageRepository, IAntiforgery, IJwtManager, ISiteRepository, IPageRepository, IUrlMappingRepository, IVisitorRepository, IAliasRepository, ISettingRepository, ILogManager) Declaration public HostModel(IConfigManager configuration, ITenantManager tenantManager, ILocalizationManager localizationManager, ILanguageRepository languages, IAntiforgery antiforgery, IJwtManager jwtManager, ISiteRepository sites, IPageRepository pages, IUrlMappingRepository urlMappings, IVisitorRepository visitors, IAliasRepository aliases, ISettingRepository settings, ILogManager logger) Parameters Type Name Description IConfigManager configuration ITenantManager tenantManager ILocalizationManager localizationManager ILanguageRepository languages Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery IJwtManager jwtManager ISiteRepository sites IPageRepository pages IUrlMappingRepository urlMappings IVisitorRepository visitors IAliasRepository aliases ISettingRepository settings ILogManager logger Fields AntiForgeryToken Declaration public string AntiForgeryToken Field Value Type Description System.String AuthorizationToken Declaration public string AuthorizationToken Field Value Type Description System.String BodyResources Declaration public string BodyResources Field Value Type Description System.String FavIcon Declaration public string FavIcon Field Value Type Description System.String HeadResources Declaration public string HeadResources Field Value Type Description System.String Language Declaration public string Language Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Meta Declaration public string Meta Field Value Type Description System.String PWAScript Declaration public string PWAScript Field Value Type Description System.String RemoteIPAddress Declaration public string RemoteIPAddress Field Value Type Description System.String RenderMode Declaration public RenderMode RenderMode Field Value Type Description Microsoft.AspNetCore.Mvc.Rendering.RenderMode Runtime Declaration public string Runtime Field Value Type Description System.String Title Declaration public string Title Field Value Type Description System.String VisitorId Declaration public int VisitorId Field Value Type Description System.Int32 Methods OnGet() Declaration public IActionResult OnGet() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult"
  },
  "api/Oqtane.Pages.html": {
    "href": "api/Oqtane.Pages.html",
    "title": "Namespace Oqtane.Pages | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Pages Classes ExternalModel HostModel LoginModel LogoutModel"
  },
  "api/Oqtane.Pages.LoginModel.html": {
    "href": "api/Oqtane.Pages.LoginModel.html",
    "title": "Class LoginModel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LoginModel Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel LoginModel Namespace : Oqtane.Pages Assembly : Oqtane.Server.dll Syntax [AllowAnonymous] public class LoginModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Constructors LoginModel(UserManager<IdentityUser>, SignInManager<IdentityUser>) Declaration public LoginModel(UserManager<IdentityUser> identityUserManager, SignInManager<IdentityUser> identitySignInManager) Parameters Type Name Description Microsoft.AspNetCore.Identity.UserManager < Microsoft.AspNetCore.Identity.IdentityUser > identityUserManager Microsoft.AspNetCore.Identity.SignInManager < Microsoft.AspNetCore.Identity.IdentityUser > identitySignInManager Methods OnPostAsync(String, String, Boolean, String) Declaration public async Task<IActionResult> OnPostAsync(string username, string password, bool remember, string returnurl) Parameters Type Name Description System.String username System.String password System.Boolean remember System.String returnurl Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult >"
  },
  "api/Oqtane.Pages.LogoutModel.html": {
    "href": "api/Oqtane.Pages.LogoutModel.html",
    "title": "Class LogoutModel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LogoutModel Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel LogoutModel Namespace : Oqtane.Pages Assembly : Oqtane.Server.dll Syntax [Authorize] public class LogoutModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnPostAsync(String) Declaration public async Task<IActionResult> OnPostAsync(string returnurl) Parameters Type Name Description System.String returnurl Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult >"
  },
  "api/Oqtane.Providers.html": {
    "href": "api/Oqtane.Providers.html",
    "title": "Namespace Oqtane.Providers | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Providers Classes IdentityAuthenticationStateProvider"
  },
  "api/Oqtane.Providers.IdentityAuthenticationStateProvider.html": {
    "href": "api/Oqtane.Providers.IdentityAuthenticationStateProvider.html",
    "title": "Class IdentityAuthenticationStateProvider | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class IdentityAuthenticationStateProvider Inheritance System.Object Microsoft.AspNetCore.Components.Authorization.AuthenticationStateProvider IdentityAuthenticationStateProvider Namespace : Oqtane.Providers Assembly : Oqtane.Client.dll Syntax public class IdentityAuthenticationStateProvider : AuthenticationStateProvider Constructors IdentityAuthenticationStateProvider(IServiceProvider, NavigationManager) Declaration public IdentityAuthenticationStateProvider(IServiceProvider serviceProvider, NavigationManager navigationManager) Parameters Type Name Description System.IServiceProvider serviceProvider Microsoft.AspNetCore.Components.NavigationManager navigationManager Methods GetAuthenticationStateAsync() Declaration public override async Task<AuthenticationState> GetAuthenticationStateAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Components.Authorization.AuthenticationState > Overrides Microsoft.AspNetCore.Components.Authorization.AuthenticationStateProvider.GetAuthenticationStateAsync() NotifyAuthenticationChanged() Declaration public void NotifyAuthenticationChanged()"
  },
  "api/Oqtane.Repository.AliasRepository.html": {
    "href": "api/Oqtane.Repository.AliasRepository.html",
    "title": "Class AliasRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class AliasRepository Inheritance System.Object AliasRepository Implements IAliasRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class AliasRepository : IAliasRepository Constructors AliasRepository(MasterDBContext, IMemoryCache) Declaration public AliasRepository(MasterDBContext context, IMemoryCache cache) Parameters Type Name Description MasterDBContext context Microsoft.Extensions.Caching.Memory.IMemoryCache cache Methods AddAlias(Alias) Declaration public Alias AddAlias(Alias alias) Parameters Type Name Description Alias alias Returns Type Description Alias DeleteAlias(Int32) Declaration public void DeleteAlias(int aliasId) Parameters Type Name Description System.Int32 aliasId GetAlias(Int32) Declaration public Alias GetAlias(int aliasId) Parameters Type Name Description System.Int32 aliasId Returns Type Description Alias GetAlias(Int32, Boolean) Declaration public Alias GetAlias(int aliasId, bool tracking) Parameters Type Name Description System.Int32 aliasId System.Boolean tracking Returns Type Description Alias GetAlias(String) Declaration public Alias GetAlias(string url) Parameters Type Name Description System.String url Returns Type Description Alias GetAliases() Declaration public IEnumerable<Alias> GetAliases() Returns Type Description System.Collections.Generic.IEnumerable < Alias > UpdateAlias(Alias) Declaration public Alias UpdateAlias(Alias alias) Parameters Type Name Description Alias alias Returns Type Description Alias Implements IAliasRepository"
  },
  "api/Oqtane.Repository.Databases.Interfaces.html": {
    "href": "api/Oqtane.Repository.Databases.Interfaces.html",
    "title": "Namespace Oqtane.Repository.Databases.Interfaces | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Repository.Databases.Interfaces Interfaces IMultiDatabase"
  },
  "api/Oqtane.Repository.Databases.Interfaces.IMultiDatabase.html": {
    "href": "api/Oqtane.Repository.Databases.Interfaces.IMultiDatabase.html",
    "title": "Interface IMultiDatabase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IMultiDatabase Namespace : Oqtane.Repository.Databases.Interfaces Assembly : Oqtane.Server.dll Syntax public interface IMultiDatabase Properties ActiveDatabase Declaration IDatabase ActiveDatabase { get; } Property Value Type Description IDatabase"
  },
  "api/Oqtane.Repository.DBContextBase.html": {
    "href": "api/Oqtane.Repository.DBContextBase.html",
    "title": "Class DBContextBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class DBContextBase Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext < Microsoft.AspNetCore.Identity.IdentityUser , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext < Microsoft.AspNetCore.Identity.IdentityUser , System.String > Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext < Microsoft.AspNetCore.Identity.IdentityUser > DBContextBase TenantDBContext Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class DBContextBase : IdentityUserContext<IdentityUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Constructors DBContextBase(ITenantManager, IHttpContextAccessor) Declaration public DBContextBase(ITenantManager tenantManager, IHttpContextAccessor httpContextAccessor) Parameters Type Name Description ITenantManager tenantManager Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor DBContextBase(ITenantResolver, IHttpContextAccessor) Declaration [Obsolete(\"This constructor is obsolete. Use DBContextBase(ITenantManager tenantManager, IHttpContextAccessor httpContextAccessor) instead.\", false)] public DBContextBase(ITenantResolver tenantResolver, IHttpContextAccessor httpContextAccessor) Parameters Type Name Description ITenantResolver tenantResolver Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Properties ActiveDatabase Declaration public IDatabase ActiveDatabase { get; } Property Value Type Description IDatabase Methods OnConfiguring(DbContextOptionsBuilder) Declaration protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder Overrides Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder builder Overrides Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext<Microsoft.AspNetCore.Identity.IdentityUser, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) SaveChanges() Declaration public override int SaveChanges() Returns Type Description System.Int32 Overrides Microsoft.EntityFrameworkCore.DbContext.SaveChanges() SaveChangesAsync(CancellationToken) Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Overrides Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)"
  },
  "api/Oqtane.Repository.DbContextUtils.html": {
    "href": "api/Oqtane.Repository.DbContextUtils.html",
    "title": "Class DbContextUtils | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class DbContextUtils Inheritance System.Object DbContextUtils Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public static class DbContextUtils Methods SaveChanges(DbContext, IHttpContextAccessor) Declaration public static void SaveChanges(DbContext context, IHttpContextAccessor accessor) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContext context Microsoft.AspNetCore.Http.IHttpContextAccessor accessor"
  },
  "api/Oqtane.Repository.FileRepository.html": {
    "href": "api/Oqtane.Repository.FileRepository.html",
    "title": "Class FileRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class FileRepository Inheritance System.Object FileRepository Implements IFileRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class FileRepository : IFileRepository Constructors FileRepository(TenantDBContext, IPermissionRepository, IFolderRepository, ITenantManager) Declaration public FileRepository(TenantDBContext context, IPermissionRepository permissions, IFolderRepository folderRepository, ITenantManager tenants) Parameters Type Name Description TenantDBContext context IPermissionRepository permissions IFolderRepository folderRepository ITenantManager tenants Methods AddFile(File) Declaration public File AddFile(File file) Parameters Type Name Description File file Returns Type Description File DeleteFile(Int32) Declaration public void DeleteFile(int fileId) Parameters Type Name Description System.Int32 fileId GetFile(Int32) Declaration public File GetFile(int fileId) Parameters Type Name Description System.Int32 fileId Returns Type Description File GetFile(Int32, Boolean) Declaration public File GetFile(int fileId, bool tracking) Parameters Type Name Description System.Int32 fileId System.Boolean tracking Returns Type Description File GetFilePath(File) Declaration public string GetFilePath(File file) Parameters Type Name Description File file Returns Type Description System.String GetFilePath(Int32) Declaration public string GetFilePath(int fileId) Parameters Type Name Description System.Int32 fileId Returns Type Description System.String GetFiles(Int32) Declaration public IEnumerable<File> GetFiles(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description System.Collections.Generic.IEnumerable < File > UpdateFile(File) Declaration public File UpdateFile(File file) Parameters Type Name Description File file Returns Type Description File Implements IFileRepository"
  },
  "api/Oqtane.Repository.FolderRepository.html": {
    "href": "api/Oqtane.Repository.FolderRepository.html",
    "title": "Class FolderRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class FolderRepository Inheritance System.Object FolderRepository Implements IFolderRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class FolderRepository : IFolderRepository Constructors FolderRepository(TenantDBContext, IPermissionRepository, IWebHostEnvironment, ITenantManager) Declaration public FolderRepository(TenantDBContext context, IPermissionRepository permissions, IWebHostEnvironment environment, ITenantManager tenants) Parameters Type Name Description TenantDBContext context IPermissionRepository permissions Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment ITenantManager tenants Methods AddFolder(Folder) Declaration public Folder AddFolder(Folder folder) Parameters Type Name Description Folder folder Returns Type Description Folder DeleteFolder(Int32) Declaration public void DeleteFolder(int folderId) Parameters Type Name Description System.Int32 folderId GetFolder(Int32) Declaration public Folder GetFolder(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description Folder GetFolder(Int32, Boolean) Declaration public Folder GetFolder(int folderId, bool tracking) Parameters Type Name Description System.Int32 folderId System.Boolean tracking Returns Type Description Folder GetFolder(Int32, String) Declaration public Folder GetFolder(int siteId, string path) Parameters Type Name Description System.Int32 siteId System.String path Returns Type Description Folder GetFolderPath(Folder) Declaration public string GetFolderPath(Folder folder) Parameters Type Name Description Folder folder Returns Type Description System.String GetFolderPath(Int32) Declaration public string GetFolderPath(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description System.String GetFolders(Int32) Declaration public IEnumerable<Folder> GetFolders(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Folder > UpdateFolder(Folder) Declaration public Folder UpdateFolder(Folder folder) Parameters Type Name Description Folder folder Returns Type Description Folder Implements IFolderRepository"
  },
  "api/Oqtane.Repository.html": {
    "href": "api/Oqtane.Repository.html",
    "title": "Namespace Oqtane.Repository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Repository Classes AliasRepository DBContextBase DbContextUtils FileRepository FolderRepository InstallationContext JobLogRepository JobRepository LanguageRepository LogRepository MasterDBContext ModuleDefinitionRepository ModuleRepository NotificationRepository PageModuleRepository PageRepository PermissionRepository ProfileRepository RoleRepository SettingRepository SiteRepository SiteTemplateRepository SqlRepository TenantDBContext TenantRepository TenantResolver ThemeRepository UrlMappingRepository UserRepository UserRoleRepository VisitorRepository Interfaces IAliasRepository IFileRepository IFolderRepository IJobLogRepository IJobRepository ILanguageRepository ILogRepository IModuleDefinitionRepository IModuleRepository INotificationRepository IPageModuleRepository IPageRepository IPermissionRepository IProfileRepository IRoleRepository ISettingRepository ISiteRepository ISiteTemplateRepository ISqlRepository ITenantRepository ITenantResolver IThemeRepository IUrlMappingRepository IUserRepository IUserRoleRepository IVisitorRepository"
  },
  "api/Oqtane.Repository.IAliasRepository.html": {
    "href": "api/Oqtane.Repository.IAliasRepository.html",
    "title": "Interface IAliasRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IAliasRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IAliasRepository Methods AddAlias(Alias) Declaration Alias AddAlias(Alias alias) Parameters Type Name Description Alias alias Returns Type Description Alias DeleteAlias(Int32) Declaration void DeleteAlias(int aliasId) Parameters Type Name Description System.Int32 aliasId GetAlias(Int32) Declaration Alias GetAlias(int aliasId) Parameters Type Name Description System.Int32 aliasId Returns Type Description Alias GetAlias(Int32, Boolean) Declaration Alias GetAlias(int aliasId, bool tracking) Parameters Type Name Description System.Int32 aliasId System.Boolean tracking Returns Type Description Alias GetAlias(String) Declaration Alias GetAlias(string url) Parameters Type Name Description System.String url Returns Type Description Alias GetAliases() Declaration IEnumerable<Alias> GetAliases() Returns Type Description System.Collections.Generic.IEnumerable < Alias > UpdateAlias(Alias) Declaration Alias UpdateAlias(Alias alias) Parameters Type Name Description Alias alias Returns Type Description Alias"
  },
  "api/Oqtane.Repository.IFileRepository.html": {
    "href": "api/Oqtane.Repository.IFileRepository.html",
    "title": "Interface IFileRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IFileRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IFileRepository Methods AddFile(File) Declaration File AddFile(File file) Parameters Type Name Description File file Returns Type Description File DeleteFile(Int32) Declaration void DeleteFile(int fileId) Parameters Type Name Description System.Int32 fileId GetFile(Int32) Declaration File GetFile(int fileId) Parameters Type Name Description System.Int32 fileId Returns Type Description File GetFile(Int32, Boolean) Declaration File GetFile(int fileId, bool tracking) Parameters Type Name Description System.Int32 fileId System.Boolean tracking Returns Type Description File GetFilePath(File) Declaration string GetFilePath(File file) Parameters Type Name Description File file Returns Type Description System.String GetFilePath(Int32) Declaration string GetFilePath(int fileId) Parameters Type Name Description System.Int32 fileId Returns Type Description System.String GetFiles(Int32) Declaration IEnumerable<File> GetFiles(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description System.Collections.Generic.IEnumerable < File > UpdateFile(File) Declaration File UpdateFile(File file) Parameters Type Name Description File file Returns Type Description File"
  },
  "api/Oqtane.Repository.IFolderRepository.html": {
    "href": "api/Oqtane.Repository.IFolderRepository.html",
    "title": "Interface IFolderRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IFolderRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IFolderRepository Methods AddFolder(Folder) Declaration Folder AddFolder(Folder folder) Parameters Type Name Description Folder folder Returns Type Description Folder DeleteFolder(Int32) Declaration void DeleteFolder(int folderId) Parameters Type Name Description System.Int32 folderId GetFolder(Int32) Declaration Folder GetFolder(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description Folder GetFolder(Int32, Boolean) Declaration Folder GetFolder(int folderId, bool tracking) Parameters Type Name Description System.Int32 folderId System.Boolean tracking Returns Type Description Folder GetFolder(Int32, String) Declaration Folder GetFolder(int siteId, string path) Parameters Type Name Description System.Int32 siteId System.String path Returns Type Description Folder GetFolderPath(Folder) Declaration string GetFolderPath(Folder folder) Parameters Type Name Description Folder folder Returns Type Description System.String GetFolderPath(Int32) Declaration string GetFolderPath(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description System.String GetFolders(Int32) Declaration IEnumerable<Folder> GetFolders(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Folder > UpdateFolder(Folder) Declaration Folder UpdateFolder(Folder folder) Parameters Type Name Description Folder folder Returns Type Description Folder"
  },
  "api/Oqtane.Repository.IJobLogRepository.html": {
    "href": "api/Oqtane.Repository.IJobLogRepository.html",
    "title": "Interface IJobLogRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IJobLogRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IJobLogRepository Methods AddJobLog(JobLog) Declaration JobLog AddJobLog(JobLog jobLog) Parameters Type Name Description JobLog jobLog Returns Type Description JobLog DeleteJobLog(Int32) Declaration void DeleteJobLog(int jobLogId) Parameters Type Name Description System.Int32 jobLogId GetJobLog(Int32) Declaration JobLog GetJobLog(int jobLogId) Parameters Type Name Description System.Int32 jobLogId Returns Type Description JobLog GetJobLogs() Declaration IEnumerable<JobLog> GetJobLogs() Returns Type Description System.Collections.Generic.IEnumerable < JobLog > UpdateJobLog(JobLog) Declaration JobLog UpdateJobLog(JobLog jobLog) Parameters Type Name Description JobLog jobLog Returns Type Description JobLog"
  },
  "api/Oqtane.Repository.IJobRepository.html": {
    "href": "api/Oqtane.Repository.IJobRepository.html",
    "title": "Interface IJobRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IJobRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IJobRepository Methods AddJob(Job) Declaration Job AddJob(Job job) Parameters Type Name Description Job job Returns Type Description Job DeleteJob(Int32) Declaration void DeleteJob(int jobId) Parameters Type Name Description System.Int32 jobId GetJob(Int32) Declaration Job GetJob(int jobId) Parameters Type Name Description System.Int32 jobId Returns Type Description Job GetJob(Int32, Boolean) Declaration Job GetJob(int jobId, bool tracking) Parameters Type Name Description System.Int32 jobId System.Boolean tracking Returns Type Description Job GetJobs() Declaration IEnumerable<Job> GetJobs() Returns Type Description System.Collections.Generic.IEnumerable < Job > UpdateJob(Job) Declaration Job UpdateJob(Job job) Parameters Type Name Description Job job Returns Type Description Job"
  },
  "api/Oqtane.Repository.ILanguageRepository.html": {
    "href": "api/Oqtane.Repository.ILanguageRepository.html",
    "title": "Interface ILanguageRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILanguageRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ILanguageRepository Methods AddLanguage(Language) Declaration Language AddLanguage(Language language) Parameters Type Name Description Language language Returns Type Description Language DeleteLanguage(Int32) Declaration void DeleteLanguage(int languageId) Parameters Type Name Description System.Int32 languageId GetLanguage(Int32) Declaration Language GetLanguage(int languageId) Parameters Type Name Description System.Int32 languageId Returns Type Description Language GetLanguages(Int32) Declaration IEnumerable<Language> GetLanguages(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Language >"
  },
  "api/Oqtane.Repository.ILogRepository.html": {
    "href": "api/Oqtane.Repository.ILogRepository.html",
    "title": "Interface ILogRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILogRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ILogRepository Methods AddLog(Log) Declaration void AddLog(Log log) Parameters Type Name Description Log log DeleteLogs(Int32, Int32) Declaration int DeleteLogs(int siteId, int age) Parameters Type Name Description System.Int32 siteId System.Int32 age Returns Type Description System.Int32 GetLog(Int32) Declaration Log GetLog(int logId) Parameters Type Name Description System.Int32 logId Returns Type Description Log GetLogs(Int32, String, String, Int32) Declaration IEnumerable<Log> GetLogs(int siteId, string level, string function, int rows) Parameters Type Name Description System.Int32 siteId System.String level System.String function System.Int32 rows Returns Type Description System.Collections.Generic.IEnumerable < Log >"
  },
  "api/Oqtane.Repository.IModuleDefinitionRepository.html": {
    "href": "api/Oqtane.Repository.IModuleDefinitionRepository.html",
    "title": "Interface IModuleDefinitionRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IModuleDefinitionRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IModuleDefinitionRepository Methods DeleteModuleDefinition(Int32) Declaration void DeleteModuleDefinition(int moduleDefinitionId) Parameters Type Name Description System.Int32 moduleDefinitionId GetModuleDefinition(Int32, Boolean) Declaration ModuleDefinition GetModuleDefinition(int moduleDefinitionId, bool tracking) Parameters Type Name Description System.Int32 moduleDefinitionId System.Boolean tracking Returns Type Description ModuleDefinition GetModuleDefinition(Int32, Int32) Declaration ModuleDefinition GetModuleDefinition(int moduleDefinitionId, int siteId) Parameters Type Name Description System.Int32 moduleDefinitionId System.Int32 siteId Returns Type Description ModuleDefinition GetModuleDefinitions() Declaration IEnumerable<ModuleDefinition> GetModuleDefinitions() Returns Type Description System.Collections.Generic.IEnumerable < ModuleDefinition > GetModuleDefinitions(Int32) Declaration IEnumerable<ModuleDefinition> GetModuleDefinitions(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < ModuleDefinition > UpdateModuleDefinition(ModuleDefinition) Declaration void UpdateModuleDefinition(ModuleDefinition moduleDefinition) Parameters Type Name Description ModuleDefinition moduleDefinition"
  },
  "api/Oqtane.Repository.IModuleRepository.html": {
    "href": "api/Oqtane.Repository.IModuleRepository.html",
    "title": "Interface IModuleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IModuleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IModuleRepository Methods AddModule(Module) Declaration Module AddModule(Module module) Parameters Type Name Description Module module Returns Type Description Module DeleteModule(Int32) Declaration void DeleteModule(int moduleId) Parameters Type Name Description System.Int32 moduleId ExportModule(Int32) Declaration string ExportModule(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description System.String GetModule(Int32) Declaration Module GetModule(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description Module GetModule(Int32, Boolean) Declaration Module GetModule(int moduleId, bool tracking) Parameters Type Name Description System.Int32 moduleId System.Boolean tracking Returns Type Description Module GetModules(Int32) Declaration IEnumerable<Module> GetModules(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Module > ImportModule(Int32, String) Declaration bool ImportModule(int moduleId, string content) Parameters Type Name Description System.Int32 moduleId System.String content Returns Type Description System.Boolean UpdateModule(Module) Declaration Module UpdateModule(Module module) Parameters Type Name Description Module module Returns Type Description Module"
  },
  "api/Oqtane.Repository.INotificationRepository.html": {
    "href": "api/Oqtane.Repository.INotificationRepository.html",
    "title": "Interface INotificationRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface INotificationRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface INotificationRepository Methods AddNotification(Notification) Declaration Notification AddNotification(Notification notification) Parameters Type Name Description Notification notification Returns Type Description Notification DeleteNotification(Int32) Declaration void DeleteNotification(int notificationId) Parameters Type Name Description System.Int32 notificationId DeleteNotifications(Int32, Int32) Declaration int DeleteNotifications(int siteId, int age) Parameters Type Name Description System.Int32 siteId System.Int32 age Returns Type Description System.Int32 GetNotification(Int32) Declaration Notification GetNotification(int notificationId) Parameters Type Name Description System.Int32 notificationId Returns Type Description Notification GetNotification(Int32, Boolean) Declaration Notification GetNotification(int notificationId, bool tracking) Parameters Type Name Description System.Int32 notificationId System.Boolean tracking Returns Type Description Notification GetNotifications(Int32, Int32, Int32) Declaration IEnumerable<Notification> GetNotifications(int siteId, int fromUserId, int toUserId) Parameters Type Name Description System.Int32 siteId System.Int32 fromUserId System.Int32 toUserId Returns Type Description System.Collections.Generic.IEnumerable < Notification > UpdateNotification(Notification) Declaration Notification UpdateNotification(Notification notification) Parameters Type Name Description Notification notification Returns Type Description Notification"
  },
  "api/Oqtane.Repository.InstallationContext.html": {
    "href": "api/Oqtane.Repository.InstallationContext.html",
    "title": "Class InstallationContext | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class InstallationContext Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext InstallationContext Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class InstallationContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Constructors InstallationContext(IDatabase, String) Declaration public InstallationContext(IDatabase database, string connectionString) Parameters Type Name Description IDatabase database System.String connectionString Properties Alias Declaration public virtual DbSet<Alias> Alias { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Alias > Job Declaration public virtual DbSet<Job> Job { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Job > JobLog Declaration public virtual DbSet<JobLog> JobLog { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < JobLog > ModuleDefinition Declaration public virtual DbSet<ModuleDefinition> ModuleDefinition { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < ModuleDefinition > Tenant Declaration public virtual DbSet<Tenant> Tenant { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Tenant > Methods OnConfiguring(DbContextOptionsBuilder) Declaration protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder Overrides Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)"
  },
  "api/Oqtane.Repository.IPageModuleRepository.html": {
    "href": "api/Oqtane.Repository.IPageModuleRepository.html",
    "title": "Interface IPageModuleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IPageModuleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IPageModuleRepository Methods AddPageModule(PageModule) Declaration PageModule AddPageModule(PageModule pageModule) Parameters Type Name Description PageModule pageModule Returns Type Description PageModule DeletePageModule(Int32) Declaration void DeletePageModule(int pageModuleId) Parameters Type Name Description System.Int32 pageModuleId GetPageModule(Int32) Declaration PageModule GetPageModule(int pageModuleId) Parameters Type Name Description System.Int32 pageModuleId Returns Type Description PageModule GetPageModule(Int32, Boolean) Declaration PageModule GetPageModule(int pageModuleId, bool tracking) Parameters Type Name Description System.Int32 pageModuleId System.Boolean tracking Returns Type Description PageModule GetPageModule(Int32, Int32) Declaration PageModule GetPageModule(int pageId, int moduleId) Parameters Type Name Description System.Int32 pageId System.Int32 moduleId Returns Type Description PageModule GetPageModules(Int32) Declaration IEnumerable<PageModule> GetPageModules(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < PageModule > GetPageModules(Int32, String) Declaration IEnumerable<PageModule> GetPageModules(int pageId, string pane) Parameters Type Name Description System.Int32 pageId System.String pane Returns Type Description System.Collections.Generic.IEnumerable < PageModule > UpdatePageModule(PageModule) Declaration PageModule UpdatePageModule(PageModule pageModule) Parameters Type Name Description PageModule pageModule Returns Type Description PageModule"
  },
  "api/Oqtane.Repository.IPageRepository.html": {
    "href": "api/Oqtane.Repository.IPageRepository.html",
    "title": "Interface IPageRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IPageRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IPageRepository Methods AddPage(Page) Declaration Page AddPage(Page page) Parameters Type Name Description Page page Returns Type Description Page DeletePage(Int32) Declaration void DeletePage(int pageId) Parameters Type Name Description System.Int32 pageId GetPage(Int32) Declaration Page GetPage(int pageId) Parameters Type Name Description System.Int32 pageId Returns Type Description Page GetPage(Int32, Boolean) Declaration Page GetPage(int pageId, bool tracking) Parameters Type Name Description System.Int32 pageId System.Boolean tracking Returns Type Description Page GetPage(Int32, Int32) Declaration Page GetPage(int pageId, int userId) Parameters Type Name Description System.Int32 pageId System.Int32 userId Returns Type Description Page GetPage(String, Int32) Declaration Page GetPage(string path, int siteId) Parameters Type Name Description System.String path System.Int32 siteId Returns Type Description Page GetPages(Int32) Declaration IEnumerable<Page> GetPages(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Page > UpdatePage(Page) Declaration Page UpdatePage(Page page) Parameters Type Name Description Page page Returns Type Description Page"
  },
  "api/Oqtane.Repository.IPermissionRepository.html": {
    "href": "api/Oqtane.Repository.IPermissionRepository.html",
    "title": "Interface IPermissionRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IPermissionRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IPermissionRepository Methods AddPermission(Permission) Declaration Permission AddPermission(Permission permission) Parameters Type Name Description Permission permission Returns Type Description Permission DecodePermissions(String, Int32, String, Int32) Declaration IEnumerable<Permission> DecodePermissions(string permissions, int siteId, string entityName, int entityId) Parameters Type Name Description System.String permissions System.Int32 siteId System.String entityName System.Int32 entityId Returns Type Description System.Collections.Generic.IEnumerable < Permission > DeletePermission(Int32) Declaration void DeletePermission(int permissionId) Parameters Type Name Description System.Int32 permissionId DeletePermissions(Int32, String, Int32) Declaration void DeletePermissions(int siteId, string entityName, int entityId) Parameters Type Name Description System.Int32 siteId System.String entityName System.Int32 entityId GetPermission(Int32) Declaration Permission GetPermission(int permissionId) Parameters Type Name Description System.Int32 permissionId Returns Type Description Permission GetPermissions(Int32, String) Declaration IEnumerable<Permission> GetPermissions(int siteId, string entityName) Parameters Type Name Description System.Int32 siteId System.String entityName Returns Type Description System.Collections.Generic.IEnumerable < Permission > GetPermissions(String, Int32) Declaration IEnumerable<Permission> GetPermissions(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.Collections.Generic.IEnumerable < Permission > GetPermissions(String, Int32, String) Declaration IEnumerable<Permission> GetPermissions(string entityName, int entityId, string permissionName) Parameters Type Name Description System.String entityName System.Int32 entityId System.String permissionName Returns Type Description System.Collections.Generic.IEnumerable < Permission > GetPermissionString(Int32, String) Declaration string GetPermissionString(int siteId, string entityName) Parameters Type Name Description System.Int32 siteId System.String entityName Returns Type Description System.String GetPermissionString(String, Int32) Declaration string GetPermissionString(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.String GetPermissionString(String, Int32, String) Declaration string GetPermissionString(string entityName, int entityId, string permissionName) Parameters Type Name Description System.String entityName System.Int32 entityId System.String permissionName Returns Type Description System.String UpdatePermission(Permission) Declaration Permission UpdatePermission(Permission permission) Parameters Type Name Description Permission permission Returns Type Description Permission UpdatePermissions(Int32, String, Int32, String) Declaration void UpdatePermissions(int siteId, string entityName, int entityId, string permissionStrings) Parameters Type Name Description System.Int32 siteId System.String entityName System.Int32 entityId System.String permissionStrings"
  },
  "api/Oqtane.Repository.IProfileRepository.html": {
    "href": "api/Oqtane.Repository.IProfileRepository.html",
    "title": "Interface IProfileRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IProfileRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IProfileRepository Methods AddProfile(Profile) Declaration Profile AddProfile(Profile profile) Parameters Type Name Description Profile profile Returns Type Description Profile DeleteProfile(Int32) Declaration void DeleteProfile(int profileId) Parameters Type Name Description System.Int32 profileId GetProfile(Int32) Declaration Profile GetProfile(int profileId) Parameters Type Name Description System.Int32 profileId Returns Type Description Profile GetProfile(Int32, Boolean) Declaration Profile GetProfile(int profileId, bool tracking) Parameters Type Name Description System.Int32 profileId System.Boolean tracking Returns Type Description Profile GetProfiles(Int32) Declaration IEnumerable<Profile> GetProfiles(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Profile > UpdateProfile(Profile) Declaration Profile UpdateProfile(Profile profile) Parameters Type Name Description Profile profile Returns Type Description Profile"
  },
  "api/Oqtane.Repository.IRoleRepository.html": {
    "href": "api/Oqtane.Repository.IRoleRepository.html",
    "title": "Interface IRoleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IRoleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IRoleRepository Methods AddRole(Role) Declaration Role AddRole(Role role) Parameters Type Name Description Role role Returns Type Description Role DeleteRole(Int32) Declaration void DeleteRole(int roleId) Parameters Type Name Description System.Int32 roleId GetRole(Int32) Declaration Role GetRole(int roleId) Parameters Type Name Description System.Int32 roleId Returns Type Description Role GetRole(Int32, Boolean) Declaration Role GetRole(int roleId, bool tracking) Parameters Type Name Description System.Int32 roleId System.Boolean tracking Returns Type Description Role GetRoles(Int32) Declaration IEnumerable<Role> GetRoles(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Role > GetRoles(Int32, Boolean) Declaration IEnumerable<Role> GetRoles(int siteId, bool includeGlobalRoles) Parameters Type Name Description System.Int32 siteId System.Boolean includeGlobalRoles Returns Type Description System.Collections.Generic.IEnumerable < Role > UpdateRole(Role) Declaration Role UpdateRole(Role role) Parameters Type Name Description Role role Returns Type Description Role"
  },
  "api/Oqtane.Repository.ISettingRepository.html": {
    "href": "api/Oqtane.Repository.ISettingRepository.html",
    "title": "Interface ISettingRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISettingRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ISettingRepository Methods AddSetting(Setting) Declaration Setting AddSetting(Setting setting) Parameters Type Name Description Setting setting Returns Type Description Setting DeleteSetting(String, Int32) Declaration void DeleteSetting(string entityName, int settingId) Parameters Type Name Description System.String entityName System.Int32 settingId DeleteSettings(String, Int32) Declaration void DeleteSettings(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId GetSetting(String, Int32) Declaration Setting GetSetting(string entityName, int settingId) Parameters Type Name Description System.String entityName System.Int32 settingId Returns Type Description Setting GetSetting(String, Int32, String) Declaration Setting GetSetting(string entityName, int entityId, string settingName) Parameters Type Name Description System.String entityName System.Int32 entityId System.String settingName Returns Type Description Setting GetSettings(String) Declaration IEnumerable<Setting> GetSettings(string entityName) Parameters Type Name Description System.String entityName Returns Type Description System.Collections.Generic.IEnumerable < Setting > GetSettings(String, Int32) Declaration IEnumerable<Setting> GetSettings(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.Collections.Generic.IEnumerable < Setting > UpdateSetting(Setting) Declaration Setting UpdateSetting(Setting setting) Parameters Type Name Description Setting setting Returns Type Description Setting"
  },
  "api/Oqtane.Repository.ISiteRepository.html": {
    "href": "api/Oqtane.Repository.ISiteRepository.html",
    "title": "Interface ISiteRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISiteRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ISiteRepository Methods AddSite(Site) Declaration Site AddSite(Site site) Parameters Type Name Description Site site Returns Type Description Site CreatePages(Site, List<PageTemplate>) Declaration void CreatePages(Site site, List<PageTemplate> pageTemplates) Parameters Type Name Description Site site System.Collections.Generic.List < PageTemplate > pageTemplates DeleteSite(Int32) Declaration void DeleteSite(int siteId) Parameters Type Name Description System.Int32 siteId GetSite(Int32) Declaration Site GetSite(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description Site GetSite(Int32, Boolean) Declaration Site GetSite(int siteId, bool tracking) Parameters Type Name Description System.Int32 siteId System.Boolean tracking Returns Type Description Site GetSites() Declaration IEnumerable<Site> GetSites() Returns Type Description System.Collections.Generic.IEnumerable < Site > UpdateSite(Site) Declaration Site UpdateSite(Site site) Parameters Type Name Description Site site Returns Type Description Site"
  },
  "api/Oqtane.Repository.ISiteTemplateRepository.html": {
    "href": "api/Oqtane.Repository.ISiteTemplateRepository.html",
    "title": "Interface ISiteTemplateRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISiteTemplateRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ISiteTemplateRepository Methods GetSiteTemplates() Declaration IEnumerable<SiteTemplate> GetSiteTemplates() Returns Type Description System.Collections.Generic.IEnumerable < SiteTemplate >"
  },
  "api/Oqtane.Repository.ISqlRepository.html": {
    "href": "api/Oqtane.Repository.ISqlRepository.html",
    "title": "Interface ISqlRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISqlRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ISqlRepository Methods ExecuteNonQuery(Tenant, String) Declaration int ExecuteNonQuery(Tenant tenant, string query) Parameters Type Name Description Tenant tenant System.String query Returns Type Description System.Int32 ExecuteNonQuery(String, String, String) Declaration int ExecuteNonQuery(string connectionString, string databaseType, string query) Parameters Type Name Description System.String connectionString System.String databaseType System.String query Returns Type Description System.Int32 ExecuteReader(Tenant, String) Declaration IDataReader ExecuteReader(Tenant tenant, string query) Parameters Type Name Description Tenant tenant System.String query Returns Type Description System.Data.IDataReader ExecuteScript(Tenant, Assembly, String) Declaration bool ExecuteScript(Tenant tenant, Assembly assembly, string filename) Parameters Type Name Description Tenant tenant System.Reflection.Assembly assembly System.String filename Returns Type Description System.Boolean ExecuteScript(Tenant, String) Declaration void ExecuteScript(Tenant tenant, string script) Parameters Type Name Description Tenant tenant System.String script ExecuteScript(String, String, Assembly, String) Declaration bool ExecuteScript(string connectionString, string databaseType, Assembly assembly, string filename) Parameters Type Name Description System.String connectionString System.String databaseType System.Reflection.Assembly assembly System.String filename Returns Type Description System.Boolean GetScriptFromAssembly(Assembly, String) Declaration string GetScriptFromAssembly(Assembly assembly, string fileName) Parameters Type Name Description System.Reflection.Assembly assembly System.String fileName Returns Type Description System.String"
  },
  "api/Oqtane.Repository.ITenantRepository.html": {
    "href": "api/Oqtane.Repository.ITenantRepository.html",
    "title": "Interface ITenantRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ITenantRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ITenantRepository Methods AddTenant(Tenant) Declaration Tenant AddTenant(Tenant tenant) Parameters Type Name Description Tenant tenant Returns Type Description Tenant DeleteTenant(Int32) Declaration void DeleteTenant(int tenantId) Parameters Type Name Description System.Int32 tenantId GetTenant(Int32) Declaration Tenant GetTenant(int tenantId) Parameters Type Name Description System.Int32 tenantId Returns Type Description Tenant GetTenants() Declaration IEnumerable<Tenant> GetTenants() Returns Type Description System.Collections.Generic.IEnumerable < Tenant > UpdateTenant(Tenant) Declaration Tenant UpdateTenant(Tenant tenant) Parameters Type Name Description Tenant tenant Returns Type Description Tenant"
  },
  "api/Oqtane.Repository.ITenantResolver.html": {
    "href": "api/Oqtane.Repository.ITenantResolver.html",
    "title": "Interface ITenantResolver | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ITenantResolver Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface ITenantResolver Methods GetAlias() Declaration Alias GetAlias() Returns Type Description Alias GetTenant() Declaration Tenant GetTenant() Returns Type Description Tenant"
  },
  "api/Oqtane.Repository.IThemeRepository.html": {
    "href": "api/Oqtane.Repository.IThemeRepository.html",
    "title": "Interface IThemeRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IThemeRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IThemeRepository Methods DeleteTheme(String) Declaration void DeleteTheme(string ThemeName) Parameters Type Name Description System.String ThemeName GetThemes() Declaration IEnumerable<Theme> GetThemes() Returns Type Description System.Collections.Generic.IEnumerable < Theme >"
  },
  "api/Oqtane.Repository.IUrlMappingRepository.html": {
    "href": "api/Oqtane.Repository.IUrlMappingRepository.html",
    "title": "Interface IUrlMappingRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUrlMappingRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IUrlMappingRepository Methods AddUrlMapping(UrlMapping) Declaration UrlMapping AddUrlMapping(UrlMapping urlMapping) Parameters Type Name Description UrlMapping urlMapping Returns Type Description UrlMapping DeleteUrlMapping(Int32) Declaration void DeleteUrlMapping(int urlMappingId) Parameters Type Name Description System.Int32 urlMappingId GetUrlMapping(Int32) Declaration UrlMapping GetUrlMapping(int urlMappingId) Parameters Type Name Description System.Int32 urlMappingId Returns Type Description UrlMapping GetUrlMapping(Int32, Boolean) Declaration UrlMapping GetUrlMapping(int urlMappingId, bool tracking) Parameters Type Name Description System.Int32 urlMappingId System.Boolean tracking Returns Type Description UrlMapping GetUrlMapping(Int32, String) Declaration UrlMapping GetUrlMapping(int siteId, string url) Parameters Type Name Description System.Int32 siteId System.String url Returns Type Description UrlMapping GetUrlMappings(Int32, Boolean) Declaration IEnumerable<UrlMapping> GetUrlMappings(int siteId, bool isMapped) Parameters Type Name Description System.Int32 siteId System.Boolean isMapped Returns Type Description System.Collections.Generic.IEnumerable < UrlMapping > UpdateUrlMapping(UrlMapping) Declaration UrlMapping UpdateUrlMapping(UrlMapping urlMapping) Parameters Type Name Description UrlMapping urlMapping Returns Type Description UrlMapping"
  },
  "api/Oqtane.Repository.IUserRepository.html": {
    "href": "api/Oqtane.Repository.IUserRepository.html",
    "title": "Interface IUserRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUserRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IUserRepository Methods AddUser(User) Declaration User AddUser(User user) Parameters Type Name Description User user Returns Type Description User DeleteUser(Int32) Declaration void DeleteUser(int userId) Parameters Type Name Description System.Int32 userId GetUser(Int32) Declaration User GetUser(int userId) Parameters Type Name Description System.Int32 userId Returns Type Description User GetUser(Int32, Boolean) Declaration User GetUser(int userId, bool tracking) Parameters Type Name Description System.Int32 userId System.Boolean tracking Returns Type Description User GetUser(String) Declaration User GetUser(string username) Parameters Type Name Description System.String username Returns Type Description User GetUsers() Declaration IEnumerable<User> GetUsers() Returns Type Description System.Collections.Generic.IEnumerable < User > UpdateUser(User) Declaration User UpdateUser(User user) Parameters Type Name Description User user Returns Type Description User"
  },
  "api/Oqtane.Repository.IUserRoleRepository.html": {
    "href": "api/Oqtane.Repository.IUserRoleRepository.html",
    "title": "Interface IUserRoleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUserRoleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IUserRoleRepository Methods AddUserRole(UserRole) Declaration UserRole AddUserRole(UserRole userRole) Parameters Type Name Description UserRole userRole Returns Type Description UserRole DeleteUserRole(Int32) Declaration void DeleteUserRole(int userRoleId) Parameters Type Name Description System.Int32 userRoleId DeleteUserRoles(Int32) Declaration void DeleteUserRoles(int userId) Parameters Type Name Description System.Int32 userId GetUserRole(Int32) Declaration UserRole GetUserRole(int userRoleId) Parameters Type Name Description System.Int32 userRoleId Returns Type Description UserRole GetUserRole(Int32, Boolean) Declaration UserRole GetUserRole(int userRoleId, bool tracking) Parameters Type Name Description System.Int32 userRoleId System.Boolean tracking Returns Type Description UserRole GetUserRoles(Int32) Declaration IEnumerable<UserRole> GetUserRoles(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < UserRole > GetUserRoles(Int32, Int32) Declaration IEnumerable<UserRole> GetUserRoles(int userId, int siteId) Parameters Type Name Description System.Int32 userId System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < UserRole > UpdateUserRole(UserRole) Declaration UserRole UpdateUserRole(UserRole userRole) Parameters Type Name Description UserRole userRole Returns Type Description UserRole"
  },
  "api/Oqtane.Repository.IVisitorRepository.html": {
    "href": "api/Oqtane.Repository.IVisitorRepository.html",
    "title": "Interface IVisitorRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IVisitorRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public interface IVisitorRepository Methods AddVisitor(Visitor) Declaration Visitor AddVisitor(Visitor visitor) Parameters Type Name Description Visitor visitor Returns Type Description Visitor DeleteVisitor(Int32) Declaration void DeleteVisitor(int visitorId) Parameters Type Name Description System.Int32 visitorId DeleteVisitors(Int32, Int32) Declaration int DeleteVisitors(int siteId, int age) Parameters Type Name Description System.Int32 siteId System.Int32 age Returns Type Description System.Int32 GetVisitor(Int32) Declaration Visitor GetVisitor(int visitorId) Parameters Type Name Description System.Int32 visitorId Returns Type Description Visitor GetVisitor(Int32, String) Declaration Visitor GetVisitor(int siteId, string IPAddress) Parameters Type Name Description System.Int32 siteId System.String IPAddress Returns Type Description Visitor GetVisitors(Int32, DateTime) Declaration IEnumerable<Visitor> GetVisitors(int siteId, DateTime fromDate) Parameters Type Name Description System.Int32 siteId System.DateTime fromDate Returns Type Description System.Collections.Generic.IEnumerable < Visitor > UpdateVisitor(Visitor) Declaration Visitor UpdateVisitor(Visitor visitor) Parameters Type Name Description Visitor visitor Returns Type Description Visitor"
  },
  "api/Oqtane.Repository.JobLogRepository.html": {
    "href": "api/Oqtane.Repository.JobLogRepository.html",
    "title": "Class JobLogRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class JobLogRepository Inheritance System.Object JobLogRepository Implements IJobLogRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class JobLogRepository : IJobLogRepository Constructors JobLogRepository(MasterDBContext) Declaration public JobLogRepository(MasterDBContext context) Parameters Type Name Description MasterDBContext context Methods AddJobLog(JobLog) Declaration public JobLog AddJobLog(JobLog jobLog) Parameters Type Name Description JobLog jobLog Returns Type Description JobLog DeleteJobLog(Int32) Declaration public void DeleteJobLog(int jobLogId) Parameters Type Name Description System.Int32 jobLogId GetJobLog(Int32) Declaration public JobLog GetJobLog(int jobLogId) Parameters Type Name Description System.Int32 jobLogId Returns Type Description JobLog GetJobLogs() Declaration public IEnumerable<JobLog> GetJobLogs() Returns Type Description System.Collections.Generic.IEnumerable < JobLog > UpdateJobLog(JobLog) Declaration public JobLog UpdateJobLog(JobLog jobLog) Parameters Type Name Description JobLog jobLog Returns Type Description JobLog Implements IJobLogRepository"
  },
  "api/Oqtane.Repository.JobRepository.html": {
    "href": "api/Oqtane.Repository.JobRepository.html",
    "title": "Class JobRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class JobRepository Inheritance System.Object JobRepository Implements IJobRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class JobRepository : IJobRepository Constructors JobRepository(MasterDBContext, IMemoryCache) Declaration public JobRepository(MasterDBContext context, IMemoryCache cache) Parameters Type Name Description MasterDBContext context Microsoft.Extensions.Caching.Memory.IMemoryCache cache Methods AddJob(Job) Declaration public Job AddJob(Job job) Parameters Type Name Description Job job Returns Type Description Job DeleteJob(Int32) Declaration public void DeleteJob(int jobId) Parameters Type Name Description System.Int32 jobId GetJob(Int32) Declaration public Job GetJob(int jobId) Parameters Type Name Description System.Int32 jobId Returns Type Description Job GetJob(Int32, Boolean) Declaration public Job GetJob(int jobId, bool tracking) Parameters Type Name Description System.Int32 jobId System.Boolean tracking Returns Type Description Job GetJobs() Declaration public IEnumerable<Job> GetJobs() Returns Type Description System.Collections.Generic.IEnumerable < Job > UpdateJob(Job) Declaration public Job UpdateJob(Job job) Parameters Type Name Description Job job Returns Type Description Job Implements IJobRepository"
  },
  "api/Oqtane.Repository.LanguageRepository.html": {
    "href": "api/Oqtane.Repository.LanguageRepository.html",
    "title": "Class LanguageRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LanguageRepository Inheritance System.Object LanguageRepository Implements ILanguageRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class LanguageRepository : ILanguageRepository Constructors LanguageRepository(TenantDBContext) Declaration public LanguageRepository(TenantDBContext context) Parameters Type Name Description TenantDBContext context Methods AddLanguage(Language) Declaration public Language AddLanguage(Language language) Parameters Type Name Description Language language Returns Type Description Language DeleteLanguage(Int32) Declaration public void DeleteLanguage(int languageId) Parameters Type Name Description System.Int32 languageId GetLanguage(Int32) Declaration public Language GetLanguage(int languageId) Parameters Type Name Description System.Int32 languageId Returns Type Description Language GetLanguages(Int32) Declaration public IEnumerable<Language> GetLanguages(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Language > Implements ILanguageRepository"
  },
  "api/Oqtane.Repository.LogRepository.html": {
    "href": "api/Oqtane.Repository.LogRepository.html",
    "title": "Class LogRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LogRepository Inheritance System.Object LogRepository Implements ILogRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class LogRepository : ILogRepository Constructors LogRepository(TenantDBContext) Declaration public LogRepository(TenantDBContext context) Parameters Type Name Description TenantDBContext context Methods AddLog(Log) Declaration public void AddLog(Log log) Parameters Type Name Description Log log DeleteLogs(Int32, Int32) Declaration public int DeleteLogs(int siteId, int age) Parameters Type Name Description System.Int32 siteId System.Int32 age Returns Type Description System.Int32 GetLog(Int32) Declaration public Log GetLog(int logId) Parameters Type Name Description System.Int32 logId Returns Type Description Log GetLogs(Int32, String, String, Int32) Declaration public IEnumerable<Log> GetLogs(int siteId, string level, string function, int rows) Parameters Type Name Description System.Int32 siteId System.String level System.String function System.Int32 rows Returns Type Description System.Collections.Generic.IEnumerable < Log > Implements ILogRepository"
  },
  "api/Oqtane.Repository.MasterDBContext.html": {
    "href": "api/Oqtane.Repository.MasterDBContext.html",
    "title": "Class MasterDBContext | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class MasterDBContext Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext MasterDBContext Implements IMultiDatabase Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class MasterDBContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable, IMultiDatabase Constructors MasterDBContext(DbContextOptions<MasterDBContext>, IHttpContextAccessor, IConfigManager) Declaration public MasterDBContext(DbContextOptions<MasterDBContext> options, IHttpContextAccessor accessor, IConfigManager config) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptions < MasterDBContext > options Microsoft.AspNetCore.Http.IHttpContextAccessor accessor IConfigManager config Properties ActiveDatabase Declaration public IDatabase ActiveDatabase { get; } Property Value Type Description IDatabase Alias Declaration public virtual DbSet<Alias> Alias { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Alias > Job Declaration public virtual DbSet<Job> Job { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Job > JobLog Declaration public virtual DbSet<JobLog> JobLog { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < JobLog > ModuleDefinition Declaration public virtual DbSet<ModuleDefinition> ModuleDefinition { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < ModuleDefinition > Setting Declaration public virtual DbSet<Setting> Setting { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Setting > Tenant Declaration public virtual DbSet<Tenant> Tenant { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Tenant > Methods OnConfiguring(DbContextOptionsBuilder) Declaration protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder Overrides Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) SaveChanges() Declaration public override int SaveChanges() Returns Type Description System.Int32 Overrides Microsoft.EntityFrameworkCore.DbContext.SaveChanges() SaveChangesAsync(CancellationToken) Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Overrides Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken) Implements IMultiDatabase"
  },
  "api/Oqtane.Repository.ModuleDefinitionRepository.html": {
    "href": "api/Oqtane.Repository.ModuleDefinitionRepository.html",
    "title": "Class ModuleDefinitionRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleDefinitionRepository Inheritance System.Object ModuleDefinitionRepository Implements IModuleDefinitionRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class ModuleDefinitionRepository : IModuleDefinitionRepository Constructors ModuleDefinitionRepository(MasterDBContext, IMemoryCache, IPermissionRepository) Declaration public ModuleDefinitionRepository(MasterDBContext context, IMemoryCache cache, IPermissionRepository permissions) Parameters Type Name Description MasterDBContext context Microsoft.Extensions.Caching.Memory.IMemoryCache cache IPermissionRepository permissions Methods DeleteModuleDefinition(Int32) Declaration public void DeleteModuleDefinition(int moduleDefinitionId) Parameters Type Name Description System.Int32 moduleDefinitionId GetModuleDefinition(Int32, Boolean) Declaration public ModuleDefinition GetModuleDefinition(int moduleDefinitionId, bool tracking) Parameters Type Name Description System.Int32 moduleDefinitionId System.Boolean tracking Returns Type Description ModuleDefinition GetModuleDefinition(Int32, Int32) Declaration public ModuleDefinition GetModuleDefinition(int moduleDefinitionId, int siteId) Parameters Type Name Description System.Int32 moduleDefinitionId System.Int32 siteId Returns Type Description ModuleDefinition GetModuleDefinitions() Declaration public IEnumerable<ModuleDefinition> GetModuleDefinitions() Returns Type Description System.Collections.Generic.IEnumerable < ModuleDefinition > GetModuleDefinitions(Int32) Declaration public IEnumerable<ModuleDefinition> GetModuleDefinitions(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < ModuleDefinition > LoadModuleDefinitions(Int32) Declaration public List<ModuleDefinition> LoadModuleDefinitions(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.List < ModuleDefinition > UpdateModuleDefinition(ModuleDefinition) Declaration public void UpdateModuleDefinition(ModuleDefinition moduleDefinition) Parameters Type Name Description ModuleDefinition moduleDefinition Implements IModuleDefinitionRepository"
  },
  "api/Oqtane.Repository.ModuleRepository.html": {
    "href": "api/Oqtane.Repository.ModuleRepository.html",
    "title": "Class ModuleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleRepository Inheritance System.Object ModuleRepository Implements IModuleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class ModuleRepository : IModuleRepository Constructors ModuleRepository(TenantDBContext, IPermissionRepository, ISettingRepository, IModuleDefinitionRepository, IServiceProvider) Declaration public ModuleRepository(TenantDBContext context, IPermissionRepository permissions, ISettingRepository settings, IModuleDefinitionRepository moduleDefinitions, IServiceProvider serviceProvider) Parameters Type Name Description TenantDBContext context IPermissionRepository permissions ISettingRepository settings IModuleDefinitionRepository moduleDefinitions System.IServiceProvider serviceProvider Methods AddModule(Module) Declaration public Module AddModule(Module module) Parameters Type Name Description Module module Returns Type Description Module DeleteModule(Int32) Declaration public void DeleteModule(int moduleId) Parameters Type Name Description System.Int32 moduleId ExportModule(Int32) Declaration public string ExportModule(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description System.String GetModule(Int32) Declaration public Module GetModule(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description Module GetModule(Int32, Boolean) Declaration public Module GetModule(int moduleId, bool tracking) Parameters Type Name Description System.Int32 moduleId System.Boolean tracking Returns Type Description Module GetModules(Int32) Declaration public IEnumerable<Module> GetModules(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Module > ImportModule(Int32, String) Declaration public bool ImportModule(int moduleId, string content) Parameters Type Name Description System.Int32 moduleId System.String content Returns Type Description System.Boolean UpdateModule(Module) Declaration public Module UpdateModule(Module module) Parameters Type Name Description Module module Returns Type Description Module Implements IModuleRepository"
  },
  "api/Oqtane.Repository.NotificationRepository.html": {
    "href": "api/Oqtane.Repository.NotificationRepository.html",
    "title": "Class NotificationRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class NotificationRepository Inheritance System.Object NotificationRepository Implements INotificationRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class NotificationRepository : INotificationRepository Constructors NotificationRepository(TenantDBContext) Declaration public NotificationRepository(TenantDBContext context) Parameters Type Name Description TenantDBContext context Methods AddNotification(Notification) Declaration public Notification AddNotification(Notification notification) Parameters Type Name Description Notification notification Returns Type Description Notification DeleteNotification(Int32) Declaration public void DeleteNotification(int notificationId) Parameters Type Name Description System.Int32 notificationId DeleteNotifications(Int32, Int32) Declaration public int DeleteNotifications(int siteId, int age) Parameters Type Name Description System.Int32 siteId System.Int32 age Returns Type Description System.Int32 GetNotification(Int32) Declaration public Notification GetNotification(int notificationId) Parameters Type Name Description System.Int32 notificationId Returns Type Description Notification GetNotification(Int32, Boolean) Declaration public Notification GetNotification(int notificationId, bool tracking) Parameters Type Name Description System.Int32 notificationId System.Boolean tracking Returns Type Description Notification GetNotifications(Int32, Int32, Int32) Declaration public IEnumerable<Notification> GetNotifications(int siteId, int fromUserId, int toUserId) Parameters Type Name Description System.Int32 siteId System.Int32 fromUserId System.Int32 toUserId Returns Type Description System.Collections.Generic.IEnumerable < Notification > UpdateNotification(Notification) Declaration public Notification UpdateNotification(Notification notification) Parameters Type Name Description Notification notification Returns Type Description Notification Implements INotificationRepository"
  },
  "api/Oqtane.Repository.PageModuleRepository.html": {
    "href": "api/Oqtane.Repository.PageModuleRepository.html",
    "title": "Class PageModuleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageModuleRepository Inheritance System.Object PageModuleRepository Implements IPageModuleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class PageModuleRepository : IPageModuleRepository Constructors PageModuleRepository(TenantDBContext, IPermissionRepository) Declaration public PageModuleRepository(TenantDBContext context, IPermissionRepository permissions) Parameters Type Name Description TenantDBContext context IPermissionRepository permissions Methods AddPageModule(PageModule) Declaration public PageModule AddPageModule(PageModule pageModule) Parameters Type Name Description PageModule pageModule Returns Type Description PageModule DeletePageModule(Int32) Declaration public void DeletePageModule(int pageModuleId) Parameters Type Name Description System.Int32 pageModuleId GetPageModule(Int32) Declaration public PageModule GetPageModule(int pageModuleId) Parameters Type Name Description System.Int32 pageModuleId Returns Type Description PageModule GetPageModule(Int32, Boolean) Declaration public PageModule GetPageModule(int pageModuleId, bool tracking) Parameters Type Name Description System.Int32 pageModuleId System.Boolean tracking Returns Type Description PageModule GetPageModule(Int32, Int32) Declaration public PageModule GetPageModule(int pageId, int moduleId) Parameters Type Name Description System.Int32 pageId System.Int32 moduleId Returns Type Description PageModule GetPageModules(Int32) Declaration public IEnumerable<PageModule> GetPageModules(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < PageModule > GetPageModules(Int32, String) Declaration public IEnumerable<PageModule> GetPageModules(int pageId, string pane) Parameters Type Name Description System.Int32 pageId System.String pane Returns Type Description System.Collections.Generic.IEnumerable < PageModule > UpdatePageModule(PageModule) Declaration public PageModule UpdatePageModule(PageModule pageModule) Parameters Type Name Description PageModule pageModule Returns Type Description PageModule Implements IPageModuleRepository"
  },
  "api/Oqtane.Repository.PageRepository.html": {
    "href": "api/Oqtane.Repository.PageRepository.html",
    "title": "Class PageRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageRepository Inheritance System.Object PageRepository Implements IPageRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class PageRepository : IPageRepository Constructors PageRepository(TenantDBContext, IPermissionRepository, IPageModuleRepository) Declaration public PageRepository(TenantDBContext context, IPermissionRepository permissions, IPageModuleRepository pageModules) Parameters Type Name Description TenantDBContext context IPermissionRepository permissions IPageModuleRepository pageModules Methods AddPage(Page) Declaration public Page AddPage(Page page) Parameters Type Name Description Page page Returns Type Description Page DeletePage(Int32) Declaration public void DeletePage(int pageId) Parameters Type Name Description System.Int32 pageId GetPage(Int32) Declaration public Page GetPage(int pageId) Parameters Type Name Description System.Int32 pageId Returns Type Description Page GetPage(Int32, Boolean) Declaration public Page GetPage(int pageId, bool tracking) Parameters Type Name Description System.Int32 pageId System.Boolean tracking Returns Type Description Page GetPage(Int32, Int32) Declaration public Page GetPage(int pageId, int userId) Parameters Type Name Description System.Int32 pageId System.Int32 userId Returns Type Description Page GetPage(String, Int32) Declaration public Page GetPage(string path, int siteId) Parameters Type Name Description System.String path System.Int32 siteId Returns Type Description Page GetPages(Int32) Declaration public IEnumerable<Page> GetPages(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Page > UpdatePage(Page) Declaration public Page UpdatePage(Page page) Parameters Type Name Description Page page Returns Type Description Page Implements IPageRepository"
  },
  "api/Oqtane.Repository.PermissionRepository.html": {
    "href": "api/Oqtane.Repository.PermissionRepository.html",
    "title": "Class PermissionRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PermissionRepository Inheritance System.Object PermissionRepository Implements IPermissionRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class PermissionRepository : IPermissionRepository Constructors PermissionRepository(TenantDBContext, IRoleRepository) Declaration public PermissionRepository(TenantDBContext context, IRoleRepository roles) Parameters Type Name Description TenantDBContext context IRoleRepository roles Methods AddPermission(Permission) Declaration public Permission AddPermission(Permission permission) Parameters Type Name Description Permission permission Returns Type Description Permission DecodePermissions(String, Int32, String, Int32) Declaration public IEnumerable<Permission> DecodePermissions(string permissionStrings, int siteId, string entityName, int entityId) Parameters Type Name Description System.String permissionStrings System.Int32 siteId System.String entityName System.Int32 entityId Returns Type Description System.Collections.Generic.IEnumerable < Permission > DeletePermission(Int32) Declaration public void DeletePermission(int permissionId) Parameters Type Name Description System.Int32 permissionId DeletePermissions(Int32, String, Int32) Declaration public void DeletePermissions(int siteId, string entityName, int entityId) Parameters Type Name Description System.Int32 siteId System.String entityName System.Int32 entityId EncodePermissions(IEnumerable<Permission>) Declaration public string EncodePermissions(IEnumerable<Permission> permissionList) Parameters Type Name Description System.Collections.Generic.IEnumerable < Permission > permissionList Returns Type Description System.String GetPermission(Int32) Declaration public Permission GetPermission(int permissionId) Parameters Type Name Description System.Int32 permissionId Returns Type Description Permission GetPermissions(Int32, String) Declaration public IEnumerable<Permission> GetPermissions(int siteId, string entityName) Parameters Type Name Description System.Int32 siteId System.String entityName Returns Type Description System.Collections.Generic.IEnumerable < Permission > GetPermissions(String, Int32) Declaration public IEnumerable<Permission> GetPermissions(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.Collections.Generic.IEnumerable < Permission > GetPermissions(String, Int32, String) Declaration public IEnumerable<Permission> GetPermissions(string entityName, int entityId, string permissionName) Parameters Type Name Description System.String entityName System.Int32 entityId System.String permissionName Returns Type Description System.Collections.Generic.IEnumerable < Permission > GetPermissionString(Int32, String) Declaration public string GetPermissionString(int siteId, string entityName) Parameters Type Name Description System.Int32 siteId System.String entityName Returns Type Description System.String GetPermissionString(String, Int32) Declaration public string GetPermissionString(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.String GetPermissionString(String, Int32, String) Declaration public string GetPermissionString(string entityName, int entityId, string permissionName) Parameters Type Name Description System.String entityName System.Int32 entityId System.String permissionName Returns Type Description System.String UpdatePermission(Permission) Declaration public Permission UpdatePermission(Permission permission) Parameters Type Name Description Permission permission Returns Type Description Permission UpdatePermissions(Int32, String, Int32, String) Declaration public void UpdatePermissions(int siteId, string entityName, int entityId, string permissionStrings) Parameters Type Name Description System.Int32 siteId System.String entityName System.Int32 entityId System.String permissionStrings Implements IPermissionRepository"
  },
  "api/Oqtane.Repository.ProfileRepository.html": {
    "href": "api/Oqtane.Repository.ProfileRepository.html",
    "title": "Class ProfileRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ProfileRepository Inheritance System.Object ProfileRepository Implements IProfileRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class ProfileRepository : IProfileRepository Constructors ProfileRepository(TenantDBContext) Declaration public ProfileRepository(TenantDBContext context) Parameters Type Name Description TenantDBContext context Methods AddProfile(Profile) Declaration public Profile AddProfile(Profile profile) Parameters Type Name Description Profile profile Returns Type Description Profile DeleteProfile(Int32) Declaration public void DeleteProfile(int profileId) Parameters Type Name Description System.Int32 profileId GetProfile(Int32) Declaration public Profile GetProfile(int profileId) Parameters Type Name Description System.Int32 profileId Returns Type Description Profile GetProfile(Int32, Boolean) Declaration public Profile GetProfile(int profileId, bool tracking) Parameters Type Name Description System.Int32 profileId System.Boolean tracking Returns Type Description Profile GetProfiles(Int32) Declaration public IEnumerable<Profile> GetProfiles(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Profile > UpdateProfile(Profile) Declaration public Profile UpdateProfile(Profile profile) Parameters Type Name Description Profile profile Returns Type Description Profile Implements IProfileRepository"
  },
  "api/Oqtane.Repository.RoleRepository.html": {
    "href": "api/Oqtane.Repository.RoleRepository.html",
    "title": "Class RoleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class RoleRepository Inheritance System.Object RoleRepository Implements IRoleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class RoleRepository : IRoleRepository Constructors RoleRepository(TenantDBContext) Declaration public RoleRepository(TenantDBContext context) Parameters Type Name Description TenantDBContext context Methods AddRole(Role) Declaration public Role AddRole(Role role) Parameters Type Name Description Role role Returns Type Description Role DeleteRole(Int32) Declaration public void DeleteRole(int roleId) Parameters Type Name Description System.Int32 roleId GetRole(Int32) Declaration public Role GetRole(int roleId) Parameters Type Name Description System.Int32 roleId Returns Type Description Role GetRole(Int32, Boolean) Declaration public Role GetRole(int roleId, bool tracking) Parameters Type Name Description System.Int32 roleId System.Boolean tracking Returns Type Description Role GetRoles(Int32) Declaration public IEnumerable<Role> GetRoles(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < Role > GetRoles(Int32, Boolean) Declaration public IEnumerable<Role> GetRoles(int siteId, bool includeGlobalRoles) Parameters Type Name Description System.Int32 siteId System.Boolean includeGlobalRoles Returns Type Description System.Collections.Generic.IEnumerable < Role > UpdateRole(Role) Declaration public Role UpdateRole(Role role) Parameters Type Name Description Role role Returns Type Description Role Implements IRoleRepository"
  },
  "api/Oqtane.Repository.SettingRepository.html": {
    "href": "api/Oqtane.Repository.SettingRepository.html",
    "title": "Class SettingRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SettingRepository Inheritance System.Object SettingRepository Implements ISettingRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class SettingRepository : ISettingRepository Constructors SettingRepository(TenantDBContext, MasterDBContext, ITenantManager, IMemoryCache) Declaration public SettingRepository(TenantDBContext tenant, MasterDBContext master, ITenantManager tenantManager, IMemoryCache cache) Parameters Type Name Description TenantDBContext tenant MasterDBContext master ITenantManager tenantManager Microsoft.Extensions.Caching.Memory.IMemoryCache cache Methods AddSetting(Setting) Declaration public Setting AddSetting(Setting setting) Parameters Type Name Description Setting setting Returns Type Description Setting DeleteSetting(String, Int32) Declaration public void DeleteSetting(string entityName, int settingId) Parameters Type Name Description System.String entityName System.Int32 settingId DeleteSettings(String, Int32) Declaration public void DeleteSettings(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId GetSetting(String, Int32) Declaration public Setting GetSetting(string entityName, int settingId) Parameters Type Name Description System.String entityName System.Int32 settingId Returns Type Description Setting GetSetting(String, Int32, String) Declaration public Setting GetSetting(string entityName, int entityId, string settingName) Parameters Type Name Description System.String entityName System.Int32 entityId System.String settingName Returns Type Description Setting GetSettings(String) Declaration public IEnumerable<Setting> GetSettings(string entityName) Parameters Type Name Description System.String entityName Returns Type Description System.Collections.Generic.IEnumerable < Setting > GetSettings(String, Int32) Declaration public IEnumerable<Setting> GetSettings(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.Collections.Generic.IEnumerable < Setting > UpdateSetting(Setting) Declaration public Setting UpdateSetting(Setting setting) Parameters Type Name Description Setting setting Returns Type Description Setting Implements ISettingRepository"
  },
  "api/Oqtane.Repository.SiteRepository.html": {
    "href": "api/Oqtane.Repository.SiteRepository.html",
    "title": "Class SiteRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteRepository Inheritance System.Object SiteRepository Implements ISiteRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class SiteRepository : ISiteRepository Constructors SiteRepository(TenantDBContext, IRoleRepository, IProfileRepository, IFolderRepository, IPageRepository, IModuleRepository, IPageModuleRepository, IModuleDefinitionRepository, IServiceProvider, IConfigurationRoot) Declaration public SiteRepository(TenantDBContext context, IRoleRepository roleRepository, IProfileRepository profileRepository, IFolderRepository folderRepository, IPageRepository pageRepository, IModuleRepository moduleRepository, IPageModuleRepository pageModuleRepository, IModuleDefinitionRepository moduleDefinitionRepository, IServiceProvider serviceProvider, IConfigurationRoot config) Parameters Type Name Description TenantDBContext context IRoleRepository roleRepository IProfileRepository profileRepository IFolderRepository folderRepository IPageRepository pageRepository IModuleRepository moduleRepository IPageModuleRepository pageModuleRepository IModuleDefinitionRepository moduleDefinitionRepository System.IServiceProvider serviceProvider Microsoft.Extensions.Configuration.IConfigurationRoot config Methods AddSite(Site) Declaration public Site AddSite(Site site) Parameters Type Name Description Site site Returns Type Description Site CreatePages(Site, List<PageTemplate>) Declaration public void CreatePages(Site site, List<PageTemplate> pageTemplates) Parameters Type Name Description Site site System.Collections.Generic.List < PageTemplate > pageTemplates DeleteSite(Int32) Declaration public void DeleteSite(int siteId) Parameters Type Name Description System.Int32 siteId GetSite(Int32) Declaration public Site GetSite(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description Site GetSite(Int32, Boolean) Declaration public Site GetSite(int siteId, bool tracking) Parameters Type Name Description System.Int32 siteId System.Boolean tracking Returns Type Description Site GetSites() Declaration public IEnumerable<Site> GetSites() Returns Type Description System.Collections.Generic.IEnumerable < Site > UpdateSite(Site) Declaration public Site UpdateSite(Site site) Parameters Type Name Description Site site Returns Type Description Site Implements ISiteRepository"
  },
  "api/Oqtane.Repository.SiteTemplateRepository.html": {
    "href": "api/Oqtane.Repository.SiteTemplateRepository.html",
    "title": "Class SiteTemplateRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteTemplateRepository Inheritance System.Object SiteTemplateRepository Implements ISiteTemplateRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class SiteTemplateRepository : ISiteTemplateRepository Constructors SiteTemplateRepository(IServiceProvider) Declaration public SiteTemplateRepository(IServiceProvider serviceProvider) Parameters Type Name Description System.IServiceProvider serviceProvider Methods GetSiteTemplates() Declaration public IEnumerable<SiteTemplate> GetSiteTemplates() Returns Type Description System.Collections.Generic.IEnumerable < SiteTemplate > Implements ISiteTemplateRepository"
  },
  "api/Oqtane.Repository.SqlRepository.html": {
    "href": "api/Oqtane.Repository.SqlRepository.html",
    "title": "Class SqlRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SqlRepository Inheritance System.Object SqlRepository Implements ISqlRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class SqlRepository : ISqlRepository Methods ExecuteNonQuery(Tenant, String) Declaration public int ExecuteNonQuery(Tenant tenant, string query) Parameters Type Name Description Tenant tenant System.String query Returns Type Description System.Int32 ExecuteNonQuery(String, String, String) Declaration public int ExecuteNonQuery(string connectionString, string databaseType, string query) Parameters Type Name Description System.String connectionString System.String databaseType System.String query Returns Type Description System.Int32 ExecuteReader(Tenant, String) Declaration public IDataReader ExecuteReader(Tenant tenant, string query) Parameters Type Name Description Tenant tenant System.String query Returns Type Description System.Data.IDataReader ExecuteScript(Tenant, Assembly, String) Declaration public bool ExecuteScript(Tenant tenant, Assembly assembly, string fileName) Parameters Type Name Description Tenant tenant System.Reflection.Assembly assembly System.String fileName Returns Type Description System.Boolean ExecuteScript(Tenant, String) Declaration public void ExecuteScript(Tenant tenant, string script) Parameters Type Name Description Tenant tenant System.String script ExecuteScript(String, String, Assembly, String) Declaration public bool ExecuteScript(string connectionString, string databaseType, Assembly assembly, string fileName) Parameters Type Name Description System.String connectionString System.String databaseType System.Reflection.Assembly assembly System.String fileName Returns Type Description System.Boolean GetScriptFromAssembly(Assembly, String) Declaration public string GetScriptFromAssembly(Assembly assembly, string fileName) Parameters Type Name Description System.Reflection.Assembly assembly System.String fileName Returns Type Description System.String Implements ISqlRepository"
  },
  "api/Oqtane.Repository.TenantDBContext.html": {
    "href": "api/Oqtane.Repository.TenantDBContext.html",
    "title": "Class TenantDBContext | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class TenantDBContext Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext < Microsoft.AspNetCore.Identity.IdentityUser , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext < Microsoft.AspNetCore.Identity.IdentityUser , System.String > Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext < Microsoft.AspNetCore.Identity.IdentityUser > DBContextBase TenantDBContext Implements IMultiDatabase Inherited Members DBContextBase.ActiveDatabase DBContextBase.OnConfiguring(DbContextOptionsBuilder) DBContextBase.OnModelCreating(ModelBuilder) DBContextBase.SaveChanges() DBContextBase.SaveChangesAsync(CancellationToken) Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class TenantDBContext : DBContextBase, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable, IMultiDatabase Constructors TenantDBContext(ITenantManager, IHttpContextAccessor) Declaration public TenantDBContext(ITenantManager tenantManager, IHttpContextAccessor httpContextAccessor) Parameters Type Name Description ITenantManager tenantManager Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Properties File Declaration public virtual DbSet<File> File { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < File > Folder Declaration public virtual DbSet<Folder> Folder { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Folder > Language Declaration public virtual DbSet<Language> Language { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Language > Log Declaration public virtual DbSet<Log> Log { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Log > Module Declaration public virtual DbSet<Module> Module { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Module > Notification Declaration public virtual DbSet<Notification> Notification { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Notification > Page Declaration public virtual DbSet<Page> Page { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Page > PageModule Declaration public virtual DbSet<PageModule> PageModule { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < PageModule > Permission Declaration public virtual DbSet<Permission> Permission { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Permission > Profile Declaration public virtual DbSet<Profile> Profile { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Profile > Role Declaration public virtual DbSet<Role> Role { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Role > Setting Declaration public virtual DbSet<Setting> Setting { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Setting > Site Declaration public virtual DbSet<Site> Site { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Site > UrlMapping Declaration public virtual DbSet<UrlMapping> UrlMapping { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < UrlMapping > User Declaration public virtual DbSet<User> User { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < User > UserRole Declaration public virtual DbSet<UserRole> UserRole { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < UserRole > Visitor Declaration public virtual DbSet<Visitor> Visitor { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Visitor > Implements IMultiDatabase"
  },
  "api/Oqtane.Repository.TenantRepository.html": {
    "href": "api/Oqtane.Repository.TenantRepository.html",
    "title": "Class TenantRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class TenantRepository Inheritance System.Object TenantRepository Implements ITenantRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class TenantRepository : ITenantRepository Constructors TenantRepository(MasterDBContext, IMemoryCache) Declaration public TenantRepository(MasterDBContext context, IMemoryCache cache) Parameters Type Name Description MasterDBContext context Microsoft.Extensions.Caching.Memory.IMemoryCache cache Methods AddTenant(Tenant) Declaration public Tenant AddTenant(Tenant tenant) Parameters Type Name Description Tenant tenant Returns Type Description Tenant DeleteTenant(Int32) Declaration public void DeleteTenant(int tenantId) Parameters Type Name Description System.Int32 tenantId GetTenant(Int32) Declaration public Tenant GetTenant(int tenantId) Parameters Type Name Description System.Int32 tenantId Returns Type Description Tenant GetTenants() Declaration public IEnumerable<Tenant> GetTenants() Returns Type Description System.Collections.Generic.IEnumerable < Tenant > UpdateTenant(Tenant) Declaration public Tenant UpdateTenant(Tenant tenant) Parameters Type Name Description Tenant tenant Returns Type Description Tenant Implements ITenantRepository"
  },
  "api/Oqtane.Repository.TenantResolver.html": {
    "href": "api/Oqtane.Repository.TenantResolver.html",
    "title": "Class TenantResolver | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class TenantResolver Inheritance System.Object TenantResolver Implements ITenantResolver Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class TenantResolver : ITenantResolver Constructors TenantResolver(ITenantManager) Declaration public TenantResolver(ITenantManager tenantManager) Parameters Type Name Description ITenantManager tenantManager Methods GetAlias() Declaration public Alias GetAlias() Returns Type Description Alias GetTenant() Declaration public Tenant GetTenant() Returns Type Description Tenant Implements ITenantResolver"
  },
  "api/Oqtane.Repository.ThemeRepository.html": {
    "href": "api/Oqtane.Repository.ThemeRepository.html",
    "title": "Class ThemeRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ThemeRepository Inheritance System.Object ThemeRepository Implements IThemeRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class ThemeRepository : IThemeRepository Constructors ThemeRepository(IMemoryCache) Declaration public ThemeRepository(IMemoryCache cache) Parameters Type Name Description Microsoft.Extensions.Caching.Memory.IMemoryCache cache Methods DeleteTheme(String) Declaration public void DeleteTheme(string ThemeName) Parameters Type Name Description System.String ThemeName GetThemes() Declaration public IEnumerable<Theme> GetThemes() Returns Type Description System.Collections.Generic.IEnumerable < Theme > Implements IThemeRepository"
  },
  "api/Oqtane.Repository.UrlMappingRepository.html": {
    "href": "api/Oqtane.Repository.UrlMappingRepository.html",
    "title": "Class UrlMappingRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UrlMappingRepository Inheritance System.Object UrlMappingRepository Implements IUrlMappingRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class UrlMappingRepository : IUrlMappingRepository Constructors UrlMappingRepository(TenantDBContext, ISiteRepository) Declaration public UrlMappingRepository(TenantDBContext context, ISiteRepository sites) Parameters Type Name Description TenantDBContext context ISiteRepository sites Methods AddUrlMapping(UrlMapping) Declaration public UrlMapping AddUrlMapping(UrlMapping urlMapping) Parameters Type Name Description UrlMapping urlMapping Returns Type Description UrlMapping DeleteUrlMapping(Int32) Declaration public void DeleteUrlMapping(int urlMappingId) Parameters Type Name Description System.Int32 urlMappingId GetUrlMapping(Int32) Declaration public UrlMapping GetUrlMapping(int urlMappingId) Parameters Type Name Description System.Int32 urlMappingId Returns Type Description UrlMapping GetUrlMapping(Int32, Boolean) Declaration public UrlMapping GetUrlMapping(int urlMappingId, bool tracking) Parameters Type Name Description System.Int32 urlMappingId System.Boolean tracking Returns Type Description UrlMapping GetUrlMapping(Int32, String) Declaration public UrlMapping GetUrlMapping(int siteId, string url) Parameters Type Name Description System.Int32 siteId System.String url Returns Type Description UrlMapping GetUrlMappings(Int32, Boolean) Declaration public IEnumerable<UrlMapping> GetUrlMappings(int siteId, bool isMapped) Parameters Type Name Description System.Int32 siteId System.Boolean isMapped Returns Type Description System.Collections.Generic.IEnumerable < UrlMapping > UpdateUrlMapping(UrlMapping) Declaration public UrlMapping UpdateUrlMapping(UrlMapping urlMapping) Parameters Type Name Description UrlMapping urlMapping Returns Type Description UrlMapping Implements IUrlMappingRepository"
  },
  "api/Oqtane.Repository.UserRepository.html": {
    "href": "api/Oqtane.Repository.UserRepository.html",
    "title": "Class UserRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserRepository Inheritance System.Object UserRepository Implements IUserRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class UserRepository : IUserRepository Constructors UserRepository(TenantDBContext, IFolderRepository, IRoleRepository, IUserRoleRepository) Declaration public UserRepository(TenantDBContext context, IFolderRepository folders, IRoleRepository roles, IUserRoleRepository userroles) Parameters Type Name Description TenantDBContext context IFolderRepository folders IRoleRepository roles IUserRoleRepository userroles Methods AddUser(User) Declaration public User AddUser(User user) Parameters Type Name Description User user Returns Type Description User DeleteUser(Int32) Declaration public void DeleteUser(int userId) Parameters Type Name Description System.Int32 userId GetUser(Int32) Declaration public User GetUser(int userId) Parameters Type Name Description System.Int32 userId Returns Type Description User GetUser(Int32, Boolean) Declaration public User GetUser(int userId, bool tracking) Parameters Type Name Description System.Int32 userId System.Boolean tracking Returns Type Description User GetUser(String) Declaration public User GetUser(string username) Parameters Type Name Description System.String username Returns Type Description User GetUsers() Declaration public IEnumerable<User> GetUsers() Returns Type Description System.Collections.Generic.IEnumerable < User > UpdateUser(User) Declaration public User UpdateUser(User user) Parameters Type Name Description User user Returns Type Description User Implements IUserRepository"
  },
  "api/Oqtane.Repository.UserRoleRepository.html": {
    "href": "api/Oqtane.Repository.UserRoleRepository.html",
    "title": "Class UserRoleRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserRoleRepository Inheritance System.Object UserRoleRepository Implements IUserRoleRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class UserRoleRepository : IUserRoleRepository Constructors UserRoleRepository(TenantDBContext, IRoleRepository) Declaration public UserRoleRepository(TenantDBContext context, IRoleRepository roles) Parameters Type Name Description TenantDBContext context IRoleRepository roles Methods AddUserRole(UserRole) Declaration public UserRole AddUserRole(UserRole userRole) Parameters Type Name Description UserRole userRole Returns Type Description UserRole DeleteUserRole(Int32) Declaration public void DeleteUserRole(int userRoleId) Parameters Type Name Description System.Int32 userRoleId DeleteUserRoles(Int32) Declaration public void DeleteUserRoles(int userId) Parameters Type Name Description System.Int32 userId GetUserRole(Int32) Declaration public UserRole GetUserRole(int userRoleId) Parameters Type Name Description System.Int32 userRoleId Returns Type Description UserRole GetUserRole(Int32, Boolean) Declaration public UserRole GetUserRole(int userRoleId, bool tracking) Parameters Type Name Description System.Int32 userRoleId System.Boolean tracking Returns Type Description UserRole GetUserRoles(Int32) Declaration public IEnumerable<UserRole> GetUserRoles(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < UserRole > GetUserRoles(Int32, Int32) Declaration public IEnumerable<UserRole> GetUserRoles(int userId, int siteId) Parameters Type Name Description System.Int32 userId System.Int32 siteId Returns Type Description System.Collections.Generic.IEnumerable < UserRole > UpdateUserRole(UserRole) Declaration public UserRole UpdateUserRole(UserRole userRole) Parameters Type Name Description UserRole userRole Returns Type Description UserRole Implements IUserRoleRepository"
  },
  "api/Oqtane.Repository.VisitorRepository.html": {
    "href": "api/Oqtane.Repository.VisitorRepository.html",
    "title": "Class VisitorRepository | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class VisitorRepository Inheritance System.Object VisitorRepository Implements IVisitorRepository Namespace : Oqtane.Repository Assembly : Oqtane.Server.dll Syntax public class VisitorRepository : IVisitorRepository Constructors VisitorRepository(TenantDBContext) Declaration public VisitorRepository(TenantDBContext context) Parameters Type Name Description TenantDBContext context Methods AddVisitor(Visitor) Declaration public Visitor AddVisitor(Visitor visitor) Parameters Type Name Description Visitor visitor Returns Type Description Visitor DeleteVisitor(Int32) Declaration public void DeleteVisitor(int visitorId) Parameters Type Name Description System.Int32 visitorId DeleteVisitors(Int32, Int32) Declaration public int DeleteVisitors(int siteId, int age) Parameters Type Name Description System.Int32 siteId System.Int32 age Returns Type Description System.Int32 GetVisitor(Int32) Declaration public Visitor GetVisitor(int visitorId) Parameters Type Name Description System.Int32 visitorId Returns Type Description Visitor GetVisitor(Int32, String) Declaration public Visitor GetVisitor(int siteId, string IPAddress) Parameters Type Name Description System.Int32 siteId System.String IPAddress Returns Type Description Visitor GetVisitors(Int32, DateTime) Declaration public IEnumerable<Visitor> GetVisitors(int siteId, DateTime fromDate) Parameters Type Name Description System.Int32 siteId System.DateTime fromDate Returns Type Description System.Collections.Generic.IEnumerable < Visitor > UpdateVisitor(Visitor) Declaration public Visitor UpdateVisitor(Visitor visitor) Parameters Type Name Description Visitor visitor Returns Type Description Visitor Implements IVisitorRepository"
  },
  "api/Oqtane.Security.AutoValidateAntiforgeryTokenAttribute.html": {
    "href": "api/Oqtane.Security.AutoValidateAntiforgeryTokenAttribute.html",
    "title": "Class AutoValidateAntiforgeryTokenAttribute | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class AutoValidateAntiforgeryTokenAttribute Inheritance System.Object System.Attribute AutoValidateAntiforgeryTokenAttribute Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class AutoValidateAntiforgeryTokenAttribute : Attribute, IFilterFactory, IOrderedFilter, IFilterMetadata Properties IsReusable Declaration public bool IsReusable { get; } Property Value Type Description System.Boolean Order Declaration public int Order { get; set; } Property Value Type Description System.Int32 Methods CreateInstance(IServiceProvider) Declaration public IFilterMetadata CreateInstance(IServiceProvider serviceProvider) Parameters Type Name Description System.IServiceProvider serviceProvider Returns Type Description Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/Oqtane.Security.AutoValidateAntiforgeryTokenFilter.html": {
    "href": "api/Oqtane.Security.AutoValidateAntiforgeryTokenFilter.html",
    "title": "Class AutoValidateAntiforgeryTokenFilter | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class AutoValidateAntiforgeryTokenFilter Inheritance System.Object AutoValidateAntiforgeryTokenFilter Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public class AutoValidateAntiforgeryTokenFilter : IAsyncAuthorizationFilter, IAntiforgeryPolicy, IFilterMetadata Constructors AutoValidateAntiforgeryTokenFilter(IAntiforgery) Declaration public AutoValidateAntiforgeryTokenFilter(IAntiforgery antiforgery) Parameters Type Name Description Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery Methods OnAuthorizationAsync(AuthorizationFilterContext) Declaration public async Task OnAuthorizationAsync(AuthorizationFilterContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext context Returns Type Description System.Threading.Tasks.Task ShouldValidate(AuthorizationFilterContext) Declaration protected virtual bool ShouldValidate(AuthorizationFilterContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext context Returns Type Description System.Boolean"
  },
  "api/Oqtane.Security.ClaimsPrincipalFactory-1.html": {
    "href": "api/Oqtane.Security.ClaimsPrincipalFactory-1.html",
    "title": "Class ClaimsPrincipalFactory<TUser> | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ClaimsPrincipalFactory<TUser> Inheritance System.Object Microsoft.AspNetCore.Identity.UserClaimsPrincipalFactory <TUser> ClaimsPrincipalFactory<TUser> Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public class ClaimsPrincipalFactory<TUser> : UserClaimsPrincipalFactory<TUser>, IUserClaimsPrincipalFactory<TUser> where TUser : IdentityUser Type Parameters Name Description TUser Constructors ClaimsPrincipalFactory(UserManager<TUser>, IOptions<IdentityOptions>, ITenantManager, IUserRepository, IUserRoleRepository) Declaration public ClaimsPrincipalFactory(UserManager<TUser> userManager, IOptions<IdentityOptions> optionsAccessor, ITenantManager tenants, IUserRepository users, IUserRoleRepository userroles) Parameters Type Name Description Microsoft.AspNetCore.Identity.UserManager <TUser> userManager Microsoft.Extensions.Options.IOptions < Microsoft.AspNetCore.Identity.IdentityOptions > optionsAccessor ITenantManager tenants IUserRepository users IUserRoleRepository userroles Methods GenerateClaimsAsync(TUser) Declaration protected override async Task<ClaimsIdentity> GenerateClaimsAsync(TUser identityuser) Parameters Type Name Description TUser identityuser Returns Type Description System.Threading.Tasks.Task < System.Security.Claims.ClaimsIdentity > Overrides Microsoft.AspNetCore.Identity.UserClaimsPrincipalFactory<TUser>.GenerateClaimsAsync(TUser)"
  },
  "api/Oqtane.Security.html": {
    "href": "api/Oqtane.Security.html",
    "title": "Namespace Oqtane.Security | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Security Classes AutoValidateAntiforgeryTokenAttribute AutoValidateAntiforgeryTokenFilter ClaimsPrincipalFactory<TUser> JwtManager PermissionHandler PermissionRequirement PrincipalValidator UserPermissions UserSecurity Interfaces IJwtManager IUserPermissions"
  },
  "api/Oqtane.Security.IJwtManager.html": {
    "href": "api/Oqtane.Security.IJwtManager.html",
    "title": "Interface IJwtManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IJwtManager Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public interface IJwtManager Methods GenerateToken(Alias, ClaimsIdentity, String, String, String, Int32) Declaration string GenerateToken(Alias alias, ClaimsIdentity identity, string secret, string issuer, string audience, int lifetime) Parameters Type Name Description Alias alias System.Security.Claims.ClaimsIdentity identity System.String secret System.String issuer System.String audience System.Int32 lifetime Returns Type Description System.String ValidateToken(String, String, String, String) Declaration ClaimsIdentity ValidateToken(string token, string secret, string issuer, string audience) Parameters Type Name Description System.String token System.String secret System.String issuer System.String audience Returns Type Description System.Security.Claims.ClaimsIdentity"
  },
  "api/Oqtane.Security.IUserPermissions.html": {
    "href": "api/Oqtane.Security.IUserPermissions.html",
    "title": "Interface IUserPermissions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUserPermissions Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public interface IUserPermissions Methods GetUser() Declaration User GetUser() Returns Type Description User GetUser(ClaimsPrincipal) Declaration User GetUser(ClaimsPrincipal user) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal user Returns Type Description User IsAuthorized(ClaimsPrincipal, String, Int32, String) Declaration bool IsAuthorized(ClaimsPrincipal user, string entityName, int entityId, string permissionName) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal user System.String entityName System.Int32 entityId System.String permissionName Returns Type Description System.Boolean IsAuthorized(ClaimsPrincipal, String, String) Declaration bool IsAuthorized(ClaimsPrincipal user, string permissionName, string permissions) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal user System.String permissionName System.String permissions Returns Type Description System.Boolean"
  },
  "api/Oqtane.Security.JwtManager.html": {
    "href": "api/Oqtane.Security.JwtManager.html",
    "title": "Class JwtManager | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class JwtManager Inheritance System.Object JwtManager Implements IJwtManager Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public class JwtManager : IJwtManager Methods GenerateToken(Alias, ClaimsIdentity, String, String, String, Int32) Declaration public string GenerateToken(Alias alias, ClaimsIdentity identity, string secret, string issuer, string audience, int lifetime) Parameters Type Name Description Alias alias System.Security.Claims.ClaimsIdentity identity System.String secret System.String issuer System.String audience System.Int32 lifetime Returns Type Description System.String ValidateToken(String, String, String, String) Declaration public ClaimsIdentity ValidateToken(string token, string secret, string issuer, string audience) Parameters Type Name Description System.String token System.String secret System.String issuer System.String audience Returns Type Description System.Security.Claims.ClaimsIdentity Implements IJwtManager"
  },
  "api/Oqtane.Security.PermissionHandler.html": {
    "href": "api/Oqtane.Security.PermissionHandler.html",
    "title": "Class PermissionHandler | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PermissionHandler Inheritance System.Object Microsoft.AspNetCore.Authorization.AuthorizationHandler < PermissionRequirement > PermissionHandler Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public class PermissionHandler : AuthorizationHandler<PermissionRequirement>, IAuthorizationHandler Constructors PermissionHandler(IHttpContextAccessor, IUserPermissions, ILogManager) Declaration public PermissionHandler(IHttpContextAccessor httpContextAccessor, IUserPermissions userPermissions, ILogManager logger) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor IUserPermissions userPermissions ILogManager logger Methods HandleRequirementAsync(AuthorizationHandlerContext, PermissionRequirement) Declaration protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, PermissionRequirement requirement) Parameters Type Name Description Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context PermissionRequirement requirement Returns Type Description System.Threading.Tasks.Task Overrides Microsoft.AspNetCore.Authorization.AuthorizationHandler<Oqtane.Security.PermissionRequirement>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, Oqtane.Security.PermissionRequirement)"
  },
  "api/Oqtane.Security.PermissionRequirement.html": {
    "href": "api/Oqtane.Security.PermissionRequirement.html",
    "title": "Class PermissionRequirement | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PermissionRequirement Inheritance System.Object PermissionRequirement Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public class PermissionRequirement : IAuthorizationRequirement Constructors PermissionRequirement(String, String) Declaration public PermissionRequirement(string entityName, string permissionName) Parameters Type Name Description System.String entityName System.String permissionName Properties EntityName Declaration public string EntityName { get; } Property Value Type Description System.String PermissionName Declaration public string PermissionName { get; } Property Value Type Description System.String"
  },
  "api/Oqtane.Security.PrincipalValidator.html": {
    "href": "api/Oqtane.Security.PrincipalValidator.html",
    "title": "Class PrincipalValidator | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PrincipalValidator Inheritance System.Object PrincipalValidator Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public static class PrincipalValidator Methods ValidateAsync(CookieValidatePrincipalContext) Declaration public static Task ValidateAsync(CookieValidatePrincipalContext context) Parameters Type Name Description Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext context Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Security.UserPermissions.html": {
    "href": "api/Oqtane.Security.UserPermissions.html",
    "title": "Class UserPermissions | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserPermissions Inheritance System.Object UserPermissions Implements IUserPermissions Namespace : Oqtane.Security Assembly : Oqtane.Server.dll Syntax public class UserPermissions : IUserPermissions Constructors UserPermissions(IPermissionRepository, IHttpContextAccessor) Declaration public UserPermissions(IPermissionRepository permissions, IHttpContextAccessor accessor) Parameters Type Name Description IPermissionRepository permissions Microsoft.AspNetCore.Http.IHttpContextAccessor accessor Methods GetUser() Declaration public User GetUser() Returns Type Description User GetUser(ClaimsPrincipal) Declaration public User GetUser(ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description User IsAuthorized(ClaimsPrincipal, String, Int32, String) Declaration public bool IsAuthorized(ClaimsPrincipal principal, string entityName, int entityId, string permissionName) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal System.String entityName System.Int32 entityId System.String permissionName Returns Type Description System.Boolean IsAuthorized(ClaimsPrincipal, String, String) Declaration public bool IsAuthorized(ClaimsPrincipal principal, string permissionName, string permissions) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal System.String permissionName System.String permissions Returns Type Description System.Boolean Implements IUserPermissions"
  },
  "api/Oqtane.Security.UserSecurity.html": {
    "href": "api/Oqtane.Security.UserSecurity.html",
    "title": "Class UserSecurity | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserSecurity Inheritance System.Object UserSecurity Namespace : Oqtane.Security Assembly : Oqtane.Shared.dll Syntax public class UserSecurity Methods CreateClaimsIdentity(Alias, User) Declaration public static ClaimsIdentity CreateClaimsIdentity(Alias alias, User user) Parameters Type Name Description Alias alias User user Returns Type Description System.Security.Claims.ClaimsIdentity CreateClaimsIdentity(Alias, User, List<UserRole>) Declaration public static ClaimsIdentity CreateClaimsIdentity(Alias alias, User user, List<UserRole> userroles) Parameters Type Name Description Alias alias User user System.Collections.Generic.List < UserRole > userroles Returns Type Description System.Security.Claims.ClaimsIdentity GetPermissions(String, String) Declaration public static string GetPermissions(string permissionName, string permissionStrings) Parameters Type Name Description System.String permissionName System.String permissionStrings Returns Type Description System.String GetPermissionStrings(String) Declaration public static List<PermissionString> GetPermissionStrings(string permissionStrings) Parameters Type Name Description System.String permissionStrings Returns Type Description System.Collections.Generic.List < PermissionString > IsAuthorized(User, String) Declaration public static bool IsAuthorized(User user, string permissions) Parameters Type Name Description User user System.String permissions Returns Type Description System.Boolean IsAuthorized(User, String, String) Declaration public static bool IsAuthorized(User user, string permissionName, string permissionStrings) Parameters Type Name Description User user System.String permissionName System.String permissionStrings Returns Type Description System.Boolean SetPermissionStrings(List<PermissionString>) Declaration public static string SetPermissionStrings(List<PermissionString> permissionStrings) Parameters Type Name Description System.Collections.Generic.List < PermissionString > permissionStrings Returns Type Description System.String"
  },
  "api/Oqtane.Services.html": {
    "href": "api/Oqtane.Services.html",
    "title": "Namespace Oqtane.Services | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Services Use the Oqtane Services to retrieve or change information about the system or context. You will use this a lot. Classes RemoteServiceBase ServiceBase Interfaces IAliasService Service to retrieve and store Alias information. IClientStartup IDatabaseService Service to retrieve Database information. IFileService Service to get / create / upload / download files. IFolderService Service to get / create / modify Folder objects. IInstallationService Service to manage (install master database / upgrade version / etc.) the installation IJobLogService Service to read the job schedule log IJobService Service to manage jobs ( Job ) ILanguageService Service to manage Language entries ILocalizationService Service to retrieve localizations ( Culture ) ILogService Service to retrieve and store Log(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, String, String, LogFunction, LogLevel, Exception, String, Object[]) entries IModuleDefinitionService Service to manage a ModuleDefinition IModuleService Service to retreive and store modules ( Module ) INotificationService Service to store and retreive notifications ( Notification ) IPackageService Service to manage packages ( Package ) IPageModuleService Service to store and retreive a PageModule IPageService Services to store and retrieve a Page IProfileService Service to store and retreive Profile entries IRoleService Service to manage Role s on a Site ISettingService Service to manage Setting s ISiteService Service to store and retreive Site entries ISiteTemplateService Service to retreive SiteTemplate entries ISqlService Service to execute a SqlQuery against the backend database ISyncService Service to retrieve Sync information. ISystemService Service to retrieve and update system information. ITenantService Service to manage Tenant s on the Oqtane installation. IThemeService Service to manage Theme entries IUrlMappingService Service to manage UrlMapping s on a Site IUserRoleService Manage Role s assigned to a specific User IUserService Manage (get / update) user information IVisitorService Service to manage Visitor s on a Site"
  },
  "api/Oqtane.Services.IAliasService.html": {
    "href": "api/Oqtane.Services.IAliasService.html",
    "title": "Interface IAliasService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IAliasService Service to retrieve and store Alias information. Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IAliasService Methods AddAliasAsync(Alias) Save another Alias in the DB. It must already contain all the information incl. Tenant it belongs to. Declaration Task<Alias> AddAliasAsync(Alias alias) Parameters Type Name Description Alias alias An Alias to add. Returns Type Description System.Threading.Tasks.Task < Alias > DeleteAliasAsync(Int32) Remove an Alias from the DB. Declaration Task DeleteAliasAsync(int aliasId) Parameters Type Name Description System.Int32 aliasId The Alias ID, not to be confused with a Site ID. Returns Type Description System.Threading.Tasks.Task GetAliasAsync(Int32) Get a single alias Declaration Task<Alias> GetAliasAsync(int aliasId) Parameters Type Name Description System.Int32 aliasId The Alias ID, not to be confused with a Site ID Returns Type Description System.Threading.Tasks.Task < Alias > GetAliasesAsync() Get all aliases in the system Declaration Task<List<Alias>> GetAliasesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Alias >> UpdateAliasAsync(Alias) Update an Alias in the DB. Make sure the object is correctly filled, as it must update an existing record. Declaration Task<Alias> UpdateAliasAsync(Alias alias) Parameters Type Name Description Alias alias The Alias to update. Returns Type Description System.Threading.Tasks.Task < Alias >"
  },
  "api/Oqtane.Services.IClientStartup.html": {
    "href": "api/Oqtane.Services.IClientStartup.html",
    "title": "Interface IClientStartup | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IClientStartup Namespace : Oqtane.Services Assembly : Oqtane.Shared.dll Syntax public interface IClientStartup Methods ConfigureServices(IServiceCollection) Declaration void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/Oqtane.Services.IDatabaseService.html": {
    "href": "api/Oqtane.Services.IDatabaseService.html",
    "title": "Interface IDatabaseService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IDatabaseService Service to retrieve Database information. Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IDatabaseService Methods GetDatabasesAsync() Returns a list of databases Declaration Task<List<Database>> GetDatabasesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Database >>"
  },
  "api/Oqtane.Services.IFileService.html": {
    "href": "api/Oqtane.Services.IFileService.html",
    "title": "Interface IFileService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IFileService Service to get / create / upload / download files. Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IFileService Methods AddFileAsync(File) Add / store a File record. This does not contain the file contents. Declaration Task<File> AddFileAsync(File file) Parameters Type Name Description File file Returns Type Description System.Threading.Tasks.Task < File > DeleteFileAsync(Int32) Delete a File Declaration Task DeleteFileAsync(int fileId) Parameters Type Name Description System.Int32 fileId Returns Type Description System.Threading.Tasks.Task DownloadFileAsync(Int32) Get / download a file (the body). Declaration Task<byte[]> DownloadFileAsync(int fileId) Parameters Type Name Description System.Int32 fileId Reference to a File Returns Type Description System.Threading.Tasks.Task < System.Byte []> The bytes of the file GetFileAsync(Int32) Get one File Declaration Task<File> GetFileAsync(int fileId) Parameters Type Name Description System.Int32 fileId Returns Type Description System.Threading.Tasks.Task < File > GetFilesAsync(Int32) Get all File s in the specified Folder Declaration Task<List<File>> GetFilesAsync(int folderId) Parameters Type Name Description System.Int32 folderId The folder ID Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < File >> GetFilesAsync(Int32, String) Retrieve a list of files from a Site and Folder Declaration Task<List<File>> GetFilesAsync(int siteId, string folderPath) Parameters Type Name Description System.Int32 siteId Reference to the Site System.String folderPath Path of the folder TODO: todoc verify exactly from where the folder path must start Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < File >> GetFilesAsync(String) Get all File s in the specified folder. Declaration Task<List<File>> GetFilesAsync(string folder) Parameters Type Name Description System.String folder The folder path relative to where the files are stored. TODO: todoc verify exactly from where the folder path must start Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < File >> UpdateFileAsync(File) Update a File record. Use this for rename a file or change some attributes. This does not contain the file contents. Declaration Task<File> UpdateFileAsync(File file) Parameters Type Name Description File file Returns Type Description System.Threading.Tasks.Task < File > UploadFileAsync(String, Int32, String) Upload a file from a URL to a Folder Declaration Task<File> UploadFileAsync(string url, int folderId, string name) Parameters Type Name Description System.String url System.Int32 folderId System.String name Returns Type Description System.Threading.Tasks.Task < File > UploadFilesAsync(Int32, String[], String) Upload one or more files. Declaration Task<string> UploadFilesAsync(int folderId, string[] files, string fileUploadName) Parameters Type Name Description System.Int32 folderId Target Folder System.String [] files The files to upload, serialized as a string. System.String fileUploadName A task-identifier, to ensure communication about this upload. Returns Type Description System.Threading.Tasks.Task < System.String > UploadFilesAsync(String, String[], String) Upload one or more files. Declaration Task<string> UploadFilesAsync(string folder, string[] files, string fileUploadName) Parameters Type Name Description System.String folder Target Folder TODO: todoc verify exactly from where the folder path must start System.String [] files The files to upload, serialized as a string. System.String fileUploadName A task-identifier, to ensure communication about this upload. Returns Type Description System.Threading.Tasks.Task < System.String >"
  },
  "api/Oqtane.Services.IFolderService.html": {
    "href": "api/Oqtane.Services.IFolderService.html",
    "title": "Interface IFolderService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IFolderService Service to get / create / modify Folder objects. Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IFolderService Methods AddFolderAsync(Folder) Create one Folder using a Folder object. Declaration Task<Folder> AddFolderAsync(Folder folder) Parameters Type Name Description Folder folder Returns Type Description System.Threading.Tasks.Task < Folder > DeleteFolderAsync(Int32) Delete a Folder Declaration Task DeleteFolderAsync(int folderId) Parameters Type Name Description System.Int32 folderId Reference to a Folder Returns Type Description System.Threading.Tasks.Task GetFolderAsync(Int32) Retrieve the information of one Folder Declaration Task<Folder> GetFolderAsync(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description System.Threading.Tasks.Task < Folder > GetFolderAsync(Int32, String) Get a Folder of a Site based on the path. Declaration Task<Folder> GetFolderAsync(int siteId, string folderPath) Parameters Type Name Description System.Int32 siteId Reference to the Site System.String folderPath Path of the folder TODO: todoc verify exactly from where the folder path must start Returns Type Description System.Threading.Tasks.Task < Folder > GetFoldersAsync(Int32) Retrieve root folders of a Site Declaration Task<List<Folder>> GetFoldersAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Folder >> UpdateFolderAsync(Folder) Update the information about a Folder Use this to rename the folder etc. Declaration Task<Folder> UpdateFolderAsync(Folder folder) Parameters Type Name Description Folder folder Returns Type Description System.Threading.Tasks.Task < Folder > UpdateFolderOrderAsync(Int32, Int32, Nullable<Int32>) Update the internal Folder-Order within the list of Folders. Declaration Task UpdateFolderOrderAsync(int siteId, int folderId, int? parentId) Parameters Type Name Description System.Int32 siteId Reference to the Site System.Int32 folderId Reference to a Folder for the security check System.Nullable < System.Int32 > parentId Reference to the Parent Folder or null - this Folders children will be re-sorted. Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.IInstallationService.html": {
    "href": "api/Oqtane.Services.IInstallationService.html",
    "title": "Interface IInstallationService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IInstallationService Service to manage (install master database / upgrade version / etc.) the installation Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IInstallationService Methods Install(InstallConfig) Starts the installation process Declaration Task<Installation> Install(InstallConfig config) Parameters Type Name Description InstallConfig config connectionString, database type, alias etc. Returns Type Description System.Threading.Tasks.Task < Installation > internal status/message object IsInstalled() Returns a status/message object with the current installation state Declaration Task<Installation> IsInstalled() Returns Type Description System.Threading.Tasks.Task < Installation > RegisterAsync(String) Registers a new User Declaration Task RegisterAsync(string email) Parameters Type Name Description System.String email Email of the user to be registered Returns Type Description System.Threading.Tasks.Task RestartAsync() Restarts the installation Declaration Task RestartAsync() Returns Type Description System.Threading.Tasks.Task internal status/message object Upgrade() Starts the upgrade process Declaration Task<Installation> Upgrade() Returns Type Description System.Threading.Tasks.Task < Installation > internal status/message object"
  },
  "api/Oqtane.Services.IJobLogService.html": {
    "href": "api/Oqtane.Services.IJobLogService.html",
    "title": "Interface IJobLogService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IJobLogService Service to read the job schedule log Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IJobLogService Methods GetJobLogAsync(Int32) Return a JobLog entry for the given Id Declaration Task<JobLog> GetJobLogAsync(int jobLogId) Parameters Type Name Description System.Int32 jobLogId Returns Type Description System.Threading.Tasks.Task < JobLog > GetJobLogsAsync() Return a list of all JobLog entries Declaration Task<List<JobLog>> GetJobLogsAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < JobLog >>"
  },
  "api/Oqtane.Services.IJobService.html": {
    "href": "api/Oqtane.Services.IJobService.html",
    "title": "Interface IJobService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IJobService Service to manage jobs ( Job ) Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IJobService Methods AddJobAsync(Job) Adds a new job Declaration Task<Job> AddJobAsync(Job job) Parameters Type Name Description Job job Returns Type Description System.Threading.Tasks.Task < Job > DeleteJobAsync(Int32) Delete an existing job Declaration Task DeleteJobAsync(int jobId) Parameters Type Name Description System.Int32 jobId Returns Type Description System.Threading.Tasks.Task GetJobAsync(Int32) Return a specific job Declaration Task<Job> GetJobAsync(int jobId) Parameters Type Name Description System.Int32 jobId Returns Type Description System.Threading.Tasks.Task < Job > GetJobsAsync() Returns a list of all jobs Declaration Task<List<Job>> GetJobsAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Job >> StartJobAsync(Int32) Starts the given job Declaration Task StartJobAsync(int jobId) Parameters Type Name Description System.Int32 jobId Returns Type Description System.Threading.Tasks.Task StopJobAsync(Int32) Stops the given job Declaration Task StopJobAsync(int jobId) Parameters Type Name Description System.Int32 jobId Returns Type Description System.Threading.Tasks.Task UpdateJobAsync(Job) Updates an existing job Declaration Task<Job> UpdateJobAsync(Job job) Parameters Type Name Description Job job Returns Type Description System.Threading.Tasks.Task < Job >"
  },
  "api/Oqtane.Services.ILanguageService.html": {
    "href": "api/Oqtane.Services.ILanguageService.html",
    "title": "Interface ILanguageService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILanguageService Service to manage Language entries Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ILanguageService Methods AddLanguageAsync(Language) Adds the given language Declaration Task<Language> AddLanguageAsync(Language language) Parameters Type Name Description Language language Returns Type Description System.Threading.Tasks.Task < Language > DeleteLanguageAsync(Int32) Deletes the given language Declaration Task DeleteLanguageAsync(int languageId) Parameters Type Name Description System.Int32 languageId Returns Type Description System.Threading.Tasks.Task GetLanguageAsync(Int32) Returns the given language Declaration Task<Language> GetLanguageAsync(int languageId) Parameters Type Name Description System.Int32 languageId Returns Type Description System.Threading.Tasks.Task < Language > GetLanguagesAsync(Int32) Returns a list of all available languages for the given Site Declaration Task<List<Language>> GetLanguagesAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Language >>"
  },
  "api/Oqtane.Services.ILocalizationService.html": {
    "href": "api/Oqtane.Services.ILocalizationService.html",
    "title": "Interface ILocalizationService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILocalizationService Service to retrieve localizations ( Culture ) Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ILocalizationService Methods GetCulturesAsync() Returns a collection of supported cultures Declaration Task<IEnumerable<Culture>> GetCulturesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < Culture >>"
  },
  "api/Oqtane.Services.ILogService.html": {
    "href": "api/Oqtane.Services.ILogService.html",
    "title": "Interface ILogService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILogService Service to retrieve and store Log(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, String, String, LogFunction, LogLevel, Exception, String, Object[]) entries Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ILogService Methods GetLogAsync(Int32) Returns a specific log entry for the given id Declaration Task<Log> GetLogAsync(int logId) Parameters Type Name Description System.Int32 logId Returns Type Description System.Threading.Tasks.Task < Log > GetLogsAsync(Int32, String, String, Int32) Returns a list of log entires for the given params Declaration Task<List<Log>> GetLogsAsync(int siteId, string level, string function, int rows) Parameters Type Name Description System.Int32 siteId System.String level System.String function System.Int32 rows Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Log >> Log(Alias, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, String, String, LogFunction, LogLevel, Exception, String, Object[]) Creates a new log entry Declaration Task Log(Alias alias, int? pageId, int? moduleId, int? userId, string category, string feature, LogFunction function, LogLevel level, Exception exception, string message, params object[] args) Parameters Type Name Description Alias alias System.Nullable < System.Int32 > pageId System.Nullable < System.Int32 > moduleId System.Nullable < System.Int32 > userId System.String category System.String feature LogFunction function LogLevel level System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task Log(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, String, String, LogFunction, LogLevel, Exception, String, Object[]) Creates a new log entry Declaration Task Log(int? pageId, int? moduleId, int? userId, string category, string feature, LogFunction function, LogLevel level, Exception exception, string message, params object[] args) Parameters Type Name Description System.Nullable < System.Int32 > pageId System.Nullable < System.Int32 > moduleId System.Nullable < System.Int32 > userId System.String category System.String feature LogFunction function LogLevel level System.Exception exception System.String message System.Object [] args Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.IModuleDefinitionService.html": {
    "href": "api/Oqtane.Services.IModuleDefinitionService.html",
    "title": "Interface IModuleDefinitionService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IModuleDefinitionService Service to manage a ModuleDefinition Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IModuleDefinitionService Methods CreateModuleDefinitionAsync(ModuleDefinition) Creates a new module definition Declaration Task<ModuleDefinition> CreateModuleDefinitionAsync(ModuleDefinition moduleDefinition) Parameters Type Name Description ModuleDefinition moduleDefinition Returns Type Description System.Threading.Tasks.Task < ModuleDefinition > DeleteModuleDefinitionAsync(Int32, Int32) Deletes a module definition Declaration Task DeleteModuleDefinitionAsync(int moduleDefinitionId, int siteId) Parameters Type Name Description System.Int32 moduleDefinitionId System.Int32 siteId Returns Type Description System.Threading.Tasks.Task GetModuleDefinitionAsync(Int32, Int32) Returns a specific module definition Declaration Task<ModuleDefinition> GetModuleDefinitionAsync(int moduleDefinitionId, int siteId) Parameters Type Name Description System.Int32 moduleDefinitionId System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < ModuleDefinition > GetModuleDefinitionsAsync(Int32) Returns a list of module definitions for the given site Declaration Task<List<ModuleDefinition>> GetModuleDefinitionsAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < ModuleDefinition >> GetModuleDefinitionTemplatesAsync() Returns a list of module definition templates Declaration Task<List<Template>> GetModuleDefinitionTemplatesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Template >> InstallModuleDefinitionsAsync() Installs all module definitions located in //TODO: 2dm where? Declaration Task InstallModuleDefinitionsAsync() Returns Type Description System.Threading.Tasks.Task UpdateModuleDefinitionAsync(ModuleDefinition) Updates a existing module definition Declaration Task UpdateModuleDefinitionAsync(ModuleDefinition moduleDefinition) Parameters Type Name Description ModuleDefinition moduleDefinition Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.IModuleService.html": {
    "href": "api/Oqtane.Services.IModuleService.html",
    "title": "Interface IModuleService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IModuleService Service to retreive and store modules ( Module ) Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IModuleService Methods AddModuleAsync(Module) Adds a new module Declaration Task<Module> AddModuleAsync(Module module) Parameters Type Name Description Module module Returns Type Description System.Threading.Tasks.Task < Module > DeleteModuleAsync(Int32) Deletes a module Declaration Task DeleteModuleAsync(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description System.Threading.Tasks.Task ExportModuleAsync(Int32) Exports a given module Declaration Task<string> ExportModuleAsync(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description System.Threading.Tasks.Task < System.String > module in JSON GetModuleAsync(Int32) Returns a specific module Declaration Task<Module> GetModuleAsync(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description System.Threading.Tasks.Task < Module > GetModulesAsync(Int32) Returns a list of modules for the given site Declaration Task<List<Module>> GetModulesAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Module >> ImportModuleAsync(Int32, String) Imports a module Declaration Task<bool> ImportModuleAsync(int moduleId, string content) Parameters Type Name Description System.Int32 moduleId System.String content module in JSON format Returns Type Description System.Threading.Tasks.Task < System.Boolean > UpdateModuleAsync(Module) Updates an existing module Declaration Task<Module> UpdateModuleAsync(Module module) Parameters Type Name Description Module module Returns Type Description System.Threading.Tasks.Task < Module >"
  },
  "api/Oqtane.Services.INotificationService.html": {
    "href": "api/Oqtane.Services.INotificationService.html",
    "title": "Interface INotificationService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface INotificationService Service to store and retreive notifications ( Notification ) Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface INotificationService Methods AddNotificationAsync(Notification) Creates a new notification Declaration Task<Notification> AddNotificationAsync(Notification notification) Parameters Type Name Description Notification notification Returns Type Description System.Threading.Tasks.Task < Notification > DeleteNotificationAsync(Int32) Deletes a notification Declaration Task DeleteNotificationAsync(int notificationId) Parameters Type Name Description System.Int32 notificationId Returns Type Description System.Threading.Tasks.Task GetNotificationAsync(Int32) Returns a specific notifications Declaration Task<Notification> GetNotificationAsync(int notificationId) Parameters Type Name Description System.Int32 notificationId Returns Type Description System.Threading.Tasks.Task < Notification > GetNotificationsAsync(Int32, String, Int32) Return a list of notifications Declaration Task<List<Notification>> GetNotificationsAsync(int siteId, string direction, int userId) Parameters Type Name Description System.Int32 siteId System.String direction System.Int32 userId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Notification >> UpdateNotificationAsync(Notification) Updates a existing notification Declaration Task<Notification> UpdateNotificationAsync(Notification notification) Parameters Type Name Description Notification notification Returns Type Description System.Threading.Tasks.Task < Notification >"
  },
  "api/Oqtane.Services.IPackageService.html": {
    "href": "api/Oqtane.Services.IPackageService.html",
    "title": "Interface IPackageService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IPackageService Service to manage packages ( Package ) Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IPackageService Methods DownloadPackageAsync(String, String, String) Downloads a specific package as .nupkg file Declaration Task DownloadPackageAsync(string packageId, string version, string folder) Parameters Type Name Description System.String packageId System.String version System.String folder Returns Type Description System.Threading.Tasks.Task GetPackageAsync(String, String) Returns a specific package Declaration Task<Package> GetPackageAsync(string packageId, string version) Parameters Type Name Description System.String packageId System.String version Returns Type Description System.Threading.Tasks.Task < Package > GetPackagesAsync(String) Returns a list of packages matching the given parameters Declaration Task<List<Package>> GetPackagesAsync(string type) Parameters Type Name Description System.String type Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Package >> GetPackagesAsync(String, String, String, String) Returns a list of packages matching the given parameters Declaration Task<List<Package>> GetPackagesAsync(string type, string search, string price, string package) Parameters Type Name Description System.String type System.String search System.String price System.String package Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Package >> InstallPackagesAsync() Installs all packages located in //TODO: 2dm where? Declaration Task InstallPackagesAsync() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.IPageModuleService.html": {
    "href": "api/Oqtane.Services.IPageModuleService.html",
    "title": "Interface IPageModuleService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IPageModuleService Service to store and retreive a PageModule Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IPageModuleService Methods AddPageModuleAsync(PageModule) Creates a new page module Declaration Task<PageModule> AddPageModuleAsync(PageModule pageModule) Parameters Type Name Description PageModule pageModule Returns Type Description System.Threading.Tasks.Task < PageModule > DeletePageModuleAsync(Int32) Deletes a page module Declaration Task DeletePageModuleAsync(int pageModuleId) Parameters Type Name Description System.Int32 pageModuleId Returns Type Description System.Threading.Tasks.Task GetPageModuleAsync(Int32) Returns a specific page module Declaration Task<PageModule> GetPageModuleAsync(int pageModuleId) Parameters Type Name Description System.Int32 pageModuleId Returns Type Description System.Threading.Tasks.Task < PageModule > GetPageModuleAsync(Int32, Int32) Return a specific page module Declaration Task<PageModule> GetPageModuleAsync(int pageId, int moduleId) Parameters Type Name Description System.Int32 pageId System.Int32 moduleId Returns Type Description System.Threading.Tasks.Task < PageModule > UpdatePageModuleAsync(PageModule) Updates a existing page module Declaration Task<PageModule> UpdatePageModuleAsync(PageModule pageModule) Parameters Type Name Description PageModule pageModule Returns Type Description System.Threading.Tasks.Task < PageModule > UpdatePageModuleOrderAsync(Int32, String) Updates order of all page modules in the given pane Declaration Task UpdatePageModuleOrderAsync(int pageId, string pane) Parameters Type Name Description System.Int32 pageId System.String pane Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.IPageService.html": {
    "href": "api/Oqtane.Services.IPageService.html",
    "title": "Interface IPageService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IPageService Services to store and retrieve a Page Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IPageService Methods AddPageAsync(Page) Adds a new page Declaration Task<Page> AddPageAsync(Page page) Parameters Type Name Description Page page Returns Type Description System.Threading.Tasks.Task < Page > AddPageAsync(Int32, Int32) Adds a new page Declaration Task<Page> AddPageAsync(int pageId, int userId) Parameters Type Name Description System.Int32 pageId System.Int32 userId Returns Type Description System.Threading.Tasks.Task < Page > DeletePageAsync(Int32) Deletes a page Declaration Task DeletePageAsync(int pageId) Parameters Type Name Description System.Int32 pageId Returns Type Description System.Threading.Tasks.Task GetPageAsync(Int32) Returns a specific page Declaration Task<Page> GetPageAsync(int pageId) Parameters Type Name Description System.Int32 pageId Returns Type Description System.Threading.Tasks.Task < Page > GetPageAsync(Int32, Int32) Returns a specific page personalized for the given user Declaration Task<Page> GetPageAsync(int pageId, int userId) Parameters Type Name Description System.Int32 pageId System.Int32 userId Returns Type Description System.Threading.Tasks.Task < Page > GetPageAsync(String, Int32) Returns a specific page by its defined path Declaration Task<Page> GetPageAsync(string path, int siteId) Parameters Type Name Description System.String path System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < Page > GetPagesAsync(Int32) Retuns a list of pages Declaration Task<List<Page>> GetPagesAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Page >> UpdatePageAsync(Page) Updates a existing page Declaration Task<Page> UpdatePageAsync(Page page) Parameters Type Name Description Page page Returns Type Description System.Threading.Tasks.Task < Page > UpdatePageOrderAsync(Int32, Int32, Nullable<Int32>) Updates order of all page modules in the given parent Declaration Task UpdatePageOrderAsync(int siteId, int pageId, int? parentId) Parameters Type Name Description System.Int32 siteId System.Int32 pageId System.Nullable < System.Int32 > parentId Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.IProfileService.html": {
    "href": "api/Oqtane.Services.IProfileService.html",
    "title": "Interface IProfileService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IProfileService Service to store and retreive Profile entries Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IProfileService Methods AddProfileAsync(Profile) Creates a new profile entry Declaration Task<Profile> AddProfileAsync(Profile profile) Parameters Type Name Description Profile profile Returns Type Description System.Threading.Tasks.Task < Profile > DeleteProfileAsync(Int32) Deletes a profile entry Declaration Task DeleteProfileAsync(int profileId) Parameters Type Name Description System.Int32 profileId Returns Type Description System.Threading.Tasks.Task GetProfileAsync(Int32) Returns a specific profile entry Declaration Task<Profile> GetProfileAsync(int profileId) Parameters Type Name Description System.Int32 profileId Returns Type Description System.Threading.Tasks.Task < Profile > GetProfilesAsync(Int32) Returns a list of profile entries Declaration Task<List<Profile>> GetProfilesAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Profile >> UpdateProfileAsync(Profile) Updates an existing profile entry Declaration Task<Profile> UpdateProfileAsync(Profile profile) Parameters Type Name Description Profile profile Returns Type Description System.Threading.Tasks.Task < Profile >"
  },
  "api/Oqtane.Services.IRoleService.html": {
    "href": "api/Oqtane.Services.IRoleService.html",
    "title": "Interface IRoleService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IRoleService Service to manage Role s on a Site Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IRoleService Methods AddRoleAsync(Role) Add / save a new Role to the database. Declaration Task<Role> AddRoleAsync(Role role) Parameters Type Name Description Role role Returns Type Description System.Threading.Tasks.Task < Role > DeleteRoleAsync(Int32) Delete / mark-as-deleted a Role in the database. Declaration Task DeleteRoleAsync(int roleId) Parameters Type Name Description System.Int32 roleId ID-reference of a Role Returns Type Description System.Threading.Tasks.Task GetRoleAsync(Int32) Get one specific Role Declaration Task<Role> GetRoleAsync(int roleId) Parameters Type Name Description System.Int32 roleId ID-reference of a Role Returns Type Description System.Threading.Tasks.Task < Role > GetRolesAsync(Int32) Get all Role s of this Site . Will exclude global roles which are for all sites. To get those as well, use the overload GetRolesAsync(Int32, Boolean) Declaration Task<List<Role>> GetRolesAsync(int siteId) Parameters Type Name Description System.Int32 siteId ID-reference of a Site Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Role >> GetRolesAsync(Int32, Boolean) Get roles of the Site and optionally include global Roles. Declaration Task<List<Role>> GetRolesAsync(int siteId, bool includeGlobalRoles) Parameters Type Name Description System.Int32 siteId ID-reference to a Site System.Boolean includeGlobalRoles True if it should also include global roles. False will return the same data as just calling GetRolesAsync(Int32) Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Role >> UpdateRoleAsync(Role) Update a Role in the database. Declaration Task<Role> UpdateRoleAsync(Role role) Parameters Type Name Description Role role Returns Type Description System.Threading.Tasks.Task < Role >"
  },
  "api/Oqtane.Services.ISettingService.html": {
    "href": "api/Oqtane.Services.ISettingService.html",
    "title": "Interface ISettingService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISettingService Service to manage Setting s Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ISettingService Methods AddSettingAsync(Setting) Creates a new setting Declaration Task<Setting> AddSettingAsync(Setting setting) Parameters Type Name Description Setting setting Returns Type Description System.Threading.Tasks.Task < Setting > ClearSiteSettingsCacheAsync() Clears site option cache Declaration Task ClearSiteSettingsCacheAsync() Returns Type Description System.Threading.Tasks.Task DeleteSettingAsync(Int32) Declaration [Obsolete(\"DeleteSettingAsync(int settingId) is deprecated. Use DeleteSettingAsync(string entityName, int settingId) instead.\", false)] Task DeleteSettingAsync(int settingId) Parameters Type Name Description System.Int32 settingId Returns Type Description System.Threading.Tasks.Task DeleteSettingAsync(String, Int32) Deletes a setting Declaration Task DeleteSettingAsync(string entityName, int settingId) Parameters Type Name Description System.String entityName System.Int32 settingId Returns Type Description System.Threading.Tasks.Task GetFolderSettingsAsync(Int32) Returns a key-value dictionary of all folder settings for the given folder Declaration Task<Dictionary<string, string>> GetFolderSettingsAsync(int folderId) Parameters Type Name Description System.Int32 folderId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetHostSettingsAsync() Returns a key-value dictionary of all tenant settings Declaration Task<Dictionary<string, string>> GetHostSettingsAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetModuleDefinitionSettingsAsync(Int32) Returns a key-value dictionary of all module settings for the given module Declaration Task<Dictionary<string, string>> GetModuleDefinitionSettingsAsync(int moduleDefinitionId) Parameters Type Name Description System.Int32 moduleDefinitionId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetModuleSettingsAsync(Int32) Returns a key-value dictionary of all module settings for the given module Declaration Task<Dictionary<string, string>> GetModuleSettingsAsync(int moduleId) Parameters Type Name Description System.Int32 moduleId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetPageModuleSettingsAsync(Int32) Returns a key-value dictionary of all page module settings for the given page module Declaration Task<Dictionary<string, string>> GetPageModuleSettingsAsync(int pageModuleId) Parameters Type Name Description System.Int32 pageModuleId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetPageSettingsAsync(Int32) Returns a key-value dictionary of all page settings for the given page Declaration Task<Dictionary<string, string>> GetPageSettingsAsync(int pageId) Parameters Type Name Description System.Int32 pageId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetSetting(Dictionary<String, String>, String, String) Gets the value of the given settingName (key) from the given key-value dictionary Declaration string GetSetting(Dictionary<string, string> settings, string settingName, string defaultValue) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > settings System.String settingName System.String defaultValue Returns Type Description System.String GetSettingAsync(Int32) Declaration [Obsolete(\"GetSettingAsync(int settingId) is deprecated. Use GetSettingAsync(string entityName, int settingId) instead.\", false)] Task<Setting> GetSettingAsync(int settingId) Parameters Type Name Description System.Int32 settingId Returns Type Description System.Threading.Tasks.Task < Setting > GetSettingAsync(String, Int32) Returns a specific setting Declaration Task<Setting> GetSettingAsync(string entityName, int settingId) Parameters Type Name Description System.String entityName System.Int32 settingId Returns Type Description System.Threading.Tasks.Task < Setting > GetSettingsAsync(String, Int32) Returns a key-value dictionary of all settings for the given entityName Declaration Task<Dictionary<string, string>> GetSettingsAsync(string entityName, int entityId) Parameters Type Name Description System.String entityName System.Int32 entityId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetSiteSettingsAsync(Int32) Returns a key-value dictionary of all site settings for the given site Declaration Task<Dictionary<string, string>> GetSiteSettingsAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetTenantSettingsAsync() Returns a key-value dictionary of all tenant settings Declaration Task<Dictionary<string, string>> GetTenantSettingsAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> GetUserSettingsAsync(Int32) Returns a key-value dictionary of all user settings for the given user Declaration Task<Dictionary<string, string>> GetUserSettingsAsync(int userId) Parameters Type Name Description System.Int32 userId Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.String >> MergeSettings(Dictionary<String, String>, Dictionary<String, String>) Declaration Dictionary<string, string> MergeSettings(Dictionary<string, string> settings1, Dictionary<string, string> settings2) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > settings1 System.Collections.Generic.Dictionary < System.String , System.String > settings2 Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > SetSetting(Dictionary<String, String>, String, String) Sets the value of the given settingName (key) in the given key-value dictionary Declaration Dictionary<string, string> SetSetting(Dictionary<string, string> settings, string settingName, string settingValue) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > settings System.String settingName System.String settingValue Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > SetSetting(Dictionary<String, String>, String, String, Boolean) Declaration Dictionary<string, string> SetSetting(Dictionary<string, string> settings, string settingName, string settingValue, bool isPrivate) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > settings System.String settingName System.String settingValue System.Boolean isPrivate Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > UpdateFolderSettingsAsync(Dictionary<String, String>, Int32) Updates a folder setting Declaration Task UpdateFolderSettingsAsync(Dictionary<string, string> folderSettings, int folderId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > folderSettings System.Int32 folderId Returns Type Description System.Threading.Tasks.Task UpdateHostSettingsAsync(Dictionary<String, String>) Updates a host setting Declaration Task UpdateHostSettingsAsync(Dictionary<string, string> hostSettings) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > hostSettings Returns Type Description System.Threading.Tasks.Task UpdateModuleDefinitionSettingsAsync(Dictionary<String, String>, Int32) Updates a module setting Declaration Task UpdateModuleDefinitionSettingsAsync(Dictionary<string, string> moduleDefinitionSettings, int moduleDefinitionId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > moduleDefinitionSettings System.Int32 moduleDefinitionId Returns Type Description System.Threading.Tasks.Task UpdateModuleSettingsAsync(Dictionary<String, String>, Int32) Updates a module setting Declaration Task UpdateModuleSettingsAsync(Dictionary<string, string> moduleSettings, int moduleId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > moduleSettings System.Int32 moduleId Returns Type Description System.Threading.Tasks.Task UpdatePageModuleSettingsAsync(Dictionary<String, String>, Int32) Updates a page module setting Declaration Task UpdatePageModuleSettingsAsync(Dictionary<string, string> pageModuleSettings, int pageModuleId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > pageModuleSettings System.Int32 pageModuleId Returns Type Description System.Threading.Tasks.Task UpdatePageSettingsAsync(Dictionary<String, String>, Int32) Updates a page setting Declaration Task UpdatePageSettingsAsync(Dictionary<string, string> pageSettings, int pageId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > pageSettings System.Int32 pageId Returns Type Description System.Threading.Tasks.Task UpdateSettingAsync(Setting) Updates a existing setting Declaration Task<Setting> UpdateSettingAsync(Setting setting) Parameters Type Name Description Setting setting Returns Type Description System.Threading.Tasks.Task < Setting > UpdateSettingsAsync(Dictionary<String, String>, String, Int32) Updates settings for a given entityName and Id Declaration Task UpdateSettingsAsync(Dictionary<string, string> settings, string entityName, int entityId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > settings System.String entityName System.Int32 entityId Returns Type Description System.Threading.Tasks.Task UpdateSiteSettingsAsync(Dictionary<String, String>, Int32) Updates a site setting Declaration Task UpdateSiteSettingsAsync(Dictionary<string, string> siteSettings, int siteId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > siteSettings System.Int32 siteId Returns Type Description System.Threading.Tasks.Task UpdateTenantSettingsAsync(Dictionary<String, String>) Updates a tenant setting Declaration Task UpdateTenantSettingsAsync(Dictionary<string, string> tenantSettings) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > tenantSettings Returns Type Description System.Threading.Tasks.Task UpdateUserSettingsAsync(Dictionary<String, String>, Int32) Updates a user setting Declaration Task UpdateUserSettingsAsync(Dictionary<string, string> userSettings, int userId) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > userSettings System.Int32 userId Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.ISiteService.html": {
    "href": "api/Oqtane.Services.ISiteService.html",
    "title": "Interface ISiteService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISiteService Service to store and retreive Site entries Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ISiteService Methods AddSiteAsync(Site) Creates a new site Declaration Task<Site> AddSiteAsync(Site site) Parameters Type Name Description Site site Returns Type Description System.Threading.Tasks.Task < Site > DeleteSiteAsync(Int32) Deletes a site Declaration Task DeleteSiteAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task GetSiteAsync(Int32) Returns a specific site Declaration Task<Site> GetSiteAsync(int siteId) Parameters Type Name Description System.Int32 siteId Returns Type Description System.Threading.Tasks.Task < Site > GetSitesAsync() Returns a list of sites Declaration Task<List<Site>> GetSitesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Site >> UpdateSiteAsync(Site) Updates an existing site Declaration Task<Site> UpdateSiteAsync(Site site) Parameters Type Name Description Site site Returns Type Description System.Threading.Tasks.Task < Site >"
  },
  "api/Oqtane.Services.ISiteTemplateService.html": {
    "href": "api/Oqtane.Services.ISiteTemplateService.html",
    "title": "Interface ISiteTemplateService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISiteTemplateService Service to retreive SiteTemplate entries Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ISiteTemplateService Methods GetSiteTemplatesAsync() Returns a list of site templates Declaration Task<List<SiteTemplate>> GetSiteTemplatesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < SiteTemplate >>"
  },
  "api/Oqtane.Services.ISqlService.html": {
    "href": "api/Oqtane.Services.ISqlService.html",
    "title": "Interface ISqlService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISqlService Service to execute a SqlQuery against the backend database Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ISqlService Methods ExecuteQueryAsync(SqlQuery) Executes a sql query and returns its result Declaration Task<SqlQuery> ExecuteQueryAsync(SqlQuery sqlquery) Parameters Type Name Description SqlQuery sqlquery Returns Type Description System.Threading.Tasks.Task < SqlQuery >"
  },
  "api/Oqtane.Services.ISyncService.html": {
    "href": "api/Oqtane.Services.ISyncService.html",
    "title": "Interface ISyncService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISyncService Service to retrieve Sync information. Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ISyncService Methods GetSyncAsync(DateTime) Get sync events Declaration Task<Sync> GetSyncAsync(DateTime lastSyncDate) Parameters Type Name Description System.DateTime lastSyncDate Returns Type Description System.Threading.Tasks.Task < Sync >"
  },
  "api/Oqtane.Services.ISystemService.html": {
    "href": "api/Oqtane.Services.ISystemService.html",
    "title": "Interface ISystemService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ISystemService Service to retrieve and update system information. Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ISystemService Methods GetSystemInfoAsync() returns a key-value directory with the current system configuration information Declaration Task<Dictionary<string, object>> GetSystemInfoAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.Object >> GetSystemInfoAsync(String) returns a key-value directory with the current system information - \"environment\" or \"configuration\" Declaration Task<Dictionary<string, object>> GetSystemInfoAsync(string type) Parameters Type Name Description System.String type Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.Object >> GetSystemInfoAsync(String, Object) returns a config value Declaration Task<object> GetSystemInfoAsync(string settingKey, object defaultValue) Parameters Type Name Description System.String settingKey System.Object defaultValue Returns Type Description System.Threading.Tasks.Task < System.Object > UpdateSystemInfoAsync(Dictionary<String, Object>) Updates system information Declaration Task UpdateSystemInfoAsync(Dictionary<string, object> settings) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.Object > settings Returns Type Description System.Threading.Tasks.Task UpdateSystemInfoAsync(String, Object) updates a config value Declaration Task UpdateSystemInfoAsync(string settingKey, object settingValue) Parameters Type Name Description System.String settingKey System.Object settingValue Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.ITenantService.html": {
    "href": "api/Oqtane.Services.ITenantService.html",
    "title": "Interface ITenantService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ITenantService Service to manage Tenant s on the Oqtane installation. Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface ITenantService Methods GetTenantAsync(Int32) Get one specific Tenant Declaration Task<Tenant> GetTenantAsync(int tenantId) Parameters Type Name Description System.Int32 tenantId ID-reference of the Tenant Returns Type Description System.Threading.Tasks.Task < Tenant > GetTenantsAsync() Get all Tenant s Declaration Task<List<Tenant>> GetTenantsAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Tenant >>"
  },
  "api/Oqtane.Services.IThemeService.html": {
    "href": "api/Oqtane.Services.IThemeService.html",
    "title": "Interface IThemeService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IThemeService Service to manage Theme entries Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IThemeService Methods CreateThemeAsync(Theme) Creates a new theme Declaration Task<Theme> CreateThemeAsync(Theme theme) Parameters Type Name Description Theme theme Returns Type Description System.Threading.Tasks.Task < Theme > DeleteThemeAsync(String) Deletes a theme Declaration Task DeleteThemeAsync(string themeName) Parameters Type Name Description System.String themeName Returns Type Description System.Threading.Tasks.Task GetContainerControls(List<Theme>, String) Returns a list of containers ( ThemeControl ) from the given themes with a matching theme name Declaration List<ThemeControl> GetContainerControls(List<Theme> themes, string themeName) Parameters Type Name Description System.Collections.Generic.List < Theme > themes System.String themeName Returns Type Description System.Collections.Generic.List < ThemeControl > GetLayoutControls(List<Theme>, String) Returns a list of layouts ( ThemeControl ) from the given themes with a matching theme name Declaration List<ThemeControl> GetLayoutControls(List<Theme> themes, string themeName) Parameters Type Name Description System.Collections.Generic.List < Theme > themes System.String themeName Returns Type Description System.Collections.Generic.List < ThemeControl > GetThemeControls(List<Theme>) Returns a list of ThemeControl s from the given themes Declaration List<ThemeControl> GetThemeControls(List<Theme> themes) Parameters Type Name Description System.Collections.Generic.List < Theme > themes Returns Type Description System.Collections.Generic.List < ThemeControl > GetThemesAsync() Returns a list of available themes Declaration Task<List<Theme>> GetThemesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Theme >> GetThemeTemplatesAsync() Returns a list of theme templates ( Template ) Declaration Task<List<Template>> GetThemeTemplatesAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Template >> InstallThemesAsync() Installs all themes located in //TODO: 2dm where? Declaration Task InstallThemesAsync() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.Services.IUrlMappingService.html": {
    "href": "api/Oqtane.Services.IUrlMappingService.html",
    "title": "Interface IUrlMappingService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUrlMappingService Service to manage UrlMapping s on a Site Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IUrlMappingService Methods AddUrlMappingAsync(UrlMapping) Add / save a new UrlMapping to the database. Declaration Task<UrlMapping> AddUrlMappingAsync(UrlMapping urlMapping) Parameters Type Name Description UrlMapping urlMapping Returns Type Description System.Threading.Tasks.Task < UrlMapping > DeleteUrlMappingAsync(Int32) Delete a UrlMapping in the database. Declaration Task DeleteUrlMappingAsync(int urlMappingId) Parameters Type Name Description System.Int32 urlMappingId ID-reference of a UrlMapping Returns Type Description System.Threading.Tasks.Task GetUrlMappingAsync(Int32) Get one specific UrlMapping Declaration Task<UrlMapping> GetUrlMappingAsync(int urlMappingId) Parameters Type Name Description System.Int32 urlMappingId ID-reference of a UrlMapping Returns Type Description System.Threading.Tasks.Task < UrlMapping > GetUrlMappingAsync(Int32, String) Get one specific UrlMapping Declaration Task<UrlMapping> GetUrlMappingAsync(int siteId, string url) Parameters Type Name Description System.Int32 siteId ID-reference of a Site System.String url A url Returns Type Description System.Threading.Tasks.Task < UrlMapping > GetUrlMappingsAsync(Int32, Boolean) Get all UrlMapping s of this Site . Declaration Task<List<UrlMapping>> GetUrlMappingsAsync(int siteId, bool isMapped) Parameters Type Name Description System.Int32 siteId ID-reference of a Site System.Boolean isMapped Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UrlMapping >> UpdateUrlMappingAsync(UrlMapping) Update a UrlMapping in the database. Declaration Task<UrlMapping> UpdateUrlMappingAsync(UrlMapping urlMapping) Parameters Type Name Description UrlMapping urlMapping Returns Type Description System.Threading.Tasks.Task < UrlMapping >"
  },
  "api/Oqtane.Services.IUserRoleService.html": {
    "href": "api/Oqtane.Services.IUserRoleService.html",
    "title": "Interface IUserRoleService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUserRoleService Manage Role s assigned to a specific User Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IUserRoleService Methods AddUserRoleAsync(UserRole) Save a new UserRole Declaration Task<UserRole> AddUserRoleAsync(UserRole userRole) Parameters Type Name Description UserRole userRole Returns Type Description System.Threading.Tasks.Task < UserRole > DeleteUserRoleAsync(Int32) Delete a UserRole in the database Declaration Task DeleteUserRoleAsync(int userRoleId) Parameters Type Name Description System.Int32 userRoleId Returns Type Description System.Threading.Tasks.Task GetUserRoleAsync(Int32) Get one specific UserRole Declaration Task<UserRole> GetUserRoleAsync(int userRoleId) Parameters Type Name Description System.Int32 userRoleId ID-reference to a UserRole Returns Type Description System.Threading.Tasks.Task < UserRole > GetUserRolesAsync(Int32) Get all UserRole s on a Site Declaration Task<List<UserRole>> GetUserRolesAsync(int siteId) Parameters Type Name Description System.Int32 siteId ID-reference to a Site Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRole >> UpdateUserRoleAsync(UserRole) Update a UserRole in the database Declaration Task<UserRole> UpdateUserRoleAsync(UserRole userRole) Parameters Type Name Description UserRole userRole Returns Type Description System.Threading.Tasks.Task < UserRole >"
  },
  "api/Oqtane.Services.IUserService.html": {
    "href": "api/Oqtane.Services.IUserService.html",
    "title": "Interface IUserService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IUserService Manage (get / update) user information Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IUserService Methods AddUserAsync(User) Save a user to the Database. The User object contains all the information incl. what Site it belongs to. Declaration Task<User> AddUserAsync(User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task < User > DeleteUserAsync(Int32, Int32) Delete / remove a user in the database Declaration Task DeleteUserAsync(int userId, int siteId) Parameters Type Name Description System.Int32 userId ID-reference to the User System.Int32 siteId ID-reference to the Site Returns Type Description System.Threading.Tasks.Task ForgotPasswordAsync(User) Trigger a forgot-password e-mail for this User . Declaration Task ForgotPasswordAsync(User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task GetPersonalAccessTokenAsync() Get personal access token for current user (administrators only) Declaration Task<string> GetPersonalAccessTokenAsync() Returns Type Description System.Threading.Tasks.Task < System.String > GetTokenAsync() Get token for current user Declaration Task<string> GetTokenAsync() Returns Type Description System.Threading.Tasks.Task < System.String > GetUserAsync(Int32, Int32) Get a User of a specific site Declaration Task<User> GetUserAsync(int userId, int siteId) Parameters Type Name Description System.Int32 userId ID of a User System.Int32 siteId ID of a Site Returns Type Description System.Threading.Tasks.Task < User > GetUserAsync(String, Int32) Get a User of a specific site Declaration Task<User> GetUserAsync(string username, int siteId) Parameters Type Name Description System.String username Username / login of a User System.Int32 siteId ID of a Site Returns Type Description System.Threading.Tasks.Task < User > LinkUserAsync(User, String, String, String, String) Link an external login with a local user account Declaration Task<User> LinkUserAsync(User user, string token, string type, string key, string name) Parameters Type Name Description User user The User we're verifying System.String token A Hash value in the URL which verifies this user got the e-mail (containing this token) System.String type External Login provider type System.String key External Login provider key System.String name External Login provider display name Returns Type Description System.Threading.Tasks.Task < User > LoginUserAsync(User) Will login the specified User . Note that this will probably not be a real User, but a user object where the Username and Password have been filled. Declaration Task<User> LoginUserAsync(User user) Parameters Type Name Description User user A User object which should have at least the Username and Password set. Returns Type Description System.Threading.Tasks.Task < User > LogoutUserAsync(User) Logout a User Declaration Task LogoutUserAsync(User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task ResetPasswordAsync(User, String) Reset the password of this User Declaration Task<User> ResetPasswordAsync(User user, string token) Parameters Type Name Description User user System.String token Returns Type Description System.Threading.Tasks.Task < User > UpdateUserAsync(User) Update an existing user in the database. Declaration Task<User> UpdateUserAsync(User user) Parameters Type Name Description User user Returns Type Description System.Threading.Tasks.Task < User > ValidatePasswordAsync(String) Validate a users password against the password policy Declaration Task<bool> ValidatePasswordAsync(string password) Parameters Type Name Description System.String password Returns Type Description System.Threading.Tasks.Task < System.Boolean > VerifyEmailAsync(User, String) Update e-mail verification status of a user. Declaration Task<User> VerifyEmailAsync(User user, string token) Parameters Type Name Description User user The User we're verifying System.String token A Hash value in the URL which verifies this user got the e-mail (containing this token) Returns Type Description System.Threading.Tasks.Task < User > VerifyTwoFactorAsync(User, String) Verify the two factor verification code User Declaration Task<User> VerifyTwoFactorAsync(User user, string token) Parameters Type Name Description User user System.String token Returns Type Description System.Threading.Tasks.Task < User >"
  },
  "api/Oqtane.Services.IVisitorService.html": {
    "href": "api/Oqtane.Services.IVisitorService.html",
    "title": "Interface IVisitorService | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IVisitorService Service to manage Visitor s on a Site Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public interface IVisitorService Methods GetVisitorAsync(Int32) Get a specific Visitor of this Site . Declaration Task<Visitor> GetVisitorAsync(int visitorId) Parameters Type Name Description System.Int32 visitorId ID-reference of a Visitor Returns Type Description System.Threading.Tasks.Task < Visitor > GetVisitorsAsync(Int32, DateTime) Get all Visitor s of this Site . Declaration Task<List<Visitor>> GetVisitorsAsync(int siteId, DateTime fromDate) Parameters Type Name Description System.Int32 siteId ID-reference of a Site System.DateTime fromDate Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Visitor >>"
  },
  "api/Oqtane.Services.RemoteServiceBase.html": {
    "href": "api/Oqtane.Services.RemoteServiceBase.html",
    "title": "Class RemoteServiceBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class RemoteServiceBase Inheritance System.Object RemoteServiceBase Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public class RemoteServiceBase Constructors RemoteServiceBase(IHttpClientFactory, SiteState) Declaration protected RemoteServiceBase(IHttpClientFactory httpClientFactory, SiteState siteState) Parameters Type Name Description System.Net.Http.IHttpClientFactory httpClientFactory SiteState siteState Methods DeleteAsync(String) Declaration protected async Task DeleteAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task GetAsync(String) Declaration protected async Task GetAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task GetByteArrayAsync(String) Declaration protected async Task<byte[]> GetByteArrayAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task < System.Byte []> GetJsonAsync<T>(String) Declaration protected async Task<T> GetJsonAsync<T>(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T GetStringAsync(String) Declaration protected async Task<string> GetStringAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task < System.String > PostAsync(String) Declaration protected async Task PostAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task PostJsonAsync<T>(String, T) Declaration protected async Task<T> PostJsonAsync<T>(string uri, T value) Parameters Type Name Description System.String uri T value Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T PostJsonAsync<TValue, TResult>(String, TValue) Declaration protected async Task<TResult> PostJsonAsync<TValue, TResult>(string uri, TValue value) Parameters Type Name Description System.String uri TValue value Returns Type Description System.Threading.Tasks.Task <TResult> Type Parameters Name Description TValue TResult PutAsync(String) Declaration protected async Task PutAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task PutJsonAsync<T>(String, T) Declaration protected async Task<T> PutJsonAsync<T>(string uri, T value) Parameters Type Name Description System.String uri T value Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T PutJsonAsync<TValue, TResult>(String, TValue) Declaration protected async Task<TResult> PutJsonAsync<TValue, TResult>(string uri, TValue value) Parameters Type Name Description System.String uri TValue value Returns Type Description System.Threading.Tasks.Task <TResult> Type Parameters Name Description TValue TResult"
  },
  "api/Oqtane.Services.ServiceBase.html": {
    "href": "api/Oqtane.Services.ServiceBase.html",
    "title": "Class ServiceBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ServiceBase Inheritance System.Object ServiceBase Namespace : Oqtane.Services Assembly : Oqtane.Client.dll Syntax public class ServiceBase Constructors ServiceBase(HttpClient) Declaration protected ServiceBase(HttpClient client) Parameters Type Name Description System.Net.Http.HttpClient client ServiceBase(HttpClient, SiteState) Declaration protected ServiceBase(HttpClient httpClient, SiteState siteState) Parameters Type Name Description System.Net.Http.HttpClient httpClient SiteState siteState Properties Alias Declaration [Obsolete(\"This property of ServiceBase is deprecated. Cross tenant service calls are not supported.\", false)] public Alias Alias { get; set; } Property Value Type Description Alias Methods CreateApiUrl(Alias, String) Declaration [Obsolete(\"This method is obsolete. Use CreateApiUrl(string serviceName, Alias alias) in conjunction with ControllerRoutes.ApiRoute in Controllers instead.\", false)] public string CreateApiUrl(Alias alias, string serviceName) Parameters Type Name Description Alias alias System.String serviceName Returns Type Description System.String CreateApiUrl(String) Declaration public string CreateApiUrl(string serviceName) Parameters Type Name Description System.String serviceName Returns Type Description System.String CreateApiUrl(String, Alias) Declaration public string CreateApiUrl(string serviceName, Alias alias) Parameters Type Name Description System.String serviceName Alias alias Returns Type Description System.String CreateApiUrl(String, Alias, String) Declaration public string CreateApiUrl(string serviceName, Alias alias, string routeTemplate) Parameters Type Name Description System.String serviceName Alias alias System.String routeTemplate Returns Type Description System.String CreateAuthorizationPolicyUrl(String, Dictionary<String, Int32>) Declaration public string CreateAuthorizationPolicyUrl(string url, Dictionary<string, int> authEntityId) Parameters Type Name Description System.String url System.Collections.Generic.Dictionary < System.String , System.Int32 > authEntityId Returns Type Description System.String CreateAuthorizationPolicyUrl(String, Int32) Declaration [Obsolete(\"This method is obsolete. Use CreateAuthorizationPolicyUrl(string url, string entityName, int entityId) where entityName = EntityNames.Module instead.\", false)] public string CreateAuthorizationPolicyUrl(string url, int entityId) Parameters Type Name Description System.String url System.Int32 entityId Returns Type Description System.String CreateAuthorizationPolicyUrl(String, String, Int32) Declaration public string CreateAuthorizationPolicyUrl(string url, string entityName, int entityId) Parameters Type Name Description System.String url System.String entityName System.Int32 entityId Returns Type Description System.String DeleteAsync(String) Declaration protected async Task DeleteAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task GetAsync(String) Declaration protected async Task GetAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task GetByteArrayAsync(String) Declaration protected async Task<byte[]> GetByteArrayAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task < System.Byte []> GetJsonAsync<T>(String) Declaration protected async Task<T> GetJsonAsync<T>(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T GetStringAsync(String) Declaration protected async Task<string> GetStringAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task < System.String > PostAsync(String) Declaration protected async Task PostAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task PostJsonAsync<T>(String, T) Declaration protected async Task<T> PostJsonAsync<T>(string uri, T value) Parameters Type Name Description System.String uri T value Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T PostJsonAsync<TValue, TResult>(String, TValue) Declaration protected async Task<TResult> PostJsonAsync<TValue, TResult>(string uri, TValue value) Parameters Type Name Description System.String uri TValue value Returns Type Description System.Threading.Tasks.Task <TResult> Type Parameters Name Description TValue TResult PutAsync(String) Declaration protected async Task PutAsync(string uri) Parameters Type Name Description System.String uri Returns Type Description System.Threading.Tasks.Task PutJsonAsync<T>(String, T) Declaration protected async Task<T> PutJsonAsync<T>(string uri, T value) Parameters Type Name Description System.String uri T value Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T PutJsonAsync<TValue, TResult>(String, TValue) Declaration protected async Task<TResult> PutJsonAsync<TValue, TResult>(string uri, TValue value) Parameters Type Name Description System.String uri TValue value Returns Type Description System.Threading.Tasks.Task <TResult> Type Parameters Name Description TValue TResult"
  },
  "api/Oqtane.Shared.AuthenticationProviderTypes.html": {
    "href": "api/Oqtane.Shared.AuthenticationProviderTypes.html",
    "title": "Class AuthenticationProviderTypes | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class AuthenticationProviderTypes Inheritance System.Object AuthenticationProviderTypes Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class AuthenticationProviderTypes Fields OAuth2 Declaration public const string OAuth2 = \"oauth2\" Field Value Type Description System.String OpenIDConnect Declaration public const string OpenIDConnect = \"oidc\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.Constants.html": {
    "href": "api/Oqtane.Shared.Constants.html",
    "title": "Class Constants | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Constants Inheritance System.Object Constants Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class Constants Fields ActionToken Declaration public const string ActionToken = \"{Action}\" Field Value Type Description System.String AdminDashboardModule Declaration public const string AdminDashboardModule = \"Oqtane.Modules.Admin.Dashboard, Oqtane.Client\" Field Value Type Description System.String AdminPane Declaration [Obsolete(\"Use PaneNames.Admin\")] public const string AdminPane = \"Admin\" Field Value Type Description System.String AdminRole Declaration [Obsolete(\"Use the corresponding member from Oqtane.Shared.RoleNames\")] public const string AdminRole = \"Administrators\" Field Value Type Description System.String AllUsersRole Declaration [Obsolete(\"Use the corresponding member from Oqtane.Shared.RoleNames\")] public const string AllUsersRole = \"All Users\" Field Value Type Description System.String AntiForgeryTokenCookieName Declaration public static readonly string AntiForgeryTokenCookieName Field Value Type Description System.String AntiForgeryTokenHeaderName Declaration public static readonly string AntiForgeryTokenHeaderName Field Value Type Description System.String AuthenticationScheme Declaration public static readonly string AuthenticationScheme Field Value Type Description System.String ContainerComponent Declaration public const string ContainerComponent = \"Oqtane.UI.ContainerBuilder, Oqtane.Client\" Field Value Type Description System.String ContentUrl Declaration public const string ContentUrl = \"/api/file/download/\" Field Value Type Description System.String DefaultAction Declaration public const string DefaultAction = \"Index\" Field Value Type Description System.String DefaultAdminContainer Declaration public const string DefaultAdminContainer = \"Oqtane.Themes.AdminContainer, Oqtane.Client\" Field Value Type Description System.String DefaultContainer Declaration public const string DefaultContainer = \"Oqtane.Themes.OqtaneTheme.Container, Oqtane.Client\" Field Value Type Description System.String DefaultCulture Declaration public static readonly string DefaultCulture Field Value Type Description System.String DefaultDBType Declaration public const string DefaultDBType = \"Oqtane.Database.SqlServer.SqlServerDatabase, Oqtane.Database.SqlServer\" Field Value Type Description System.String DefaultLayout Declaration [Obsolete(\"DefaultLayout is deprecated\")] public const string DefaultLayout = \"\" Field Value Type Description System.String DefaultModuleActions Declaration public static readonly string[] DefaultModuleActions Field Value Type Description System.String [] DefaultModuleActionsTemplate Declaration public static readonly string DefaultModuleActionsTemplate Field Value Type Description System.String DefaultSite Declaration public const string DefaultSite = \"Default Site\" Field Value Type Description System.String DefaultSiteTemplate Declaration public const string DefaultSiteTemplate = \"Oqtane.SiteTemplates.DefaultSiteTemplate, Oqtane.Server\" Field Value Type Description System.String DefaultTheme Declaration public const string DefaultTheme = \"Oqtane.Themes.OqtaneTheme.Default, Oqtane.Client\" Field Value Type Description System.String DefaultVisitorFilter Declaration public static readonly string DefaultVisitorFilter Field Value Type Description System.String ErrorModule Declaration public const string ErrorModule = \"Oqtane.Modules.Admin.Error.{Action}, Oqtane.Client\" Field Value Type Description System.String HostRole Declaration [Obsolete(\"Use the corresponding member from Oqtane.Shared.RoleNames\")] public const string HostRole = \"Host Users\" Field Value Type Description System.String HostUser Declaration [Obsolete(\"Use UserNames.Host instead.\")] public const string HostUser = \"host\" Field Value Type Description System.String HttpContextAliasKey Declaration public static readonly string HttpContextAliasKey Field Value Type Description System.String HttpContextSiteSettingsKey Declaration public static readonly string HttpContextSiteSettingsKey Field Value Type Description System.String ImageFiles Declaration public const string ImageFiles = \"jpg,jpeg,jpe,gif,bmp,png,ico,webp\" Field Value Type Description System.String ImageUrl Declaration public const string ImageUrl = \"/api/file/image/\" Field Value Type Description System.String InvalidFileNameChars Declaration public static readonly char[] InvalidFileNameChars Field Value Type Description System.Char [] InvalidFileNameEndingChars Declaration public static readonly string[] InvalidFileNameEndingChars Field Value Type Description System.String [] MasterTenant Declaration [Obsolete(\"Use TenantNames.Master instead\")] public const string MasterTenant = \"Master\" Field Value Type Description System.String ModuleDelimiter Declaration public const string ModuleDelimiter = \"*\" Field Value Type Description System.String ModuleMessageComponent Declaration public const string ModuleMessageComponent = \"Oqtane.Modules.Controls.ModuleMessage, Oqtane.Client\" Field Value Type Description System.String PackageId Declaration public const string PackageId = \"Oqtane.Framework\" Field Value Type Description System.String PackageRegistryUrl Declaration public const string PackageRegistryUrl = \"https://www.oqtane.net\" Field Value Type Description System.String PackagesFolder Declaration public const string PackagesFolder = \"Packages\" Field Value Type Description System.String PageComponent Declaration public const string PageComponent = \"Oqtane.UI.ThemeBuilder, Oqtane.Client\" Field Value Type Description System.String PageManagementModule Declaration public const string PageManagementModule = \"Oqtane.Modules.Admin.Pages, Oqtane.Client\" Field Value Type Description System.String RegisteredRole Declaration [Obsolete(\"Use the corresponding member from Oqtane.Shared.RoleNames\")] public const string RegisteredRole = \"Registered Users\" Field Value Type Description System.String ReleaseVersions Declaration public const string ReleaseVersions = \"1.0.0,1.0.1,1.0.2,1.0.3,1.0.4,2.0.0,2.0.1,2.0.2,2.1.0,2.2.0,2.3.0,2.3.1,3.0.0,3.0.1,3.0.2,3.0.3,3.1.0,3.1.1\" Field Value Type Description System.String RequestVerificationToken Declaration public static readonly string RequestVerificationToken Field Value Type Description System.String ReservedDevices Declaration public const string ReservedDevices = \"CON,NUL,PRN,COM0,COM1,COM2,COM3,COM4,COM5,COM6,COM7,COM8,COM9,LPT0,LPT1,LPT2,LPT3,LPT4,LPT5,LPT6,LPT7,LPT8,LPT9,CONIN$,CONOUT$\" Field Value Type Description System.String SatelliteAssemblyExtension Declaration public static readonly string SatelliteAssemblyExtension Field Value Type Description System.String UpdaterPackageId Declaration public const string UpdaterPackageId = \"Oqtane.Updater\" Field Value Type Description System.String UploadableFiles Declaration public const string UploadableFiles = \"jpg,jpeg,jpe,gif,bmp,png,ico,webp,mov,wmv,avi,mp4,mp3,doc,docx,xls,xlsx,ppt,pptx,pdf,txt,zip,nupkg,csv,json,xml,xslt,rss,html,htm,css\" Field Value Type Description System.String UrlParametersDelimiter Declaration public const string UrlParametersDelimiter = \"!\" Field Value Type Description System.String UserFolderCapacity Declaration public const int UserFolderCapacity = 20 Field Value Type Description System.Int32 Version Declaration public static readonly string Version Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.ControllerRoutes.html": {
    "href": "api/Oqtane.Shared.ControllerRoutes.html",
    "title": "Class ControllerRoutes | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ControllerRoutes Inheritance System.Object ControllerRoutes Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class ControllerRoutes Fields ApiRoute Declaration public const string ApiRoute = \"api/[controller]\" Field Value Type Description System.String Default Declaration public const string Default = \"{alias}/api/[controller]\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.EntityNames.html": {
    "href": "api/Oqtane.Shared.EntityNames.html",
    "title": "Class EntityNames | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class EntityNames Inheritance System.Object EntityNames Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class EntityNames Fields Folder Declaration public const string Folder = \"Folder\" Field Value Type Description System.String Host Declaration public const string Host = \"Host\" Field Value Type Description System.String Module Declaration public const string Module = \"Module\" Field Value Type Description System.String ModuleDefinition Declaration public const string ModuleDefinition = \"ModuleDefinition\" Field Value Type Description System.String Page Declaration public const string Page = \"Page\" Field Value Type Description System.String PageModule Declaration public const string PageModule = \"PageModule\" Field Value Type Description System.String Site Declaration public const string Site = \"Site\" Field Value Type Description System.String Tenant Declaration public const string Tenant = \"Tenant\" Field Value Type Description System.String User Declaration public const string User = \"User\" Field Value Type Description System.String Visitor Declaration public const string Visitor = \"Visitor\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.ExternalLoginStatus.html": {
    "href": "api/Oqtane.Shared.ExternalLoginStatus.html",
    "title": "Class ExternalLoginStatus | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ExternalLoginStatus Inheritance System.Object ExternalLoginStatus Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class ExternalLoginStatus Fields AccessDenied Declaration public const string AccessDenied = \"AccessDenied\" Field Value Type Description System.String DuplicateEmail Declaration public const string DuplicateEmail = \"DuplicateEmail\" Field Value Type Description System.String InvalidEmail Declaration public const string InvalidEmail = \"InvalidEmail\" Field Value Type Description System.String ProviderKeyMismatch Declaration public const string ProviderKeyMismatch = \"ProviderKeyMismatch\" Field Value Type Description System.String RemoteFailure Declaration public const string RemoteFailure = \"RemoteFailure\" Field Value Type Description System.String Success Declaration public const string Success = \"Success\" Field Value Type Description System.String UserDoesNotExist Declaration public const string UserDoesNotExist = \"UserDoesNotExist\" Field Value Type Description System.String UserNotCreated Declaration public const string UserNotCreated = \"UserNotCreated\" Field Value Type Description System.String VerificationRequired Declaration public const string VerificationRequired = \"VerificationRequired\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.FolderTypes.html": {
    "href": "api/Oqtane.Shared.FolderTypes.html",
    "title": "Class FolderTypes | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class FolderTypes Inheritance System.Object FolderTypes Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class FolderTypes Fields Private Declaration public const string Private = \"Private\" Field Value Type Description System.String Public Declaration public const string Public = \"Public\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.html": {
    "href": "api/Oqtane.Shared.html",
    "title": "Namespace Oqtane.Shared | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Shared Classes AuthenticationProviderTypes Constants ControllerRoutes EntityNames ExternalLoginStatus FolderTypes Icons InstallConfig OqtaneIgnoreAttribute PaneNames PermissionNames PolicyNames PropertyDictionary RoleNames ServiceActivator SettingKeys SiteState TenantNames UserNames Utilities Enums LogLevel ResourceDeclaration ResourceLevel ResourceLocation ResourceType Runtime SecurityAccessLevel"
  },
  "api/Oqtane.Shared.Icons.html": {
    "href": "api/Oqtane.Shared.Icons.html",
    "title": "Class Icons | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Icons Inheritance System.Object Icons Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public static class Icons Fields AccountLogin Declaration public const string AccountLogin = \"oi oi-account-login\" Field Value Type Description System.String AccountLogout Declaration public const string AccountLogout = \"oi oi-account-logout\" Field Value Type Description System.String ActionRedo Declaration public const string ActionRedo = \"oi oi-action-redo\" Field Value Type Description System.String ActionUndo Declaration public const string ActionUndo = \"oi oi-action-undo\" Field Value Type Description System.String AlignCenter Declaration public const string AlignCenter = \"oi oi-align-center\" Field Value Type Description System.String AlignLeft Declaration public const string AlignLeft = \"oi oi-align-left\" Field Value Type Description System.String AlignRight Declaration public const string AlignRight = \"oi oi-align-right\" Field Value Type Description System.String Aperture Declaration public const string Aperture = \"oi oi-aperture\" Field Value Type Description System.String ArrowBottom Declaration public const string ArrowBottom = \"oi oi-arrow-bottom\" Field Value Type Description System.String ArrowCircleBottom Declaration public const string ArrowCircleBottom = \"oi oi-arrow-circle-bottom\" Field Value Type Description System.String ArrowCircleLeft Declaration public const string ArrowCircleLeft = \"oi oi-arrow-circle-left\" Field Value Type Description System.String ArrowCircleRight Declaration public const string ArrowCircleRight = \"oi oi-arrow-circle-right\" Field Value Type Description System.String ArrowCircleTop Declaration public const string ArrowCircleTop = \"oi oi-arrow-circle-top\" Field Value Type Description System.String ArrowLeft Declaration public const string ArrowLeft = \"oi oi-arrow-left\" Field Value Type Description System.String ArrowRight Declaration public const string ArrowRight = \"oi oi-arrow-right\" Field Value Type Description System.String ArrowThickBottom Declaration public const string ArrowThickBottom = \"oi oi-arrow-thick-bottom\" Field Value Type Description System.String ArrowThickLeft Declaration public const string ArrowThickLeft = \"oi oi-arrow-thick-left\" Field Value Type Description System.String ArrowThickRight Declaration public const string ArrowThickRight = \"oi oi-arrow-thick-right\" Field Value Type Description System.String ArrowThickTop Declaration public const string ArrowThickTop = \"oi oi-arrow-thick-top\" Field Value Type Description System.String ArrowTop Declaration public const string ArrowTop = \"oi oi-arrow-top\" Field Value Type Description System.String Audio Declaration public const string Audio = \"oi oi-audio\" Field Value Type Description System.String AudioSpectrum Declaration public const string AudioSpectrum = \"oi oi-audio-spectrum\" Field Value Type Description System.String Badge Declaration public const string Badge = \"oi oi-badge\" Field Value Type Description System.String Ban Declaration public const string Ban = \"oi oi-ban\" Field Value Type Description System.String BarChart Declaration public const string BarChart = \"oi oi-bar-chart\" Field Value Type Description System.String Basket Declaration public const string Basket = \"oi oi-basket\" Field Value Type Description System.String BatteryEmpty Declaration public const string BatteryEmpty = \"oi oi-battery-empty\" Field Value Type Description System.String BatteryFull Declaration public const string BatteryFull = \"oi oi-battery-full\" Field Value Type Description System.String Beaker Declaration public const string Beaker = \"oi oi-beaker\" Field Value Type Description System.String Bell Declaration public const string Bell = \"oi oi-bell\" Field Value Type Description System.String Bluetooth Declaration public const string Bluetooth = \"oi oi-bluetooth\" Field Value Type Description System.String Bold Declaration public const string Bold = \"oi oi-bold\" Field Value Type Description System.String Bolt Declaration public const string Bolt = \"oi oi-bolt\" Field Value Type Description System.String Book Declaration public const string Book = \"oi oi-book\" Field Value Type Description System.String Bookmark Declaration public const string Bookmark = \"oi oi-bookmark\" Field Value Type Description System.String Box Declaration public const string Box = \"oi oi-box\" Field Value Type Description System.String Briefcase Declaration public const string Briefcase = \"oi oi-briefcase\" Field Value Type Description System.String BritishPound Declaration public const string BritishPound = \"oi oi-british-pound\" Field Value Type Description System.String Browser Declaration public const string Browser = \"oi oi-browser\" Field Value Type Description System.String Brush Declaration public const string Brush = \"oi oi-brush\" Field Value Type Description System.String Bug Declaration public const string Bug = \"oi oi-bug\" Field Value Type Description System.String Bullhorn Declaration public const string Bullhorn = \"oi oi-bullhorn\" Field Value Type Description System.String Calculator Declaration public const string Calculator = \"oi oi-calculator\" Field Value Type Description System.String Calendar Declaration public const string Calendar = \"oi oi-calendar\" Field Value Type Description System.String CameraSlr Declaration public const string CameraSlr = \"oi oi-camera-slr\" Field Value Type Description System.String CaretBottom Declaration public const string CaretBottom = \"oi oi-caret-bottom\" Field Value Type Description System.String CaretLeft Declaration public const string CaretLeft = \"oi oi-caret-left\" Field Value Type Description System.String CaretRight Declaration public const string CaretRight = \"oi oi-caret-right\" Field Value Type Description System.String CaretTop Declaration public const string CaretTop = \"oi oi-caret-top\" Field Value Type Description System.String Cart Declaration public const string Cart = \"oi oi-cart\" Field Value Type Description System.String Chat Declaration public const string Chat = \"oi oi-chat\" Field Value Type Description System.String Check Declaration public const string Check = \"oi oi-check\" Field Value Type Description System.String ChevronBottom Declaration public const string ChevronBottom = \"oi oi-chevron-bottom\" Field Value Type Description System.String ChevronLeft Declaration public const string ChevronLeft = \"oi oi-chevron-left\" Field Value Type Description System.String ChevronRight Declaration public const string ChevronRight = \"oi oi-chevron-right\" Field Value Type Description System.String ChevronTop Declaration public const string ChevronTop = \"oi oi-chevron-top\" Field Value Type Description System.String CircleCheck Declaration public const string CircleCheck = \"oi oi-circle-check\" Field Value Type Description System.String CircleX Declaration public const string CircleX = \"oi oi-circle-x\" Field Value Type Description System.String Clipboard Declaration public const string Clipboard = \"oi oi-clipboard\" Field Value Type Description System.String Clock Declaration public const string Clock = \"oi oi-clock\" Field Value Type Description System.String Cloud Declaration public const string Cloud = \"oi oi-cloud\" Field Value Type Description System.String CloudDownload Declaration public const string CloudDownload = \"oi oi-cloud-download\" Field Value Type Description System.String CloudUpload Declaration public const string CloudUpload = \"oi oi-cloud-upload\" Field Value Type Description System.String Cloudy Declaration public const string Cloudy = \"oi oi-cloudy\" Field Value Type Description System.String Code Declaration public const string Code = \"oi oi-code\" Field Value Type Description System.String Cog Declaration public const string Cog = \"oi oi-cog\" Field Value Type Description System.String CollapseDown Declaration public const string CollapseDown = \"oi oi-collapse-down\" Field Value Type Description System.String CollapseLeft Declaration public const string CollapseLeft = \"oi oi-collapse-left\" Field Value Type Description System.String CollapseRight Declaration public const string CollapseRight = \"oi oi-collapse-right\" Field Value Type Description System.String CollapseUp Declaration public const string CollapseUp = \"oi oi-collapse-up\" Field Value Type Description System.String Command Declaration public const string Command = \"oi oi-command\" Field Value Type Description System.String CommentSquare Declaration public const string CommentSquare = \"oi oi-comment-square\" Field Value Type Description System.String Compass Declaration public const string Compass = \"oi oi-compass\" Field Value Type Description System.String Contrast Declaration public const string Contrast = \"oi oi-contrast\" Field Value Type Description System.String Copywriting Declaration public const string Copywriting = \"oi oi-copywriting\" Field Value Type Description System.String CreditCard Declaration public const string CreditCard = \"oi oi-credit-card\" Field Value Type Description System.String Crop Declaration public const string Crop = \"oi oi-crop\" Field Value Type Description System.String Dashboard Declaration public const string Dashboard = \"oi oi-dashboard\" Field Value Type Description System.String DataTransferDownload Declaration public const string DataTransferDownload = \"oi oi-data-transfer-download\" Field Value Type Description System.String DataTransferUpload Declaration public const string DataTransferUpload = \"oi oi-data-transfer-upload\" Field Value Type Description System.String Delete Declaration public const string Delete = \"oi oi-delete\" Field Value Type Description System.String Dial Declaration public const string Dial = \"oi oi-dial\" Field Value Type Description System.String Document Declaration public const string Document = \"oi oi-document\" Field Value Type Description System.String Dollar Declaration public const string Dollar = \"oi oi-dollar\" Field Value Type Description System.String DoubleQuoteSansLeft Declaration public const string DoubleQuoteSansLeft = \"oi oi-double-quote-sans-left\" Field Value Type Description System.String DoubleQuoteSansRight Declaration public const string DoubleQuoteSansRight = \"oi oi-double-quote-sans-right\" Field Value Type Description System.String DoubleQuoteSerifLeft Declaration public const string DoubleQuoteSerifLeft = \"oi oi-double-quote-serif-left\" Field Value Type Description System.String DoubleQuoteSerifRight Declaration public const string DoubleQuoteSerifRight = \"oi oi-double-quote-serif-right\" Field Value Type Description System.String Droplet Declaration public const string Droplet = \"oi oi-droplet\" Field Value Type Description System.String Eject Declaration public const string Eject = \"oi oi-eject\" Field Value Type Description System.String Elevator Declaration public const string Elevator = \"oi oi-elevator\" Field Value Type Description System.String Ellipses Declaration public const string Ellipses = \"oi oi-ellipses\" Field Value Type Description System.String EnvelopeClosed Declaration public const string EnvelopeClosed = \"oi oi-envelope-closed\" Field Value Type Description System.String EnvelopeOpen Declaration public const string EnvelopeOpen = \"oi oi-envelope-open\" Field Value Type Description System.String Euro Declaration public const string Euro = \"oi oi-euro\" Field Value Type Description System.String Excerpt Declaration public const string Excerpt = \"oi oi-excerpt\" Field Value Type Description System.String ExpandDown Declaration public const string ExpandDown = \"oi oi-expand-down\" Field Value Type Description System.String ExpandLeft Declaration public const string ExpandLeft = \"oi oi-expand-left\" Field Value Type Description System.String ExpandRight Declaration public const string ExpandRight = \"oi oi-expand-right\" Field Value Type Description System.String ExpandUp Declaration public const string ExpandUp = \"oi oi-expand-up\" Field Value Type Description System.String ExternalLink Declaration public const string ExternalLink = \"oi oi-external-link\" Field Value Type Description System.String Eye Declaration public const string Eye = \"oi oi-eye\" Field Value Type Description System.String Eyedropper Declaration public const string Eyedropper = \"oi oi-eyedropper\" Field Value Type Description System.String File Declaration public const string File = \"oi oi-file\" Field Value Type Description System.String Fire Declaration public const string Fire = \"oi oi-fire\" Field Value Type Description System.String Flag Declaration public const string Flag = \"oi oi-flag\" Field Value Type Description System.String Flash Declaration public const string Flash = \"oi oi-flash\" Field Value Type Description System.String Folder Declaration public const string Folder = \"oi oi-folder\" Field Value Type Description System.String Fork Declaration public const string Fork = \"oi oi-fork\" Field Value Type Description System.String FullscreenEnter Declaration public const string FullscreenEnter = \"oi oi-fullscreen-enter\" Field Value Type Description System.String FullscreenExit Declaration public const string FullscreenExit = \"oi oi-fullscreen-exit\" Field Value Type Description System.String Globe Declaration public const string Globe = \"oi oi-globe\" Field Value Type Description System.String Graph Declaration public const string Graph = \"oi oi-graph\" Field Value Type Description System.String GridFourUp Declaration public const string GridFourUp = \"oi oi-grid-four-up\" Field Value Type Description System.String GridThreeUp Declaration public const string GridThreeUp = \"oi oi-grid-three-up\" Field Value Type Description System.String GridTwoUp Declaration public const string GridTwoUp = \"oi oi-grid-two-up\" Field Value Type Description System.String HardDrive Declaration public const string HardDrive = \"oi oi-hard-drive\" Field Value Type Description System.String Header Declaration public const string Header = \"oi oi-header\" Field Value Type Description System.String Headphones Declaration public const string Headphones = \"oi oi-headphones\" Field Value Type Description System.String Heart Declaration public const string Heart = \"oi oi-heart\" Field Value Type Description System.String Home Declaration public const string Home = \"oi oi-home\" Field Value Type Description System.String Image Declaration public const string Image = \"oi oi-image\" Field Value Type Description System.String Inbox Declaration public const string Inbox = \"oi oi-inbox\" Field Value Type Description System.String Infinity Declaration public const string Infinity = \"oi oi-infinity\" Field Value Type Description System.String Info Declaration public const string Info = \"oi oi-info\" Field Value Type Description System.String Italic Declaration public const string Italic = \"oi oi-italic\" Field Value Type Description System.String JustifyCenter Declaration public const string JustifyCenter = \"oi oi-justify-center\" Field Value Type Description System.String JustifyLeft Declaration public const string JustifyLeft = \"oi oi-justify-left\" Field Value Type Description System.String JustifyRight Declaration public const string JustifyRight = \"oi oi-justify-right\" Field Value Type Description System.String Key Declaration public const string Key = \"oi oi-key\" Field Value Type Description System.String Laptop Declaration public const string Laptop = \"oi oi-laptop\" Field Value Type Description System.String Layers Declaration public const string Layers = \"oi oi-layers\" Field Value Type Description System.String Lightbulb Declaration public const string Lightbulb = \"oi oi-lightbulb\" Field Value Type Description System.String LinkBroken Declaration public const string LinkBroken = \"oi oi-link-broken\" Field Value Type Description System.String LinkIntact Declaration public const string LinkIntact = \"oi oi-link-intact\" Field Value Type Description System.String List Declaration public const string List = \"oi oi-list\" Field Value Type Description System.String ListRich Declaration public const string ListRich = \"oi oi-list-rich\" Field Value Type Description System.String Location Declaration public const string Location = \"oi oi-location\" Field Value Type Description System.String LockLocked Declaration public const string LockLocked = \"oi oi-lock-locked\" Field Value Type Description System.String LockUnlocked Declaration public const string LockUnlocked = \"oi oi-lock-unlocked\" Field Value Type Description System.String Loop Declaration public const string Loop = \"oi oi-loop\" Field Value Type Description System.String LoopCircular Declaration public const string LoopCircular = \"oi oi-loop-circular\" Field Value Type Description System.String LoopSquare Declaration public const string LoopSquare = \"oi oi-loop-square\" Field Value Type Description System.String MagnifyingGlass Declaration public const string MagnifyingGlass = \"oi oi-magnifying-glass\" Field Value Type Description System.String Map Declaration public const string Map = \"oi oi-map\" Field Value Type Description System.String MapMarker Declaration public const string MapMarker = \"oi oi-map-marker\" Field Value Type Description System.String MediaPause Declaration public const string MediaPause = \"oi oi-media-pause\" Field Value Type Description System.String MediaPlay Declaration public const string MediaPlay = \"oi oi-media-play\" Field Value Type Description System.String MediaRecord Declaration public const string MediaRecord = \"oi oi-media-record\" Field Value Type Description System.String MediaSkipBackward Declaration public const string MediaSkipBackward = \"oi oi-media-skip-backward\" Field Value Type Description System.String MediaSkipForward Declaration public const string MediaSkipForward = \"oi oi-media-skip-forward\" Field Value Type Description System.String MediaStepBackward Declaration public const string MediaStepBackward = \"oi oi-media-step-backward\" Field Value Type Description System.String MediaStepForward Declaration public const string MediaStepForward = \"oi oi-media-step-forward\" Field Value Type Description System.String MediaStop Declaration public const string MediaStop = \"oi oi-media-stop\" Field Value Type Description System.String MedicalCross Declaration public const string MedicalCross = \"oi oi-medical-cross\" Field Value Type Description System.String Menu Declaration public const string Menu = \"oi oi-menu\" Field Value Type Description System.String Microphone Declaration public const string Microphone = \"oi oi-microphone\" Field Value Type Description System.String Minus Declaration public const string Minus = \"oi oi-minus\" Field Value Type Description System.String Monitor Declaration public const string Monitor = \"oi oi-monitor\" Field Value Type Description System.String Moon Declaration public const string Moon = \"oi oi-moon\" Field Value Type Description System.String Move Declaration public const string Move = \"oi oi-move\" Field Value Type Description System.String MusicalNote Declaration public const string MusicalNote = \"oi oi-musical-note\" Field Value Type Description System.String Paperclip Declaration public const string Paperclip = \"oi oi-paperclip\" Field Value Type Description System.String Pencil Declaration public const string Pencil = \"oi oi-pencil\" Field Value Type Description System.String People Declaration public const string People = \"oi oi-people\" Field Value Type Description System.String Person Declaration public const string Person = \"oi oi-person\" Field Value Type Description System.String Phone Declaration public const string Phone = \"oi oi-phone\" Field Value Type Description System.String PieChart Declaration public const string PieChart = \"oi oi-pie-chart\" Field Value Type Description System.String Pin Declaration public const string Pin = \"oi oi-pin\" Field Value Type Description System.String PlayCircle Declaration public const string PlayCircle = \"oi oi-play-circle\" Field Value Type Description System.String Plus Declaration public const string Plus = \"oi oi-plus\" Field Value Type Description System.String PowerStandby Declaration public const string PowerStandby = \"oi oi-power-standby\" Field Value Type Description System.String Print Declaration public const string Print = \"oi oi-print\" Field Value Type Description System.String Project Declaration public const string Project = \"oi oi-project\" Field Value Type Description System.String Pulse Declaration public const string Pulse = \"oi oi-pulse\" Field Value Type Description System.String PuzzlePiece Declaration public const string PuzzlePiece = \"oi oi-puzzle-piece\" Field Value Type Description System.String QuestionMark Declaration public const string QuestionMark = \"oi oi-question-mark\" Field Value Type Description System.String Rain Declaration public const string Rain = \"oi oi-rain\" Field Value Type Description System.String Random Declaration public const string Random = \"oi oi-random\" Field Value Type Description System.String Reload Declaration public const string Reload = \"oi oi-reload\" Field Value Type Description System.String ResizeBoth Declaration public const string ResizeBoth = \"oi oi-resize-both\" Field Value Type Description System.String ResizeHeight Declaration public const string ResizeHeight = \"oi oi-resize-height\" Field Value Type Description System.String ResizeWidth Declaration public const string ResizeWidth = \"oi oi-resize-width\" Field Value Type Description System.String Rss Declaration public const string Rss = \"oi oi-rss\" Field Value Type Description System.String RssAlt Declaration public const string RssAlt = \"oi oi-rss-alt\" Field Value Type Description System.String Script Declaration public const string Script = \"oi oi-script\" Field Value Type Description System.String Share Declaration public const string Share = \"oi oi-share\" Field Value Type Description System.String ShareBoxed Declaration public const string ShareBoxed = \"oi oi-share-boxed\" Field Value Type Description System.String Shield Declaration public const string Shield = \"oi oi-shield\" Field Value Type Description System.String Signal Declaration public const string Signal = \"oi oi-signal\" Field Value Type Description System.String Signpost Declaration public const string Signpost = \"oi oi-signpost\" Field Value Type Description System.String SortAscending Declaration public const string SortAscending = \"oi oi-sort-ascending\" Field Value Type Description System.String SortDescending Declaration public const string SortDescending = \"oi oi-sort-descending\" Field Value Type Description System.String Spreadsheet Declaration public const string Spreadsheet = \"oi oi-spreadsheet\" Field Value Type Description System.String Star Declaration public const string Star = \"oi oi-star\" Field Value Type Description System.String Sun Declaration public const string Sun = \"oi oi-sun\" Field Value Type Description System.String Tablet Declaration public const string Tablet = \"oi oi-tablet\" Field Value Type Description System.String Tag Declaration public const string Tag = \"oi oi-tag\" Field Value Type Description System.String Tags Declaration public const string Tags = \"oi oi-tags\" Field Value Type Description System.String Target Declaration public const string Target = \"oi oi-target\" Field Value Type Description System.String Task Declaration public const string Task = \"oi oi-task\" Field Value Type Description System.String Terminal Declaration public const string Terminal = \"oi oi-terminal\" Field Value Type Description System.String Text Declaration public const string Text = \"oi oi-text\" Field Value Type Description System.String ThumbDown Declaration public const string ThumbDown = \"oi oi-thumb-down\" Field Value Type Description System.String ThumbUp Declaration public const string ThumbUp = \"oi oi-thumb-up\" Field Value Type Description System.String Timer Declaration public const string Timer = \"oi oi-timer\" Field Value Type Description System.String Transfer Declaration public const string Transfer = \"oi oi-transfer\" Field Value Type Description System.String Trash Declaration public const string Trash = \"oi oi-trash\" Field Value Type Description System.String Underline Declaration public const string Underline = \"oi oi-underline\" Field Value Type Description System.String VerticalAlignBottom Declaration public const string VerticalAlignBottom = \"oi oi-vertical-align-bottom\" Field Value Type Description System.String VerticalAlignCenter Declaration public const string VerticalAlignCenter = \"oi oi-vertical-align-center\" Field Value Type Description System.String VerticalAlignTop Declaration public const string VerticalAlignTop = \"oi oi-vertical-align-top\" Field Value Type Description System.String Video Declaration public const string Video = \"oi oi-video\" Field Value Type Description System.String VolumeHigh Declaration public const string VolumeHigh = \"oi oi-volume-high\" Field Value Type Description System.String VolumeLow Declaration public const string VolumeLow = \"oi oi-volume-low\" Field Value Type Description System.String VolumeOff Declaration public const string VolumeOff = \"oi oi-volume-off\" Field Value Type Description System.String Warning Declaration public const string Warning = \"oi oi-warning\" Field Value Type Description System.String Wifi Declaration public const string Wifi = \"oi oi-wifi\" Field Value Type Description System.String Wrench Declaration public const string Wrench = \"oi oi-wrench\" Field Value Type Description System.String X Declaration public const string X = \"oi oi-x\" Field Value Type Description System.String Yen Declaration public const string Yen = \"oi oi-yen\" Field Value Type Description System.String ZoomIn Declaration public const string ZoomIn = \"oi oi-zoom-in\" Field Value Type Description System.String ZoomOut Declaration public const string ZoomOut = \"oi oi-zoom-out\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.InstallConfig.html": {
    "href": "api/Oqtane.Shared.InstallConfig.html",
    "title": "Class InstallConfig | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class InstallConfig Inheritance System.Object InstallConfig Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class InstallConfig Properties Aliases Declaration public string Aliases { get; set; } Property Value Type Description System.String ConnectionString Declaration public string ConnectionString { get; set; } Property Value Type Description System.String DatabaseType Declaration public string DatabaseType { get; set; } Property Value Type Description System.String DefaultAdminContainer Declaration public string DefaultAdminContainer { get; set; } Property Value Type Description System.String DefaultContainer Declaration public string DefaultContainer { get; set; } Property Value Type Description System.String DefaultTheme Declaration public string DefaultTheme { get; set; } Property Value Type Description System.String HostEmail Declaration public string HostEmail { get; set; } Property Value Type Description System.String HostName Declaration public string HostName { get; set; } Property Value Type Description System.String HostPassword Declaration public string HostPassword { get; set; } Property Value Type Description System.String HostUsername Declaration public string HostUsername { get; set; } Property Value Type Description System.String IsNewTenant Declaration public bool IsNewTenant { get; set; } Property Value Type Description System.Boolean Register Declaration public bool Register { get; set; } Property Value Type Description System.Boolean RenderMode Declaration public string RenderMode { get; set; } Property Value Type Description System.String Runtime Declaration public string Runtime { get; set; } Property Value Type Description System.String SiteName Declaration public string SiteName { get; set; } Property Value Type Description System.String SiteTemplate Declaration public string SiteTemplate { get; set; } Property Value Type Description System.String TenantName Declaration public string TenantName { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Shared.LogLevel.html": {
    "href": "api/Oqtane.Shared.LogLevel.html",
    "title": "Enum LogLevel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum LogLevel Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public enum LogLevel Fields Name Description Critical Debug Error Information None Trace Warning"
  },
  "api/Oqtane.Shared.OqtaneIgnoreAttribute.html": {
    "href": "api/Oqtane.Shared.OqtaneIgnoreAttribute.html",
    "title": "Class OqtaneIgnoreAttribute | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class OqtaneIgnoreAttribute Inheritance System.Object System.Attribute OqtaneIgnoreAttribute Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class OqtaneIgnoreAttribute : Attribute"
  },
  "api/Oqtane.Shared.PaneNames.html": {
    "href": "api/Oqtane.Shared.PaneNames.html",
    "title": "Class PaneNames | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PaneNames Inheritance System.Object PaneNames Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class PaneNames Fields Admin Declaration public const string Admin = \"Admin\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.PermissionNames.html": {
    "href": "api/Oqtane.Shared.PermissionNames.html",
    "title": "Class PermissionNames | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PermissionNames Inheritance System.Object PermissionNames Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class PermissionNames Fields Browse Declaration public const string Browse = \"Browse\" Field Value Type Description System.String Edit Declaration public const string Edit = \"Edit\" Field Value Type Description System.String Utilize Declaration public const string Utilize = \"Utilize\" Field Value Type Description System.String View Declaration public const string View = \"View\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.PolicyNames.html": {
    "href": "api/Oqtane.Shared.PolicyNames.html",
    "title": "Class PolicyNames | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PolicyNames Inheritance System.Object PolicyNames Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class PolicyNames Fields EditFolder Declaration public const string EditFolder = \"EditFolder\" Field Value Type Description System.String EditModule Declaration public const string EditModule = \"EditModule\" Field Value Type Description System.String EditPage Declaration public const string EditPage = \"EditPage\" Field Value Type Description System.String ListFolder Declaration public const string ListFolder = \"ListFolder\" Field Value Type Description System.String ViewFolder Declaration public const string ViewFolder = \"ViewFolder\" Field Value Type Description System.String ViewModule Declaration public const string ViewModule = \"ViewModule\" Field Value Type Description System.String ViewPage Declaration public const string ViewPage = \"ViewPage\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.PropertyDictionary.html": {
    "href": "api/Oqtane.Shared.PropertyDictionary.html",
    "title": "Class PropertyDictionary | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PropertyDictionary Inheritance System.Object System.Dynamic.DynamicObject PropertyDictionary Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class PropertyDictionary : DynamicObject, IDynamicMetaObjectProvider, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable, INotifyPropertyChanged Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[String] Declaration public object this[string key] { get; set; } Parameters Type Name Description System.String key Property Value Type Description System.Object Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > Values Declaration public ICollection<object> Values { get; } Property Value Type Description System.Collections.Generic.ICollection < System.Object > Methods Add(KeyValuePair<String, Object>) Declaration public void Add(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item Add(String, Object) Declaration public void Add(string key, object value) Parameters Type Name Description System.String key System.Object value Clear() Declaration public void Clear() Contains(KeyValuePair<String, Object>) Declaration public bool Contains(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item Returns Type Description System.Boolean ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean CopyTo(KeyValuePair<String, Object>[], Int32) Declaration public void CopyTo(KeyValuePair<string, object>[] array, int arrayIndex) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object >[] array System.Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, object>> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < System.Collections.Generic.KeyValuePair < System.String , System.Object >> OnPropertyChanged(String) Declaration protected virtual void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Remove(KeyValuePair<String, Object>) Declaration public bool Remove(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item Returns Type Description System.Boolean Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean TryGetMember(GetMemberBinder, out Object) Declaration public override bool TryGetMember(GetMemberBinder binder, out object result) Parameters Type Name Description System.Dynamic.GetMemberBinder binder System.Object result Returns Type Description System.Boolean Overrides System.Dynamic.DynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, System.Object) TryGetValue(String, out Object) Declaration public bool TryGetValue(string key, out object value) Parameters Type Name Description System.String key System.Object value Returns Type Description System.Boolean TrySetMember(SetMemberBinder, Object) Declaration public override bool TrySetMember(SetMemberBinder binder, object value) Parameters Type Name Description System.Dynamic.SetMemberBinder binder System.Object value Returns Type Description System.Boolean Overrides System.Dynamic.DynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, System.Object) Events PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/Oqtane.Shared.ResourceDeclaration.html": {
    "href": "api/Oqtane.Shared.ResourceDeclaration.html",
    "title": "Enum ResourceDeclaration | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum ResourceDeclaration Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax [Obsolete(\"ResourceDeclaration is deprecated\", false)] public enum ResourceDeclaration Fields Name Description Global Local"
  },
  "api/Oqtane.Shared.ResourceLevel.html": {
    "href": "api/Oqtane.Shared.ResourceLevel.html",
    "title": "Enum ResourceLevel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum ResourceLevel Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public enum ResourceLevel Fields Name Description App Module Page"
  },
  "api/Oqtane.Shared.ResourceLocation.html": {
    "href": "api/Oqtane.Shared.ResourceLocation.html",
    "title": "Enum ResourceLocation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum ResourceLocation Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public enum ResourceLocation Fields Name Description Body Head"
  },
  "api/Oqtane.Shared.ResourceType.html": {
    "href": "api/Oqtane.Shared.ResourceType.html",
    "title": "Enum ResourceType | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum ResourceType Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public enum ResourceType Fields Name Description Script Stylesheet"
  },
  "api/Oqtane.Shared.RoleNames.html": {
    "href": "api/Oqtane.Shared.RoleNames.html",
    "title": "Class RoleNames | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class RoleNames Inheritance System.Object RoleNames Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class RoleNames Fields Admin Declaration public const string Admin = \"Administrators\" Field Value Type Description System.String Everyone Declaration public const string Everyone = \"All Users\" Field Value Type Description System.String Host Declaration public const string Host = \"Host Users\" Field Value Type Description System.String Registered Declaration public const string Registered = \"Registered Users\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.Runtime.html": {
    "href": "api/Oqtane.Shared.Runtime.html",
    "title": "Enum Runtime | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum Runtime Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public enum Runtime Fields Name Description Server WebAssembly"
  },
  "api/Oqtane.Shared.SecurityAccessLevel.html": {
    "href": "api/Oqtane.Shared.SecurityAccessLevel.html",
    "title": "Enum SecurityAccessLevel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum SecurityAccessLevel Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public enum SecurityAccessLevel Fields Name Description Admin Anonymous Edit Host View"
  },
  "api/Oqtane.Shared.ServiceActivator.html": {
    "href": "api/Oqtane.Shared.ServiceActivator.html",
    "title": "Class ServiceActivator | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ServiceActivator Inheritance System.Object ServiceActivator Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public static class ServiceActivator Methods Configure(IServiceProvider) Declaration public static void Configure(IServiceProvider serviceProvider) Parameters Type Name Description System.IServiceProvider serviceProvider GetScope(IServiceProvider) Declaration public static IServiceScope GetScope(IServiceProvider serviceProvider = null) Parameters Type Name Description System.IServiceProvider serviceProvider Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope"
  },
  "api/Oqtane.Shared.SettingKeys.html": {
    "href": "api/Oqtane.Shared.SettingKeys.html",
    "title": "Class SettingKeys | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SettingKeys Inheritance System.Object SettingKeys Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public static class SettingKeys Fields AvailableDatabasesSection Declaration public const string AvailableDatabasesSection = \"AvailableDatabases\" Field Value Type Description System.String ConnectionStringKey Declaration public const string ConnectionStringKey = \"DefaultConnection\" Field Value Type Description System.String ConnectionStringsSection Declaration public const string ConnectionStringsSection = \"ConnectionStrings\" Field Value Type Description System.String DatabaseSection Declaration public const string DatabaseSection = \"Database\" Field Value Type Description System.String DatabaseTypeKey Declaration public const string DatabaseTypeKey = \"DefaultDBType\" Field Value Type Description System.String DefaultAliasKey Declaration public const string DefaultAliasKey = \"DefaultAlias\" Field Value Type Description System.String DefaultContainerKey Declaration public const string DefaultContainerKey = \"DefaultContainer\" Field Value Type Description System.String DefaultThemeKey Declaration public const string DefaultThemeKey = \"DefaultTheme\" Field Value Type Description System.String HostEmailKey Declaration public const string HostEmailKey = \"HostEmail\" Field Value Type Description System.String HostNameKey Declaration public const string HostNameKey = \"HostName\" Field Value Type Description System.String HostPasswordKey Declaration public const string HostPasswordKey = \"HostPassword\" Field Value Type Description System.String HostUsernameKey Declaration public const string HostUsernameKey = \"HostUsername\" Field Value Type Description System.String InstallationSection Declaration public const string InstallationSection = \"Installation\" Field Value Type Description System.String SiteTemplateKey Declaration public const string SiteTemplateKey = \"SiteTemplate\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.SiteState.html": {
    "href": "api/Oqtane.Shared.SiteState.html",
    "title": "Class SiteState | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SiteState Inheritance System.Object SiteState Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class SiteState Properties Alias Declaration public Alias Alias { get; set; } Property Value Type Description Alias AntiForgeryToken Declaration public string AntiForgeryToken { get; set; } Property Value Type Description System.String AuthorizationToken Declaration public string AuthorizationToken { get; set; } Property Value Type Description System.String Properties Declaration public dynamic Properties { get; } Property Value Type Description System.Object RemoteIPAddress Declaration public string RemoteIPAddress { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Shared.TenantNames.html": {
    "href": "api/Oqtane.Shared.TenantNames.html",
    "title": "Class TenantNames | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class TenantNames Inheritance System.Object TenantNames Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class TenantNames Fields Master Declaration public const string Master = \"Master\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.UserNames.html": {
    "href": "api/Oqtane.Shared.UserNames.html",
    "title": "Class UserNames | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class UserNames Inheritance System.Object UserNames Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public class UserNames Fields Host Declaration public const string Host = \"host\" Field Value Type Description System.String"
  },
  "api/Oqtane.Shared.Utilities.html": {
    "href": "api/Oqtane.Shared.Utilities.html",
    "title": "Class Utilities | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Utilities Inheritance System.Object Utilities Namespace : Oqtane.Shared Assembly : Oqtane.Shared.dll Syntax public static class Utilities Methods ContentUrl(Alias, Int32) Declaration public static string ContentUrl(Alias alias, int fileId) Parameters Type Name Description Alias alias System.Int32 fileId Returns Type Description System.String ContentUrl(Alias, Int32, Boolean) Declaration public static string ContentUrl(Alias alias, int fileId, bool asAttachment) Parameters Type Name Description Alias alias System.Int32 fileId System.Boolean asAttachment Returns Type Description System.String EditUrl(String, String, Int32, String, String) Declaration public static string EditUrl(string alias, string path, int moduleid, string action, string parameters) Parameters Type Name Description System.String alias System.String path System.Int32 moduleid System.String action System.String parameters Returns Type Description System.String FormatContent(String, Alias, String) Declaration public static string FormatContent(string content, Alias alias, string operation) Parameters Type Name Description System.String content Alias alias System.String operation Returns Type Description System.String GetAssemblyName(String) Declaration public static string GetAssemblyName(string fullyqualifiedtypename) Parameters Type Name Description System.String fullyqualifiedtypename Returns Type Description System.String GetFriendlyUrl(String) Declaration public static string GetFriendlyUrl(string text) Parameters Type Name Description System.String text Returns Type Description System.String GetFullTypeName(String) Declaration public static string GetFullTypeName(string fullyqualifiedtypename) Parameters Type Name Description System.String fullyqualifiedtypename Returns Type Description System.String GetTypeName(String) Declaration public static string GetTypeName(string fullyqualifiedtypename) Parameters Type Name Description System.String fullyqualifiedtypename Returns Type Description System.String GetTypeNameLastSegment(String, Int32) Declaration public static string GetTypeNameLastSegment(string typename, int segment) Parameters Type Name Description System.String typename System.Int32 segment Returns Type Description System.String ImageUrl(Alias, Int32, Int32, Int32, String) Declaration public static string ImageUrl(Alias alias, int fileId, int width, int height, string mode) Parameters Type Name Description Alias alias System.Int32 fileId System.Int32 width System.Int32 height System.String mode Returns Type Description System.String ImageUrl(Alias, Int32, Int32, Int32, String, String, String, Int32, Boolean) Declaration public static string ImageUrl(Alias alias, int fileId, int width, int height, string mode, string position, string background, int rotate, bool recreate) Parameters Type Name Description Alias alias System.Int32 fileId System.Int32 width System.Int32 height System.String mode System.String position System.String background System.Int32 rotate System.Boolean recreate Returns Type Description System.String IsFileValid(File) Declaration public static bool IsFileValid(this File file) Parameters Type Name Description File file Returns Type Description System.Boolean IsPathOrFileValid(String) Declaration public static bool IsPathOrFileValid(this string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean IsPathValid(Folder) Declaration public static bool IsPathValid(this Folder folder) Parameters Type Name Description Folder folder Returns Type Description System.Boolean IsValidEmail(String) Declaration public static bool IsValidEmail(string email) Parameters Type Name Description System.String email Returns Type Description System.Boolean LogMessage(Object, String) Declaration public static string LogMessage(object class, string message) Parameters Type Name Description System.Object class System.String message Returns Type Description System.String NavigateUrl(String, String, String) Declaration public static string NavigateUrl(string alias, string path, string parameters) Parameters Type Name Description System.String alias System.String path System.String parameters Returns Type Description System.String ParseParameters(String) Declaration public static (string UrlParameters, string Querystring, string Anchor) ParseParameters(string parameters) Parameters Type Name Description System.String parameters Returns Type Description System.ValueTuple < System.String , System.String , System.String > ParseQueryString(String) Declaration public static Dictionary<string, string> ParseQueryString(string query) Parameters Type Name Description System.String query Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > PathCombine(String[]) Declaration public static string PathCombine(params string[] segments) Parameters Type Name Description System.String [] segments Returns Type Description System.String TenantUrl(Alias, String) Declaration public static string TenantUrl(Alias alias, string url) Parameters Type Name Description Alias alias System.String url Returns Type Description System.String ToModuleDefinitionName(Type) Declaration public static string ToModuleDefinitionName(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String TryGetQueryValue(Uri, String, out String, String) Declaration public static bool TryGetQueryValue(this Uri uri, string key, out string value, string defaultValue = null) Parameters Type Name Description System.Uri uri System.String key System.String value System.String defaultValue Returns Type Description System.Boolean TryGetQueryValueInt(Uri, String, out Int32, Int32) Declaration public static bool TryGetQueryValueInt(this Uri uri, string key, out int value, int defaultValue = 0) Parameters Type Name Description System.Uri uri System.String key System.Int32 value System.Int32 defaultValue Returns Type Description System.Boolean UrlCombine(String[]) Declaration public static string UrlCombine(params string[] segments) Parameters Type Name Description System.String [] segments Returns Type Description System.String"
  },
  "api/Oqtane.SharedResources.html": {
    "href": "api/Oqtane.SharedResources.html",
    "title": "Class SharedResources | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class SharedResources Dummy class used to collect shared resource strings for this application Inheritance System.Object SharedResources Namespace : Oqtane Assembly : Oqtane.Client.dll Syntax public class SharedResources Remarks This class is mostly used with IStringLocalizer and IHtmlLocalizer interfaces. The class must reside at the project root."
  },
  "api/Oqtane.Startup.html": {
    "href": "api/Oqtane.Startup.html",
    "title": "Class Startup | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Startup Inheritance System.Object Startup Namespace : Oqtane Assembly : Oqtane.Server.dll Syntax public class Startup Constructors Startup(IWebHostEnvironment, ILocalizationManager) Declaration public Startup(IWebHostEnvironment env, ILocalizationManager localizationManager) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHostEnvironment env ILocalizationManager localizationManager Properties Configuration Declaration public IConfigurationRoot Configuration { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfigurationRoot Methods Configure(IApplicationBuilder, IWebHostEnvironment, ISyncManager) Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env, ISyncManager sync) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IWebHostEnvironment env ISyncManager sync ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/Oqtane.Themes.ContainerBase.html": {
    "href": "api/Oqtane.Themes.ContainerBase.html",
    "title": "Class ContainerBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ContainerBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase ContainerBase ModuleActionsBase Implements IThemeControl IContainerControl Inherited Members ThemeBase.JSRuntime ThemeBase.PageState ThemeBase.Name ThemeBase.Thumbnail ThemeBase.Panes ThemeBase.Resources ThemeBase.OnAfterRenderAsync(Boolean) ThemeBase.ThemePath() ThemeBase.NavigateUrl() ThemeBase.NavigateUrl(String) ThemeBase.NavigateUrl(Boolean) ThemeBase.NavigateUrl(String, Boolean) ThemeBase.NavigateUrl(String, String) ThemeBase.EditUrl(Int32, String) ThemeBase.EditUrl(Int32, String, String) ThemeBase.EditUrl(String, Int32, String, String) ThemeBase.ContentUrl(Int32) ThemeBase.ContentUrl(Int32, Boolean) ThemeBase.ImageUrl(Int32, Int32, Int32) ThemeBase.ImageUrl(Int32, Int32, Int32, String) ThemeBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Namespace : Oqtane.Themes Assembly : Oqtane.Client.dll Syntax public abstract class ContainerBase : ThemeBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl, IContainerControl Properties ModuleState Declaration [CascadingParameter] protected Module ModuleState { get; set; } Property Value Type Description Module Implements IThemeControl IContainerControl"
  },
  "api/Oqtane.Themes.Controls.html": {
    "href": "api/Oqtane.Themes.Controls.html",
    "title": "Namespace Oqtane.Themes.Controls | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Themes.Controls Classes LoginBase MenuBase MenuItemsBase ModuleActionsBase ModuleActionsBase.ActionViewModel"
  },
  "api/Oqtane.Themes.Controls.LoginBase.html": {
    "href": "api/Oqtane.Themes.Controls.LoginBase.html",
    "title": "Class LoginBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LoginBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase ThemeControlBase LoginBase Implements IThemeControl Inherited Members ThemeBase.JSRuntime ThemeBase.PageState ThemeBase.Name ThemeBase.Thumbnail ThemeBase.Panes ThemeBase.Resources ThemeBase.OnAfterRenderAsync(Boolean) ThemeBase.ThemePath() ThemeBase.NavigateUrl() ThemeBase.NavigateUrl(String) ThemeBase.NavigateUrl(Boolean) ThemeBase.NavigateUrl(String, Boolean) ThemeBase.NavigateUrl(String, String) ThemeBase.EditUrl(Int32, String) ThemeBase.EditUrl(Int32, String, String) ThemeBase.EditUrl(String, Int32, String, String) ThemeBase.ContentUrl(Int32) ThemeBase.ContentUrl(Int32, Boolean) ThemeBase.ImageUrl(Int32, Int32, Int32) ThemeBase.ImageUrl(Int32, Int32, Int32, String) ThemeBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Namespace : Oqtane.Themes.Controls Assembly : Oqtane.Client.dll Syntax public class LoginBase : ThemeControlBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl Properties jsRuntime Declaration [Inject] public IJSRuntime jsRuntime { get; set; } Property Value Type Description Microsoft.JSInterop.IJSRuntime LoggingService Declaration [Inject] public ILogService LoggingService { get; set; } Property Value Type Description ILogService NavigationManager Declaration [Inject] public NavigationManager NavigationManager { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.NavigationManager ServiceProvider Declaration [Inject] public IServiceProvider ServiceProvider { get; set; } Property Value Type Description System.IServiceProvider SiteState Declaration [Inject] public SiteState SiteState { get; set; } Property Value Type Description SiteState UserService Declaration [Inject] public IUserService UserService { get; set; } Property Value Type Description IUserService Methods LoginUser() Declaration protected void LoginUser() LogoutUser() Declaration protected async Task LogoutUser() Returns Type Description System.Threading.Tasks.Task Implements IThemeControl"
  },
  "api/Oqtane.Themes.Controls.MenuBase.html": {
    "href": "api/Oqtane.Themes.Controls.MenuBase.html",
    "title": "Class MenuBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class MenuBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase ThemeControlBase MenuBase MenuItemsBase Implements IThemeControl Inherited Members ThemeBase.JSRuntime ThemeBase.PageState ThemeBase.Name ThemeBase.Thumbnail ThemeBase.Panes ThemeBase.Resources ThemeBase.OnAfterRenderAsync(Boolean) ThemeBase.ThemePath() ThemeBase.NavigateUrl() ThemeBase.NavigateUrl(String) ThemeBase.NavigateUrl(Boolean) ThemeBase.NavigateUrl(String, Boolean) ThemeBase.NavigateUrl(String, String) ThemeBase.EditUrl(Int32, String) ThemeBase.EditUrl(Int32, String, String) ThemeBase.EditUrl(String, Int32, String, String) ThemeBase.ContentUrl(Int32) ThemeBase.ContentUrl(Int32, Boolean) ThemeBase.ImageUrl(Int32, Int32, Int32) ThemeBase.ImageUrl(Int32, Int32, Int32, String) ThemeBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Namespace : Oqtane.Themes.Controls Assembly : Oqtane.Client.dll Syntax public class MenuBase : ThemeControlBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl Properties MenuPages Declaration protected IEnumerable<Page> MenuPages { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Page > Methods GetTarget(Page) Declaration protected string GetTarget(Page page) Parameters Type Name Description Page page Returns Type Description System.String GetUrl(Page) Declaration protected string GetUrl(Page page) Parameters Type Name Description Page page Returns Type Description System.String Implements IThemeControl"
  },
  "api/Oqtane.Themes.Controls.MenuItemsBase.html": {
    "href": "api/Oqtane.Themes.Controls.MenuItemsBase.html",
    "title": "Class MenuItemsBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class MenuItemsBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase ThemeControlBase MenuBase MenuItemsBase Implements IThemeControl Inherited Members MenuBase.MenuPages MenuBase.GetTarget(Page) MenuBase.GetUrl(Page) ThemeBase.JSRuntime ThemeBase.PageState ThemeBase.Name ThemeBase.Thumbnail ThemeBase.Panes ThemeBase.Resources ThemeBase.OnAfterRenderAsync(Boolean) ThemeBase.ThemePath() ThemeBase.NavigateUrl() ThemeBase.NavigateUrl(String) ThemeBase.NavigateUrl(Boolean) ThemeBase.NavigateUrl(String, Boolean) ThemeBase.NavigateUrl(String, String) ThemeBase.EditUrl(Int32, String) ThemeBase.EditUrl(Int32, String, String) ThemeBase.EditUrl(String, Int32, String, String) ThemeBase.ContentUrl(Int32) ThemeBase.ContentUrl(Int32, Boolean) ThemeBase.ImageUrl(Int32, Int32, Int32) ThemeBase.ImageUrl(Int32, Int32, Int32, String) ThemeBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Namespace : Oqtane.Themes.Controls Assembly : Oqtane.Client.dll Syntax public abstract class MenuItemsBase : MenuBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl Properties Pages Declaration [Parameter] public IEnumerable<Page> Pages { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < Page > ParentPage Declaration [Parameter] public Page ParentPage { get; set; } Property Value Type Description Page Methods GetChildPages() Declaration protected IEnumerable<Page> GetChildPages() Returns Type Description System.Collections.Generic.IEnumerable < Page > Implements IThemeControl"
  },
  "api/Oqtane.Themes.Controls.ModuleActionsBase.ActionViewModel.html": {
    "href": "api/Oqtane.Themes.Controls.ModuleActionsBase.ActionViewModel.html",
    "title": "Class ModuleActionsBase.ActionViewModel | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleActionsBase.ActionViewModel Inheritance System.Object ModuleActionsBase.ActionViewModel Namespace : Oqtane.Themes.Controls Assembly : Oqtane.Client.dll Syntax public class ActionViewModel Properties Action Declaration public Func<string, PageModule, Task<string>> Action { get; set; } Property Value Type Description System.Func < System.String , PageModule , System.Threading.Tasks.Task < System.String >> Icon Declaration public string Icon { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/Oqtane.Themes.Controls.ModuleActionsBase.html": {
    "href": "api/Oqtane.Themes.Controls.ModuleActionsBase.html",
    "title": "Class ModuleActionsBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ModuleActionsBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase ContainerBase ModuleActionsBase Implements IThemeControl IContainerControl Inherited Members ContainerBase.ModuleState ThemeBase.JSRuntime ThemeBase.PageState ThemeBase.Name ThemeBase.Thumbnail ThemeBase.Panes ThemeBase.Resources ThemeBase.OnAfterRenderAsync(Boolean) ThemeBase.ThemePath() ThemeBase.NavigateUrl() ThemeBase.NavigateUrl(String) ThemeBase.NavigateUrl(Boolean) ThemeBase.NavigateUrl(String, Boolean) ThemeBase.NavigateUrl(String, String) ThemeBase.EditUrl(Int32, String) ThemeBase.EditUrl(Int32, String, String) ThemeBase.EditUrl(String, Int32, String, String) ThemeBase.ContentUrl(Int32) ThemeBase.ContentUrl(Int32, Boolean) ThemeBase.ImageUrl(Int32, Int32, Int32) ThemeBase.ImageUrl(Int32, Int32, Int32, String) ThemeBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Namespace : Oqtane.Themes.Controls Assembly : Oqtane.Client.dll Syntax public class ModuleActionsBase : ContainerBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl, IContainerControl Fields Actions Declaration public List<ModuleActionsBase.ActionViewModel> Actions Field Value Type Description System.Collections.Generic.List < ModuleActionsBase.ActionViewModel > Properties ModuleService Declaration [Inject] public IModuleService ModuleService { get; set; } Property Value Type Description IModuleService NavigationManager Declaration [Inject] public NavigationManager NavigationManager { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.NavigationManager PageModuleService Declaration [Inject] public IPageModuleService PageModuleService { get; set; } Property Value Type Description IPageModuleService Methods GetActions() Declaration protected virtual List<ModuleActionsBase.ActionViewModel> GetActions() Returns Type Description System.Collections.Generic.List < ModuleActionsBase.ActionViewModel > ModuleAction(ModuleActionsBase.ActionViewModel) Declaration protected async Task ModuleAction(ModuleActionsBase.ActionViewModel action) Parameters Type Name Description ModuleActionsBase.ActionViewModel action Returns Type Description System.Threading.Tasks.Task OnParametersSet() Declaration protected override void OnParametersSet() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Implements IThemeControl IContainerControl"
  },
  "api/Oqtane.Themes.html": {
    "href": "api/Oqtane.Themes.html",
    "title": "Namespace Oqtane.Themes | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.Themes Classes ContainerBase LayoutBase ThemeBase ThemeControlBase Interfaces IContainerControl ILayoutControl ITheme IThemeControl"
  },
  "api/Oqtane.Themes.IContainerControl.html": {
    "href": "api/Oqtane.Themes.IContainerControl.html",
    "title": "Interface IContainerControl | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IContainerControl Namespace : Oqtane.Themes Assembly : Oqtane.Client.dll Syntax public interface IContainerControl"
  },
  "api/Oqtane.Themes.ILayoutControl.html": {
    "href": "api/Oqtane.Themes.ILayoutControl.html",
    "title": "Interface ILayoutControl | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ILayoutControl Namespace : Oqtane.Themes Assembly : Oqtane.Client.dll Syntax public interface ILayoutControl"
  },
  "api/Oqtane.Themes.ITheme.html": {
    "href": "api/Oqtane.Themes.ITheme.html",
    "title": "Interface ITheme | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface ITheme Namespace : Oqtane.Themes Assembly : Oqtane.Client.dll Syntax public interface ITheme Properties Theme Declaration Theme Theme { get; } Property Value Type Description Theme"
  },
  "api/Oqtane.Themes.IThemeControl.html": {
    "href": "api/Oqtane.Themes.IThemeControl.html",
    "title": "Interface IThemeControl | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Interface IThemeControl Namespace : Oqtane.Themes Assembly : Oqtane.Shared.dll Syntax public interface IThemeControl Properties Name Friendly name for a theme Declaration string Name { get; } Property Value Type Description System.String Panes Identifies all panes in a theme ( delimited by \",\" or \";\") - assumed to be a layout if no panes specified Declaration string Panes { get; } Property Value Type Description System.String Resources Identifies all resources in a theme Declaration List<Resource> Resources { get; } Property Value Type Description System.Collections.Generic.List < Resource > Thumbnail Screen shot of a theme - assumed to be in the ThemePath() folder Declaration string Thumbnail { get; } Property Value Type Description System.String"
  },
  "api/Oqtane.Themes.LayoutBase.html": {
    "href": "api/Oqtane.Themes.LayoutBase.html",
    "title": "Class LayoutBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class LayoutBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase LayoutBase Implements IThemeControl ILayoutControl Inherited Members ThemeBase.JSRuntime ThemeBase.PageState ThemeBase.Name ThemeBase.Thumbnail ThemeBase.Panes ThemeBase.Resources ThemeBase.OnAfterRenderAsync(Boolean) ThemeBase.ThemePath() ThemeBase.NavigateUrl() ThemeBase.NavigateUrl(String) ThemeBase.NavigateUrl(Boolean) ThemeBase.NavigateUrl(String, Boolean) ThemeBase.NavigateUrl(String, String) ThemeBase.EditUrl(Int32, String) ThemeBase.EditUrl(Int32, String, String) ThemeBase.EditUrl(String, Int32, String, String) ThemeBase.ContentUrl(Int32) ThemeBase.ContentUrl(Int32, Boolean) ThemeBase.ImageUrl(Int32, Int32, Int32) ThemeBase.ImageUrl(Int32, Int32, Int32, String) ThemeBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Namespace : Oqtane.Themes Assembly : Oqtane.Client.dll Syntax [Obsolete(\"This class is deprecated\", false)] public abstract class LayoutBase : ThemeBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl, ILayoutControl Implements IThemeControl ILayoutControl"
  },
  "api/Oqtane.Themes.ThemeBase.html": {
    "href": "api/Oqtane.Themes.ThemeBase.html",
    "title": "Class ThemeBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ThemeBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase ContainerBase LayoutBase ThemeControlBase Implements IThemeControl Namespace : Oqtane.Themes Assembly : Oqtane.Client.dll Syntax public abstract class ThemeBase : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl Properties JSRuntime Declaration [Inject] protected IJSRuntime JSRuntime { get; set; } Property Value Type Description Microsoft.JSInterop.IJSRuntime Name Declaration public virtual string Name { get; set; } Property Value Type Description System.String PageState Declaration [CascadingParameter] protected PageState PageState { get; set; } Property Value Type Description PageState Panes Declaration public virtual string Panes { get; set; } Property Value Type Description System.String Resources Declaration public virtual List<Resource> Resources { get; set; } Property Value Type Description System.Collections.Generic.List < Resource > Thumbnail Declaration public virtual string Thumbnail { get; set; } Property Value Type Description System.String Methods ContentUrl(Int32) Declaration public string ContentUrl(int fileid) Parameters Type Name Description System.Int32 fileid Returns Type Description System.String ContentUrl(Int32, Boolean) Declaration public string ContentUrl(int fileid, bool asAttachment) Parameters Type Name Description System.Int32 fileid System.Boolean asAttachment Returns Type Description System.String EditUrl(Int32, String) Declaration public string EditUrl(int moduleid, string action) Parameters Type Name Description System.Int32 moduleid System.String action Returns Type Description System.String EditUrl(Int32, String, String) Declaration public string EditUrl(int moduleid, string action, string parameters) Parameters Type Name Description System.Int32 moduleid System.String action System.String parameters Returns Type Description System.String EditUrl(String, Int32, String, String) Declaration public string EditUrl(string path, int moduleid, string action, string parameters) Parameters Type Name Description System.String path System.Int32 moduleid System.String action System.String parameters Returns Type Description System.String ImageUrl(Int32, Int32, Int32) Declaration public string ImageUrl(int fileid, int width, int height) Parameters Type Name Description System.Int32 fileid System.Int32 width System.Int32 height Returns Type Description System.String ImageUrl(Int32, Int32, Int32, String) Declaration public string ImageUrl(int fileid, int width, int height, string mode) Parameters Type Name Description System.Int32 fileid System.Int32 width System.Int32 height System.String mode Returns Type Description System.String ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Declaration public string ImageUrl(int fileid, int width, int height, string mode, string position, string background, int rotate, bool recreate) Parameters Type Name Description System.Int32 fileid System.Int32 width System.Int32 height System.String mode System.String position System.String background System.Int32 rotate System.Boolean recreate Returns Type Description System.String NavigateUrl() Declaration public string NavigateUrl() Returns Type Description System.String NavigateUrl(Boolean) Declaration public string NavigateUrl(bool refresh) Parameters Type Name Description System.Boolean refresh Returns Type Description System.String NavigateUrl(String) Declaration public string NavigateUrl(string path) Parameters Type Name Description System.String path Returns Type Description System.String NavigateUrl(String, Boolean) Declaration public string NavigateUrl(string path, bool refresh) Parameters Type Name Description System.String path System.Boolean refresh Returns Type Description System.String NavigateUrl(String, String) Declaration public string NavigateUrl(string path, string parameters) Parameters Type Name Description System.String path System.String parameters Returns Type Description System.String OnAfterRenderAsync(Boolean) Declaration protected override async Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description System.Boolean firstRender Returns Type Description System.Threading.Tasks.Task Overrides Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) ThemePath() Declaration public string ThemePath() Returns Type Description System.String Implements IThemeControl"
  },
  "api/Oqtane.Themes.ThemeControlBase.html": {
    "href": "api/Oqtane.Themes.ThemeControlBase.html",
    "title": "Class ThemeControlBase | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class ThemeControlBase Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ThemeBase ThemeControlBase LoginBase MenuBase Implements IThemeControl Inherited Members ThemeBase.JSRuntime ThemeBase.PageState ThemeBase.Name ThemeBase.Thumbnail ThemeBase.Panes ThemeBase.Resources ThemeBase.OnAfterRenderAsync(Boolean) ThemeBase.ThemePath() ThemeBase.NavigateUrl() ThemeBase.NavigateUrl(String) ThemeBase.NavigateUrl(Boolean) ThemeBase.NavigateUrl(String, Boolean) ThemeBase.NavigateUrl(String, String) ThemeBase.EditUrl(Int32, String) ThemeBase.EditUrl(Int32, String, String) ThemeBase.EditUrl(String, Int32, String, String) ThemeBase.ContentUrl(Int32) ThemeBase.ContentUrl(Int32, Boolean) ThemeBase.ImageUrl(Int32, Int32, Int32) ThemeBase.ImageUrl(Int32, Int32, Int32, String) ThemeBase.ImageUrl(Int32, Int32, Int32, String, String, String, Int32, Boolean) Namespace : Oqtane.Themes Assembly : Oqtane.Client.dll Syntax public abstract class ThemeControlBase : ThemeBase, IComponent, IHandleEvent, IHandleAfterRender, IThemeControl Implements IThemeControl"
  },
  "api/Oqtane.UI.html": {
    "href": "api/Oqtane.UI.html",
    "title": "Namespace Oqtane.UI | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Namespace Oqtane.UI Classes Interop PageState Enums Refresh Runtime"
  },
  "api/Oqtane.UI.Interop.html": {
    "href": "api/Oqtane.UI.Interop.html",
    "title": "Class Interop | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class Interop Inheritance System.Object Interop Namespace : Oqtane.UI Assembly : Oqtane.Client.dll Syntax public class Interop Constructors Interop(IJSRuntime) Declaration public Interop(IJSRuntime jsRuntime) Parameters Type Name Description Microsoft.JSInterop.IJSRuntime jsRuntime Methods FormValid(ElementReference) Declaration public ValueTask<bool> FormValid(ElementReference form) Parameters Type Name Description Microsoft.AspNetCore.Components.ElementReference form Returns Type Description System.Threading.Tasks.ValueTask < System.Boolean > GetCookie(String) Declaration public ValueTask<string> GetCookie(string name) Parameters Type Name Description System.String name Returns Type Description System.Threading.Tasks.ValueTask < System.String > GetElementByName(String) Declaration public ValueTask<string> GetElementByName(string name) Parameters Type Name Description System.String name Returns Type Description System.Threading.Tasks.ValueTask < System.String > GetFiles(String) Declaration public ValueTask<string[]> GetFiles(string id) Parameters Type Name Description System.String id Returns Type Description System.Threading.Tasks.ValueTask < System.String []> IncludeLink(String, String, String, String, String, String, String) Declaration public Task IncludeLink(string id, string rel, string href, string type, string integrity, string crossorigin, string includebefore) Parameters Type Name Description System.String id System.String rel System.String href System.String type System.String integrity System.String crossorigin System.String includebefore Returns Type Description System.Threading.Tasks.Task IncludeLinks(Object[]) Declaration public Task IncludeLinks(object[] links) Parameters Type Name Description System.Object [] links Returns Type Description System.Threading.Tasks.Task IncludeMeta(String, String, String, String, String) Declaration public Task IncludeMeta(string id, string attribute, string name, string content, string key) Parameters Type Name Description System.String id System.String attribute System.String name System.String content System.String key Returns Type Description System.Threading.Tasks.Task IncludeScript(String, String, String, String, String, String) Declaration public Task IncludeScript(string id, string src, string integrity, string crossorigin, string content, string location) Parameters Type Name Description System.String id System.String src System.String integrity System.String crossorigin System.String content System.String location Returns Type Description System.Threading.Tasks.Task IncludeScripts(Object[]) Declaration public async Task IncludeScripts(object[] scripts) Parameters Type Name Description System.Object [] scripts Returns Type Description System.Threading.Tasks.Task RedirectBrowser(String, Int32) Declaration public Task RedirectBrowser(string url, int wait) Parameters Type Name Description System.String url System.Int32 wait Returns Type Description System.Threading.Tasks.Task RefreshBrowser(Boolean, Int32) Declaration public Task RefreshBrowser(bool force, int wait) Parameters Type Name Description System.Boolean force System.Int32 wait Returns Type Description System.Threading.Tasks.Task RemoveElementsById(String, String, String) Declaration public Task RemoveElementsById(string prefix, string first, string last) Parameters Type Name Description System.String prefix System.String first System.String last Returns Type Description System.Threading.Tasks.Task ScrollTo(Int32, Int32, String) Declaration public Task ScrollTo(int top, int left, string behavior) Parameters Type Name Description System.Int32 top System.Int32 left System.String behavior Returns Type Description System.Threading.Tasks.Task ScrollToId(String) Declaration public Task ScrollToId(string id) Parameters Type Name Description System.String id Returns Type Description System.Threading.Tasks.Task SetCookie(String, String, Int32) Declaration public Task SetCookie(string name, string value, int days) Parameters Type Name Description System.String name System.String value System.Int32 days Returns Type Description System.Threading.Tasks.Task SetElementAttribute(String, String, String) Declaration public Task SetElementAttribute(string id, string attribute, string value) Parameters Type Name Description System.String id System.String attribute System.String value Returns Type Description System.Threading.Tasks.Task SubmitForm(String, Object) Declaration public Task SubmitForm(string path, object fields) Parameters Type Name Description System.String path System.Object fields Returns Type Description System.Threading.Tasks.Task UpdateTitle(String) Declaration public Task UpdateTitle(string title) Parameters Type Name Description System.String title Returns Type Description System.Threading.Tasks.Task UploadFiles(String, String, String) Declaration public Task UploadFiles(string posturl, string folder, string id) Parameters Type Name Description System.String posturl System.String folder System.String id Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Oqtane.UI.PageState.html": {
    "href": "api/Oqtane.UI.PageState.html",
    "title": "Class PageState | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Class PageState Inheritance System.Object PageState Namespace : Oqtane.UI Assembly : Oqtane.Client.dll Syntax public class PageState Properties Action Declaration public string Action { get; set; } Property Value Type Description System.String Alias Declaration public Alias Alias { get; set; } Property Value Type Description Alias EditMode Declaration public bool EditMode { get; set; } Property Value Type Description System.Boolean LastSyncDate Declaration public DateTime LastSyncDate { get; set; } Property Value Type Description System.DateTime ModuleId Declaration public int ModuleId { get; set; } Property Value Type Description System.Int32 Modules Declaration public List<Module> Modules { get; set; } Property Value Type Description System.Collections.Generic.List < Module > Page Declaration public Page Page { get; set; } Property Value Type Description Page Pages Declaration public List<Page> Pages { get; set; } Property Value Type Description System.Collections.Generic.List < Page > QueryString Declaration public Dictionary<string, string> QueryString { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > RemoteIPAddress Declaration public string RemoteIPAddress { get; set; } Property Value Type Description System.String Runtime Declaration public Runtime Runtime { get; set; } Property Value Type Description Runtime Site Declaration public Site Site { get; set; } Property Value Type Description Site Uri Declaration public Uri Uri { get; set; } Property Value Type Description System.Uri UrlParameters Declaration public string UrlParameters { get; set; } Property Value Type Description System.String User Declaration public User User { get; set; } Property Value Type Description User VisitorId Declaration public int VisitorId { get; set; } Property Value Type Description System.Int32"
  },
  "api/Oqtane.UI.Refresh.html": {
    "href": "api/Oqtane.UI.Refresh.html",
    "title": "Enum Refresh | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum Refresh Namespace : Oqtane.UI Assembly : Oqtane.Client.dll Syntax public enum Refresh Fields Name Description Application None Page Site"
  },
  "api/Oqtane.UI.Runtime.html": {
    "href": "api/Oqtane.UI.Runtime.html",
    "title": "Enum Runtime | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Enum Runtime Namespace : Oqtane.UI Assembly : Oqtane.Client.dll Syntax [Obsolete(\"This enum is deprecated and will be removed in the upcoming major release, please use Oqtane.Shared.Runtime instead.\")] public enum Runtime Fields Name Description Server WebAssembly"
  },
  "index.html": {
    "href": "index.html",
    "title": "Oqtane Documentation 3.1.1 | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane Documentation 3.1.1 Oqtane is the Modular Application Framework for Blazor Modern, Flexible, and Open Source - running on .NET 6.0! Documentation Contents In the Overview you'll find information about the project, concepts, building the documentation, and article and video links The Administration Manuals you'll find instructions for administrators In the API Documentation you'll find all the APIs To work on the docs, read up on how the docs work"
  },
  "overview/articles.html": {
    "href": "overview/articles.html",
    "title": "Oqtane Articles | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane Articles BlazorHelpWebsite.com: Configuring The Blazor Oqtane Blog Module BlazorHelpWebsite.com: Creating a Custom Distribution of Blazor Oqtane Using Site Templates BlazorHelpWebsite.com: Oqtane Deploy to Azure BlazorHelpWebsite.com: Installing Blazor Oqtane BlazorHelpWebsite.com: Oqtane Module Creator BlazorHelpWebsite.com: What is Blazor Oqtane?"
  },
  "overview/concepts/dll-handling.html": {
    "href": "overview/concepts/dll-handling.html",
    "title": "Oqtane Concepts: DLL Handling | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane Concepts: DLL Handling How / Why DLLs are loaded into memory: the .NET Core philosophy is to only load the specific assemblies an app needs ( to reduce startup time and memory ) by default .NET Core will only load assemblies statically linked to the main app - it will not load every DLL in the /bin it will not load Oqtane module/theme DLLs as these are dynamically linked therefore Oqtane needs to manually load its modules/themes in order to do this it needs to be able to quickly identify the DLLs the only option available is via filename, as any other approach requires reflection which consumes startup time/processing and memory the convention is that the filename must contain oqtane once the required DLLs are loaded into the AppDomain, subsequent operations for assemblies can use the AppDomain rather than the file system the majority of assemblies in the AppDomain are not relevant to Oqtane reflection is expensive so we should only use reflection on assemblies which are actually relevant to Oqtane assembly fullname is same as DLL filename, so we can look for the oqtane qualifier to identify Oqtane assemblies"
  },
  "overview/concepts/index.html": {
    "href": "overview/concepts/index.html",
    "title": "Oqtane Concepts | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane Concepts Oqtane Conceptual Hierarchy From a conceptual viewpoint, there are multiple hierarchical levels for an Oqtane installation as summarized below. Host - The highest level. There is only one host per Oqtane instance. To change settings for a host, a user needs to have the Host Users role. Site - The second highest level. There can be one or more sites within a host because Oqtane has a multitenant architecture. The Host Users and Administrators roles have privileges to change settings for a site. Page - The third highest level. There can be one or more pages within a site. The Host Users and Administrators roles have privileges to change settings and content for a page. Module - The fourth highest level. There can be one or more modules within a page. The Host Users and Administrators roles have privileges to change settings for a module and to create a new module. This hierarchy is illustrated below. Note that this diagram is also the inspiration for the graphic seen on the right side of heading bars throughout this documentation. The graphic can act as a reminder for the conceptual hierarchy within Oqtane."
  },
  "overview/documentation/api-menu.html": {
    "href": "overview/documentation/api-menu.html",
    "title": "How the API-Navigation (TOC) Works | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "How the API-Navigation (TOC) Works The API navigation can be quite tricky, because the default docfx behavior results in a very hard-to-use TOC-menu on the side. Because of this, we use a special trick where a javascript in layout\\oqtane\\toc.extension.js optimizes the names based on some rules. Here's what it does The prefix Oqtane. is removed by default (unless that's all there is) If the remaining namespace has more than 2 parts, it will be truncated with a prefix ... to make it fit better 😎 In addition, it looks up if the namespace has metadata (in the namespace-metadata.js ) to give it better colors and icons."
  },
  "overview/documentation/build.html": {
    "href": "overview/documentation/build.html",
    "title": "Build and Deploy the Documentation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Build and Deploy the Documentation Setup You must have a folder containing both the oqtane.docs and the oqtane.framework subfolders - like this: Build with VS Code (recommended) Open the subfolder Oqtane.Docs in VS Code (so not the top-level folder, but in the example above Oqtane/octane.docs/Oqtane.Docs/ ). Hit Ctrl + Shift + P and select \"Run Task\"... ...and then \"Build\" In the output you should then see a bunch of stuff - ending with Build Succeeded Build with Visual Studio 2019 Open the docs solution in Visual Studio Hit Ctrl+Shift+B to run build Deploy Push back the docs to the git-repo, Github will automatically deploy it for you."
  },
  "overview/documentation/code.html": {
    "href": "overview/documentation/code.html",
    "title": "Documenting Code | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Documenting Code Basic Documentation For starters, you will add normal documentation with /// <summary> tags to your code, like this: /// <summary> /// Constructor which does xyz /// </summary> /// <param name=\"id\">the id</param> public MyMethod(int id) { } All this is automatically picked up and converted to documentation. Adding Extensive Documentation Let's assume you have a class Oqtane.Example.MyClass and you would like to add images and a lot of markdown to explain what it does. This is your code: /// <summary> /// This class does something /// </summary> public class MyClass { } Now go to the documentation project Oqtane.Docs in the solution and open the apidoc\\Example folder (create it, if it doesn't exist yet'). In this, create a MyClass.md file which contains this --- uid: Oqtane.Example.MyClass --- Here is some **great** additional [Information](https://oqtane.org). 1. Do this 1. Then that Because you have the uid: ... header in your file, docfx will now combine these documentations in the output. You can also add images, html, or whatever you need. You can also find examples of this merge in the apidoc\\Documentation\\PublicApi.md file. Documenting Namespaces It's usually very helpful to document what a namespace does. Using the same mechanism with the uid: you can create markdown files which will show extensive instructions. Check out the apidoc\\Documentation\\index.md file for an example."
  },
  "overview/documentation/folders.html": {
    "href": "overview/documentation/folders.html",
    "title": "Folders and Files in the Oqtane Docs Project | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Folders and Files in the Oqtane Docs Project API Documentation Folders The api folder contains the home-page for the API docs. The apidoc folder contains markdown .md files which are merged with comments in the code. The merging happens because the unique ID of the md files matches the full namespace of the code. Article Folders The articles folder contains general articles The how-to folder The specs folder contains specifications, concepts etc. IDs of Contents in this folder should start with Specs Assets Folders We recommend placing all assets - mostly images - in assets subfolders everywhere. This ensures that the image really belongs to that folder and can be deleted again, if not in use."
  },
  "overview/documentation/how-it-works.html": {
    "href": "overview/documentation/how-it-works.html",
    "title": "How the Documentation System Works | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "How the Documentation System Works The initial configuration starts with the docfx.json file. Basically this says what code it should pick up, where the .md files are and where to put the output. We've tried to make it very clear where we made relevant changes and smuggled comment-nodes into the file for clarity. Layout The layout is configured in the docfx.json where it will start with the default template, extend it with statictoc (generate real html menu-structures, not just JS) and then apply the layout specified in layout\\oqtane . It will also include images in layout\\images like logos etc. because this was configured in docfx.json . Site Navigation The site navigation is cascaded through the toc.yml files in each folder. Tip You may also find examples online which use toc.md files but you'll run into requirements that will force you to switch back to YAML. So we recommend you stick to the yaml format everywhere. What Code is included in the Docs The initial set is configured in the docfx.json with the base path cwd and include/filter files. Then we have a few basic rules, which are all configured in the filterConfig.yml file. Ignore all Microsoft.* , System.* and Oqtane.Test.* namespaces Troubleshooting Problems with MSBuild or .net SDK Docfx runs MSBuild to compile the projects it finds. This can easily cause trouble if your Dev-PC has been through various versions of Visual-Studio. If you need to troubleshoot this, best contact iJungleboy on Github. Problems with Old / Unexpected Results MSBuild will compile everyting into the obj folder of this docs-project. This is used as a cache for the next builds. If you run into unexpected results, always clean out the obj folder first. Problems with Github links Docfx automatically links all the auto-generated docs with the git-repo. So make sure that the oqtane.framework is pulled from the official location https://github.com/oqtane/oqtane.framework - otherwise the links will point to another repo."
  },
  "overview/documentation/index.html": {
    "href": "overview/documentation/index.html",
    "title": "Oqtane Documentation | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane Documentation Here we'll explain how the documentation works, with all the magic in it. The Basics The Oqtane.Docs project generates the documentation for Oqtane using docfx . The generator will compile all of Oqtane and create an output into ../docs . Note that this docs project is outside of the normal oqtane.framework repo structure, because it's meant to be deployed to a separate repo https://github.com/oqtane/oqtane.docs and then hosted on https://docs.oqtane.org Important Considerations As of now (September 2020) docfx in Visual Studio still requires the full .net framework; a port to .net core is almost complete. For this reason, documentation generation currently still requires a windows PC. We'll transition to full .net core docs when docfx is ready, probably Q1 2021."
  },
  "overview/documentation/markdown.html": {
    "href": "overview/documentation/markdown.html",
    "title": "Markdown Tips in the Octane Docs | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Markdown Tips in the Octane Docs Refer to Markdown for how to write markdown files. Here the most important tips for people working with this: Links Link to a website [website](https://www.oqtane.org/) Link to another page [page](./build.md) Link to some Oqtane.Models [](xref:Oqtane.Models) - will automatically pick the name of the target Link to a class File [](xref:Oqtane.Models.File) Images Images can be added it two ways - using markdown, or the HTML counterpart. We recommend to always place images in an assets folder below the markdown file you're using the image on. Here's an example using markdown: ![Folder structure for Building](./assets/folder-structure-for-building.jpg) Here an example using an <img> tag which lets you provide more settings: <img src=\"./assets/folder-structure-for-building.jpg\" width=\"100%\"> Checklists If you want to add checklists like this example, just use this checklist 😎 Videos Todo"
  },
  "overview/documentation/run-in-iis.html": {
    "href": "overview/documentation/run-in-iis.html",
    "title": "Run Oqtane Docs Locally | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Run Oqtane Docs Locally The generated docs are static pages and contain various JavaScripts to provide menu and search functionality. These do not work, if you just open the index.html in a browser. So you need to run it in a local IIS to fully test it. This is how you can set it up: Warning about Caching The navigation / menus in docfx use JavaScript, so you'll sometimes see an old cached menu on your local system. Just activate F12 and disable cache to ensure that you're always viewing the latest build."
  },
  "overview/index.html": {
    "href": "overview/index.html",
    "title": "Introduction to Oqtane | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Introduction to Oqtane Oqtane is an open source and cross-platform modular application framework for building single-page applications on .NET. Oqtane apps are composed of reusable web UI components implemented using C#, HTML, and CSS. Both the client and server code is written in C#, providing a consistent and efficient development experience. Blazing a New Trail Oqtane is pioneering the use of Blazor, the revolutionary new development framework from Microsoft that lets you build interactive web UIs using C# instead of JavaScript. Oqtane supports both the Blazor Server and Blazor WebAssembly hosting models. Open Source Oqtane is available under the industry standard MIT open source license and is an official member of the .NET Foundation. Cross Platform Oqtane is a native .NET Core application and can be used on all major enterprise IT platforms. It currently supports SQL Server, MySQL, SQLite, and PostgreSQL databases. Modular Architecture Oqtane has a modular architecture which allows it to serve as an integration fabric for building composite applications. The framework can be easily extended with custom modules and themes. Modules are created as standard .NET Core applications using Blazor components for the UI and can be developed, packaged and installed independently from the Oqtane framework. The framework utilizes open web UI standards (ie. HTML and CSS3) as well as Bootstrap 5 as the default CSS framework for creating modern user experiences. Multi-Tenant Oqtane can serve the needs of multiple clients from a single installation. It supports both shared and isolated tenancy models to enable you to comply with data privacy regulations. Composite UI The framework provides the capability for an admnistrator to dynamically construct a page from existing components without writing any code. Headless API The framework provides a rich set of secure REST-based core APIs which can be leveraged in custom modules. Swagger integration is included by default to simplify API integration."
  },
  "overview/intro.html": {
    "href": "overview/intro.html",
    "title": "Add your introductions here! | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Add your introductions here!"
  },
  "overview/videos.html": {
    "href": "overview/videos.html",
    "title": "Oqtane Videos | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane Videos All videos are on YouTube unless designated otherwise. Oqtane Channel Official Oqtane channel Oqtane Dev Channel Channel with some videos on Oqtane Development Oqtane Module Development [ 2020 Jul 21 ] Series of videos on Oqtane Module Development Oqtane 3.1 Release [ 2022 Apr 13 ~ 34:55 ] YouTube demo of new Oqtane 3.1 features like OpenId Connect, OAuth 2.0, Jwt Tokens Azure DevOps Podcast, ep. 179 [ 2022 Feb 7 ~ 41:46 ] Blazor and Oqtane with Shaun Walker Building dynamic applications with Blazor [ 2021 Jul 10 ~ 2:14:21 ] Shaun Walker talks about Blazor and gives an overview of Oqtane also Rockin the Code World with dotNetDave, Ep. 25 [ 2021 May 22 ~ 1:07:57 ] Interview with Michael Washington, contributor to Oqtane core and module development Install Oqtane 2 from Scratch [ 2021 May 7 ~ 33:37 ] Daniel Mettler gives a presentation on installing Oqtane 2 and the 2sxc content management module Trailblazor: Building Dynamic Applications with Blazor [ 2021 Apr 28 ~ 54:22 ] Shaun Walker's presentation at Codecamp Romania, The One with .NET ASP.NET Community Standup with Shaun Walker [ 2021 Apr 13 ~ 1:19:52 ] Shaun Walker gives an overview of the Oqtane features Implementing XPO in an Oqtane module [ 2021 Mar 2 ~ 45:55 ] Joche Ojeda implementing an Oqtane module for XPO, an ORM library from DevExpress .NET Foundation Project Spotlight - Oqtane [ 2021 Jan 21 ~ 29:32 ] Isaac Levin interviews Shaun Walker about Oqtane Playing with Fire: Blazor on Oqtane [ 2020 Sept 16 ~ 1:01:02 ] Shaun Walker's presentation on Blazor and Oqtane Insights from Shaun Walker [ 2020 Aug 9 ~ 10:58 ] Insights from Shaun Walker about his experiences with open source software Introducing Oqtane - Rocket Fuel for Blazor [ 2020 Jul 30 ~ 1:03:58 ] Shaun Walker gives an overview of the architecture of Oqtane 1.02"
  },
  "readme.html": {
    "href": "readme.html",
    "title": "Oqtane Docs Builder | Oqtane Docs - APIs and more for the Modular Blazor Application Framework",
    "keywords": "Oqtane Docs Builder Read the readme.md in the parent folder"
  }
}